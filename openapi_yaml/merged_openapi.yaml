openapi: 3.0.3
info:
    title: Payment Method Tokens
    description: The Payment Method Tokens API saves payment methods so payers don't have to enter details for future transactions. Payers can check out faster or pay without being present after they agree to save a payment method.<br><br>The API associates a payment method with a temporary setup token. Pass the setup token to the API to exchange the setup token for a permanent token.<br><br>The permanent token represents a payment method that's saved to the vault. This token can be used repeatedly for checkout or recurring transactions such as subscriptions.
    version: "3.1"
    contact: {}
servers:
    - url: https://api-m.sandbox.paypal.com
      description: PayPal Sandbox Environment
    - url: https://api-m.paypal.com
      description: PayPal Live Environment
tags:
    - name: plans
      description: Use the `/billing/plans` resource to create and manage plans.
    - name: subscriptions
      description: Use the `/billing/subscriptions` resource to create and manage subscriptions.
    - name: products
      description: Use `/products` resource to create and manage products.
    - name: orders
      description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Use the <code>/orders</code> resource to authorize, capture, void, and show details for an order.<blockquote><strong>Note:</strong> You cannot refund an order directly. Instead, you must refund a completed payment for an order. For integration information, see <a href="/docs/integration/direct/payments/orders/">Orders</a> and <a href="/docs/integration/direct/payments/refund-payments/">refund payment</a>.</blockquote>For more information, see also <a href="/docs/integration/direct/payments/orders/">Orders</a>.
    - name: orders-payment-actions
      description: Use the `/checkout/orders` resource with the `/pay` action to pay for an order. When you [create an order](#orders_create), the response includes an approval URL. Redirect the customer to this approval URL.
    - name: trackers
      description: Use the `/trackers` resource to create and manage tracking information for PayPal transactions.
    - name: disputes
      description: Use the `/disputes` resource to list disputes, create disputes, show dispute details, and partially a dispute. Normally, an agent at PayPal creates disputes but now you can run test cases in the sandbox that create disputes.
    - name: disputes-actions
      description: Use the `/disputes` resource with a dispute ID and an action to:<ul><li>Accept a claim.</li><li>Accept an offer to resolve a dispute.</li><li>Acknowledge the return of an item related to a dispute.</li><li>Settle a dispute.</li><li>Appeal a dispute.</li><li>Cancel a dispute.</li><li>Change the reason for a dispute.</li><li>Deny an offer to resolve dispute.</li><li>Escalate a dispute to a claim.</li><li>Make an offer to resolve a dispute.</li><li>Make an offer to resolve a dispute.</li><li>Provide evidence for a dispute.</li><li>Provide supporting information for dispute.</li><li>In the sandbox, update the dispute status.</li><li>Send a message about a dispute to the other party in the dispute.</li><ul>
    - name: customer-referred-disputes
      description: Use the `/customer/referred-disputes` resource to create a dispute for a referred case that was created by a partner or marketplace, show details for a referred dispute, by ID, notify referred refunds completed to PayPal, notify PayPal about referred dispute adjudication updates, and determine the dispute eligibility for referred disputes.
    - name: validate-eligibility
      description: Use the `/validate-eligibility/` resource to determine whether you can create a case for a transaction.
    - name: compute-metrics
      description: Use the `/compute-metrics` resource to provide metrics for all disputes.
    - name: validate-referred-dispute-eligibility
      description: Use the `/validate-referred-dispute-eligibility` resource to determine whether you can create a referred case for a transaction, by encrypted transaction ID.
    - name: referred-disputes
      description: Use the `/referred-disputes` resource to create a dispute for a referred case that was created by a partner or marketplace, show details for a referred dispute, by ID, notify referred refunds completed to PayPal, notify PayPal about referred dispute adjudication updates, and determine the dispute eligibility for referred disputes.
    - name: referred-disputes-actions
      description: Use the `/referred-disputes` resource with a dispute ID and an action to notify PayPal about adjudication updates for a referred dispute and notify PayPal about a refund for a referred dispute.
    - name: partner-actions
      description: Use the `/disputes/{id}/partner-actions/` resource to show dispute action details and partially update a dispute action.
    - name: search-suggestions
      description: Use the `/search-suggestions` resource to show search suggestions.
    - name: dispute-events
      description: Use the `/dispute-events` resource to send dispute events.
    - name: refund-preference
      description: Use the `/disputes/{id}/provide-refund-preference` resource to provide refund preferences for the dispute.
    - name: merchant-integration
      description: Enables you to get information about a seller-partner integration.
    - name: partner-referrals
      description: Enables you to create and get information about shared customer data.
    - name: partner-referral-link
      description: Links partner-referral data with a PayPal account.
    - name: cancel-onboarding
      description: Enables you to cancel an in-progress seller onboarding.
    - name: partner
      description: Enables you to create, update and read partner agreements and preferences.
    - name: invoices
      description: Use the `/invoices` resource to create, update, and send invoices and invoice reminders. To manage invoices, you can also list invoices, show details for invoices, delete draft invoices, and cancel sent invoices. You can also record payments for invoices to mark them as fully or partially paid, or record refunds for invoices to mark them as fully or partially refunded. You can create QR codes for invoices that can be scanned, viewed, and paid by a mobile phone.
    - name: templates
      description: Use the `/templates` resource to create, list, show details for, update, and delete invoice templates. Use the `/templates` resource when you create a third-party invoicing application. For instance, a business can create a template with predefined invoice data. Later, the business can select the template to populate the invoice data.<blockquote><strong>Note:</strong> To upload a logo to display on an invoice, you can use the <strong>Template Settings</strong> dashboard to <a href="https://www.paypal.com/invoice/settings/templates">create a template</a>. When you create an invoice, you can use the URI for that logo.</blockquote>
    - name: files
      description: Use the `/files` resource to upload a file attachment for an invoice.
    - name: group-invoices
      description: Use the `/group-invoices` resource to create a batch, or group of, invoices.
    - name: search
      description: Use the `/search` resource to search for invoices.
    - name: summaries
      description: Use the `/summaries` resource to list invoice summary information, including counts. The list is grouped by invoice status.
    - name: search-invoices
      description: Use the `/search-invoices` resource to search for and list invoices that match search criteria.
    - name: merchant-config
      description: Use the `/merchant-config` resource to create, update and show details of merchant configuration.
    - name: webhooks
      description: Use the `/webhooks` resource to subscribe your webhook listener to events, list webhooks for an app, show details for, update, delete, and list event subscriptions for webhooks.
    - name: webhooks-lookup
      description: Use the `/webhooks-lookup` resource to create, list, show details for, and delete webhook lookups.
    - name: verify-webhook-signature
      description: Use the `/verify-webhook-signature` resource to verify a webhook signature.
    - name: webhooks-event-types
      description: Use the `/webhooks-event-types` resource to list available events to which any webhook can subscribe.
    - name: webhooks-events
      description: Use the `/webhooks-events` resource to list, show details for, and resend event notifications.
    - name: simulate-event
      description: Use the `/simulate-event` resource to use a sample payload to simulate a webhook event. The events that this call generates only serve to validate the connection to the listener URL and to show how webhook events look. <blockquote><strong>Note:</strong> You can also use the <a href="/docs/api/notifications/webhooks/simulator/">Webhooks simulator</a> to simulate webhook events.</blockquote>
    - name: publish-event-with-payload
      description: Use the `/publish-event-with-payload` resource to publish an event with a specified payload.
    - name: publish-event-with-reference
      description: Use the `/publish-event-with-reference` resource to publish an event with a specified reference.
    - name: webhook-event-delivery-status
      description: Use the `/webhook-event-delivery-status` resource to show the webhook event send status.
    - name: webhooks-error-types
      description: Use the `/error-types` resource to create and list available webhook error types.
    - name: webhooks-errors
      description: Use the `/webhooks-errors` resource to create, list, show details for, and update webhook errors.
    - name: batch-resend
      description: Use the `/batch-resend` resource to send out IPN/Webhooks in batches.
    - name: web-profiles
      description: Use the `/payment-experience/web-profiles` resource to create, show details for, list, update, partially update, and delete web experience profiles.
    - name: payment
      description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Use the <code>/payment</code> resource to create a <em>sale</em>, an <em>authorized payment</em>, or an <em>order</em>. A sale is a direct credit card payment, stored credit card payment, or PayPal payment. An authorized payment places funds on hold to be captured later. An order is a purchase that a customer has approved but for which the funds are not placed on hold. You can also use this resource to execute approved PayPal payments and show details for, update, and list payments. For more information, see also <a href="/docs/integration/direct/payments/"Payments</a>.
    - name: sale
      description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>A <em>sale</em> is a completed payment. Use the <code>/sale</code> resource to show sale details and refund a sale. For more information, see also <a href="/docs/integration/direct/payments/refund-payments/">Refund payments</a>.
    - name: authorization
      description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Use the <code>/authorization</code> resource and related sub-resources to show details for, capture, void, and reauthorize an authorization.
    - name: capture
      description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Use the <code>/capture</code> resource and sub-resources to show details for and refund captured payments.
    - name: refund
      description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Use the <code>/refund</code> resource to show details for a refund on direct and captured payments.
    - name: receipt
      description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Use the <code>/receipt</code> resource to show details for a payment receipt.
    - name: authorizations
      description: Use the `/authorizations` resource to show details for, capture payment for, reauthorize, and void authorized payments.
    - name: captures
      description: Use the `/captures` resource to show details for and refund a captured payment.
    - name: refunds
      description: Use the `/refunds` resource to show refund details.
    - name: assets
      description: Assets APIs for Checkout
    - name: cancel-payment
      description: Use the <code>/cancel-payment</code> resource to cancel an order capture or order authorization by <code>PayPal-Request-Id</code>. The merchant triggers the cancel action.
    - name: find-eligible-methods
      description: Use the `/find-eligible-methods` resource to show list of eligible payment methods for given customer/order context.
    - name: payment-resource-operations
      description: Use the `/payment-resource-operations` resource to show verifications details.
    - name: payouts
      description: Use the `/payouts` resource to create a batch payout, update the status for a batch payout, show the status of a batch payout with the transaction status and other data for individual payout items, and request approval for a batch payout.
    - name: payouts-item
      description: Use the `/payouts-item` resource to show payout item details and cancel an unclaimed payout item.
    - name: payouts-statistics
      description: Use the `/payouts-statistics` resource to show statistics for a batch payout by date range.
    - name: payouts-disbursement-notifications
      description: Use the `payouts/disbursement-notifications` resource for status updates from <code>VENMO</code>
    - name: transactions
      description: Use the `/transactions` resource to list transactions.
    - name: partner-transactions
      description: Use the `/partner-transactions` resource to list transactions.
    - name: balances
      description: Use the `/balances` resource to list balances.
    - name: trackers-batch
      description: Use the `/trackers-batch` resource to add tracking information for multiple PayPal transactions.
    - name: carriers-recommend
      description: Use the `/carriers-recommendations` to detect the possible carriers corresponding the tracking info from tracking aggregator.
    - name: carriers
      description: Use the `/carriers` resource to list/detect all the carriers available for tracking in PayPal and its subsidiary.
    - name: shipments
      description: Use the `/shipments` resource to fetch all the shipments associated with a given Paypal Account Id.
    - name: shipment-tracker
      description: Use the `/shipment-tracker` resource to track the shipment.
    - name: unsubscribe-shipment-tracking
      description: Use the `/unsubscribe-shipment-tracking` resource to unsubscribe from multiple shipments.
    - name: payment-tokens
      description: Use the `/vault/payment-tokens` resource to create, retrieve, and delete a payment token that may optionally be associated with a customer.
    - name: setup-tokens
      description: Use the `/vault/setup-tokens` resource to create and retrieve temporary vault payment methods.
    - name: tokens
      description: Use the `/vault/tokens` resource to detokenize a vault token to retrieve details associated to the underlying payment source.
    - name: customers
      description: Use the `/vault/customers` resource to create, update, get and delete a customer.
externalDocs:
    url: https://developer.paypal.com/docs/api/vault/v3/
paths:
    /v1/billing/plans:
        post:
            summary: Create plan
            description: Creates a plan that defines pricing and billing cycle details for subscriptions.
            operationId: plans.create
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows billing plan details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/plan'
                            examples:
                                plan:
                                    value:
                                        id: P-5ML4271244454362WXNWU5NQ
                                        product_id: PROD-XXCD1234QWER65782
                                        name: Video Streaming Service Plan
                                        description: Video Streaming Service basic plan
                                        status: ACTIVE
                                        billing_cycles:
                                            - frequency:
                                                interval_unit: MONTH
                                                interval_count: 1
                                              tenure_type: TRIAL
                                              sequence: 1
                                              total_cycles: 2
                                              pricing_scheme:
                                                fixed_price:
                                                    value: "3"
                                                    currency_code: USD
                                                version: 1
                                                create_time: "2020-05-27T12:13:51Z"
                                                update_time: "2020-05-27T12:13:51Z"
                                            - frequency:
                                                interval_unit: MONTH
                                                interval_count: 1
                                              tenure_type: TRIAL
                                              sequence: 2
                                              total_cycles: 3
                                              pricing_scheme:
                                                fixed_price:
                                                    currency_code: USD
                                                    value: "6"
                                                version: 1
                                                create_time: "2020-05-27T12:13:51Z"
                                                update_time: "2020-05-27T12:13:51Z"
                                            - frequency:
                                                interval_unit: MONTH
                                                interval_count: 1
                                              tenure_type: REGULAR
                                              sequence: 3
                                              total_cycles: 12
                                              pricing_scheme:
                                                fixed_price:
                                                    currency_code: USD
                                                    value: "10"
                                                version: 1
                                                create_time: "2020-05-27T12:13:51Z"
                                                update_time: "2020-05-27T12:13:51Z"
                                        payment_preferences:
                                            auto_bill_outstanding: true
                                            setup_fee:
                                                value: "10"
                                                currency_code: USD
                                            setup_fee_failure_action: CONTINUE
                                            payment_failure_threshold: 3
                                        taxes:
                                            percentage: "10"
                                            inclusive: false
                                        create_time: "2020-05-27T12:13:51Z"
                                        update_time: "2020-05-27T12:13:51Z"
                                        links:
                                            - href: https://api-m.paypal.com/v1/billing/plans/P-5ML4271244454362WXNWU5NQ
                                              rel: self
                                              method: GET
                                            - href: https://api-m.paypal.com/v1/billing/plans/P-5ML4271244454362WXNWU5NQ
                                              rel: edit
                                              method: PATCH
                                            - href: https://api-m.paypal.com/v1/billing/plans/P-5ML4271244454362WXNWU5NQ/deactivate
                                              rel: deactivate
                                              method: POST
                                            - href: https://api-m.paypal.com/v1/billing/plans/P-5ML4271244454362WXNWU5NQ/update-pricing-schemes
                                              rel: edit
                                              method: POST
                "201":
                    description: A successful request returns the HTTP `201 Created` status code and a JSON response body that shows billing plan details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/plan'
                "400":
                    description: Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/plans.create-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/prefer'
                - $ref: '#/components/parameters/paypal_request_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/plan_request_POST'
                        examples:
                            plan_request_post:
                                value:
                                    product_id: PROD-XXCD1234QWER65782
                                    name: Video Streaming Service Plan
                                    description: Video Streaming Service basic plan
                                    status: ACTIVE
                                    billing_cycles:
                                        - frequency:
                                            interval_unit: MONTH
                                            interval_count: 1
                                          tenure_type: TRIAL
                                          sequence: 1
                                          total_cycles: 2
                                          pricing_scheme:
                                            fixed_price:
                                                value: "3"
                                                currency_code: USD
                                        - frequency:
                                            interval_unit: MONTH
                                            interval_count: 1
                                          tenure_type: TRIAL
                                          sequence: 2
                                          total_cycles: 3
                                          pricing_scheme:
                                            fixed_price:
                                                value: "6"
                                                currency_code: USD
                                        - frequency:
                                            interval_unit: MONTH
                                            interval_count: 1
                                          tenure_type: REGULAR
                                          sequence: 3
                                          total_cycles: 12
                                          pricing_scheme:
                                            fixed_price:
                                                value: "10"
                                                currency_code: USD
                                    payment_preferences:
                                        auto_bill_outstanding: true
                                        setup_fee:
                                            value: "10"
                                            currency_code: USD
                                        setup_fee_failure_action: CONTINUE
                                        payment_failure_threshold: 3
                                    taxes:
                                        percentage: "10"
                                        inclusive: false
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - plans
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        get:
            summary: List plans
            description: Lists billing plans.
            operationId: plans.list
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that lists billing plans.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/plan_collection'
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_404'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/prefer'
                - $ref: '#/components/parameters/product_id'
                - $ref: '#/components/parameters/plan_ids'
                - $ref: '#/components/parameters/page_size'
                - $ref: '#/components/parameters/page'
                - $ref: '#/components/parameters/total_required'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - plans
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/billing/plans/{id}:
        get:
            summary: Show plan details
            description: Shows details for a plan, by ID.
            operationId: plans.get
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows plan details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/plan'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - plans
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        patch:
            summary: Update plan
            description: Updates a plan with the `CREATED` or `ACTIVE` status. For an `INACTIVE` plan, you can make only status updates.<br/>You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>replace</td></tr><tr><td><code>payment_preferences.auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>taxes.percentage</code></td><td>replace</td></tr><tr><td><code>payment_preferences.payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee_failure_action</code></td><td>replace</td></tr><tr><td><code>name</code></td><td>replace</td></tr></tbody></table>
            operationId: plans.patch
            responses:
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/plans.patch-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/plans.patch-422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                required: true
                $ref: '#/components/requestBodies/patch_request'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - plans
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/billing/plans/{id}/activate:
        post:
            summary: Activate plan
            description: Activates a plan, by ID.
            operationId: plans.activate
            responses:
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/plans.activate-422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - plans
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/billing/plans/{id}/deactivate:
        post:
            summary: Deactivate plan
            description: Deactivates a plan, by ID.
            operationId: plans.deactivate
            responses:
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/plans.deactivate-422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - plans
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/billing/plans/{id}/update-pricing-schemes:
        post:
            summary: Update pricing
            description: Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.
            operationId: plans.update-pricing-schemes
            responses:
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "400":
                    description: Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/plans.update-pricing-schemes-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/plans.update-pricing-schemes-422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/update_pricing_schemes_list_request'
                        examples:
                            update_pricing_schemes_list_request:
                                value:
                                    pricing_schemes:
                                        - billing_cycle_sequence: 1
                                          pricing_scheme:
                                            fixed_price:
                                                value: "50"
                                                currency_code: USD
                                        - billing_cycle_sequence: 2
                                          pricing_scheme:
                                            fixed_price:
                                                value: "100"
                                                currency_code: USD
                                            pricing_model: VOLUME
                                            tiers:
                                                - starting_quantity: "1"
                                                  ending_quantity: "1000"
                                                  amount:
                                                    value: "150"
                                                    currency_code: USD
                                                - starting_quantity: "1001"
                                                  amount:
                                                    value: "250"
                                                    currency_code: USD
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - plans
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/billing/subscriptions:
        post:
            summary: Create subscription
            description: Creates a subscription.
            operationId: subscriptions.create
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows subscription details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subscription'
                            examples:
                                subscription:
                                    value:
                                        id: I-BW452GLLEP1G
                                        status: APPROVAL_PENDING
                                        status_update_time: "2018-12-10T21:20:49Z"
                                        plan_id: P-5ML4271244454362WXNWU5NQ
                                        plan_overridden: false
                                        start_time: "2018-11-01T00:00:00Z"
                                        quantity: "20"
                                        shipping_amount:
                                            currency_code: USD
                                            value: "10.00"
                                        subscriber:
                                            name:
                                                given_name: John
                                                surname: Doe
                                            email_address: customer@example.com
                                            payer_id: 2J6QB8YJQSJRJ
                                            shipping_address:
                                                name:
                                                    full_name: John Doe
                                                address:
                                                    address_line_1: 2211 N First Street
                                                    address_line_2: Building 17
                                                    admin_area_2: San Jose
                                                    admin_area_1: CA
                                                    postal_code: "95131"
                                                    country_code: US
                                        create_time: "2018-12-10T21:20:49Z"
                                        links:
                                            - href: https://www.paypal.com/webapps/billing/subscriptions?ba_token=BA-2M539689T3856352J
                                              rel: approve
                                              method: GET
                                            - href: https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G
                                              rel: edit
                                              method: PATCH
                                            - href: https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G
                                              rel: self
                                              method: GET
                "201":
                    description: A successful request returns the HTTP `201 Created` status code and a JSON response body that shows subscription details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subscription'
                            examples:
                                subscription:
                                    value:
                                        id: I-BW452GLLEP1G
                                        status: APPROVAL_PENDING
                                        status_update_time: "2018-12-10T21:20:49Z"
                                        plan_id: P-5ML4271244454362WXNWU5NQ
                                        plan_overridden: false
                                        start_time: "2018-11-01T00:00:00Z"
                                        quantity: "20"
                                        shipping_amount:
                                            currency_code: USD
                                            value: "10.00"
                                        subscriber:
                                            name:
                                                given_name: John
                                                surname: Doe
                                            email_address: customer@example.com
                                            payer_id: 2J6QB8YJQSJRJ
                                            shipping_address:
                                                name:
                                                    full_name: John Doe
                                                address:
                                                    address_line_1: 2211 N First Street
                                                    address_line_2: Building 17
                                                    admin_area_2: San Jose
                                                    admin_area_1: CA
                                                    postal_code: "95131"
                                                    country_code: US
                                        create_time: "2018-12-10T21:20:49Z"
                                        links:
                                            - href: https://www.paypal.com/webapps/billing/subscriptions?ba_token=BA-2M539689T3856352J
                                              rel: approve
                                              method: GET
                                            - href: https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G
                                              rel: edit
                                              method: PATCH
                                            - href: https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G
                                              rel: self
                                              method: GET
                "400":
                    description: Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/subscriptions.create-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/subscriptions.create-422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/prefer'
                - $ref: '#/components/parameters/paypal_request_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/subscription_request_post'
                        examples:
                            subscription_request_post:
                                value:
                                    plan_id: P-5ML4271244454362WXNWU5NQ
                                    start_time: "2018-11-01T00:00:00Z"
                                    quantity: "20"
                                    shipping_amount:
                                        currency_code: USD
                                        value: "10.00"
                                    subscriber:
                                        name:
                                            given_name: John
                                            surname: Doe
                                        email_address: customer@example.com
                                        shipping_address:
                                            name:
                                                full_name: John Doe
                                            address:
                                                address_line_1: 2211 N First Street
                                                address_line_2: Building 17
                                                admin_area_2: San Jose
                                                admin_area_1: CA
                                                postal_code: "95131"
                                                country_code: US
                                    application_context:
                                        brand_name: walmart
                                        locale: en-US
                                        shipping_preference: SET_PROVIDED_ADDRESS
                                        user_action: SUBSCRIBE_NOW
                                        payment_method:
                                            payer_selected: PAYPAL
                                            payee_preferred: IMMEDIATE_PAYMENT_REQUIRED
                                        return_url: https://example.com/returnUrl
                                        cancel_url: https://example.com/cancelUrl
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - subscriptions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/billing/subscriptions/{id}:
        get:
            summary: Show subscription details
            description: Shows details for a subscription, by ID.
            operationId: subscriptions.get
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows subscription details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subscription'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/fields'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - subscriptions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        patch:
            summary: Update subscription
            description: Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles canΓÇÖt be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>
            operationId: subscriptions.patch
            responses:
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/subscriptions.patch-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/subscriptions.patch-422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                required: true
                $ref: '#/components/requestBodies/patch_request'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - subscriptions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/billing/subscriptions/{id}/revise:
        post:
            summary: Revise plan or quantity of subscription
            description: Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.
            operationId: subscriptions.revise
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows subscription details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subscription_revise_response'
                            examples:
                                subscription_revise_response:
                                    value:
                                        plan_id: P-5ML4271244454362WXNWU5NQ
                                        plan_overridden: false
                                        shipping_amount:
                                            currency_code: USD
                                            value: "10.00"
                                        shipping_address:
                                            name:
                                                full_name: John Doe
                                            address:
                                                address_line_1: 2211 N First Street
                                                address_line_2: Building 17
                                                admin_area_2: San Jose
                                                admin_area_1: CA
                                                postal_code: "95131"
                                                country_code: US
                                        links:
                                            - href: https://www.paypal.com/webapps/billing/subscriptions/update?ba_token=BA-2M539689T3856352J
                                              rel: approve
                                              method: GET
                                            - href: https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G
                                              rel: edit
                                              method: PATCH
                                            - href: https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G
                                              rel: self
                                              method: GET
                                            - href: https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G/cancel
                                              rel: cancel
                                              method: POST
                                            - href: https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G/suspend
                                              rel: suspend
                                              method: POST
                                            - href: https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G/capture
                                              rel: capture
                                              method: POST
                "400":
                    description: Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/subscriptions.revise-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/subscriptions.revise-404'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/subscriptions.revise-422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/subscription_revise_request'
                        examples:
                            subscription_revise_request:
                                value:
                                    plan_id: P-5ML4271244454362WXNWU5NQ
                                    shipping_amount:
                                        currency_code: USD
                                        value: "10.00"
                                    shipping_address:
                                        name:
                                            full_name: John Doe
                                        address:
                                            address_line_1: 2211 N First Street
                                            address_line_2: Building 17
                                            admin_area_2: San Jose
                                            admin_area_1: CA
                                            postal_code: "95131"
                                            country_code: US
                                    application_context:
                                        brand_name: walmart
                                        locale: en-US
                                        shipping_preference: SET_PROVIDED_ADDRESS
                                        payment_method:
                                            payer_selected: PAYPAL
                                            payee_preferred: IMMEDIATE_PAYMENT_REQUIRED
                                        return_url: https://example.com/returnUrl
                                        cancel_url: https://example.com/cancelUrl
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - subscriptions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/billing/subscriptions/{id}/suspend:
        post:
            summary: Suspend subscription
            description: Suspends the subscription.
            operationId: subscriptions.suspend
            responses:
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "400":
                    description: Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/subscriptions.suspend-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/subscriptions.suspend-422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/subscription_suspend_request'
                        examples:
                            subscription_suspend_request:
                                value:
                                    reason: Item out of stock
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - subscriptions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/billing/subscriptions/{id}/cancel:
        post:
            summary: Cancel subscription
            description: Cancels the subscription.
            operationId: subscriptions.cancel
            responses:
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "400":
                    description: Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/subscriptions.cancel-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/subscriptions.cancel-422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/subscription_cancel_request'
                        examples:
                            subscription_cancel_request:
                                value:
                                    reason: Not satisfied with the service
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - subscriptions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/billing/subscriptions/{id}/activate:
        post:
            summary: Activate subscription
            description: Activates the subscription.
            operationId: subscriptions.activate
            responses:
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "400":
                    description: Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/subscriptions.activate-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/subscriptions.activate-422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/subscription_activate_request'
                        examples:
                            subscription_activate_request:
                                value:
                                    reason: Reactivating the subscription
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - subscriptions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/billing/subscriptions/{id}/capture:
        post:
            summary: Capture authorized payment on subscription
            description: Captures an authorized payment from the subscriber on the subscription.
            operationId: subscriptions.capture
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows subscription details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/transaction'
                "202":
                    description: Request Accepted.
                "400":
                    description: Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/subscriptions.capture-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/subscriptions.capture-422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/paypal_request_id'
                - $ref: '#/components/parameters/id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/subscription_capture_request'
                        examples:
                            subscription_capture_request:
                                value:
                                    note: Charging as the balance reached the limit
                                    capture_type: OUTSTANDING_BALANCE
                                    amount:
                                        currency_code: USD
                                        value: "100"
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - subscriptions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/billing/subscriptions/{id}/transactions:
        get:
            summary: List transactions for subscription
            description: Lists transactions for a subscription.
            operationId: subscriptions.transactions
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows subscription details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/transactions_list'
                "400":
                    description: Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/subscriptions.transactions-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/start_time'
                - $ref: '#/components/parameters/end_time'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - subscriptions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/catalogs/products:
        post:
            summary: Create product
            description: Creates a product.
            operationId: products.create
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows product details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/product'
                "201":
                    description: A successful request returns the HTTP `201 Created` status code and a JSON response body that shows product details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/product'
                "400":
                    description: Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/products.create-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/prefer'
                - $ref: '#/components/parameters/paypal_request_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/product_request_POST'
                        examples:
                            product_request_POST:
                                value:
                                    name: Video Streaming Service
                                    description: Video streaming service
                                    type: SERVICE
                                    category: SOFTWARE
                                    image_url: https://example.com/streaming.jpg
                                    home_url: https://example.com/home
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - products
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        get:
            summary: List products
            description: Lists products.
            operationId: products.list
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that lists products with details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/product_collection'
                "400":
                    description: Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/page_size'
                - $ref: '#/components/parameters/page'
                - $ref: '#/components/parameters/total_required'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - products
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/catalogs/products/{product_id}:
        get:
            summary: Show product details
            description: Shows details for a product, by ID.
            operationId: products.get
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows product details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/product'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/product_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - products
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        patch:
            summary: Update product
            description: Updates a product, by ID. You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>add, replace, remove</td></tr><tr><td><code>category</code></td><td>add, replace, remove</td></tr><tr><td><code>image_url</code></td><td>add, replace, remove</td></tr><tr><td><code>home_url</code></td><td>add, replace, remove</td></tr></tbody></table>
            operationId: products.patch
            responses:
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "400":
                    description: Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/products.patch-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/products.patch-422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/product_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/patch_request'
                        examples:
                            patch_request:
                                value:
                                    - op: replace
                                      path: /description
                                      value: Premium video streaming service
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/subscriptions
            tags:
                - products
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/checkout/orders:
        post:
            summary: Create order
            description: Creates an order.
            operationId: orders.create
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that includes the PayPal-generated order ID, an array of purchase unit objects, payment details, customer information, metadata, and order status.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
            parameters:
                - $ref: '#/components/parameters/paypal_partner_attribution_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/order'
                        examples:
                            order:
                                value:
                                    purchase_units:
                                        - reference_id: store_mobile_world_order_1234
                                          description: Mobile World Store order-1234
                                          amount:
                                            currency: USD
                                            details:
                                                subtotal: "1.09"
                                                shipping: "0.02"
                                                tax: "0.33"
                                            total: "1.44"
                                          payee:
                                            email: seller@example.com
                                          items:
                                            - name: NeoPhone
                                              sku: sku03
                                              price: "0.54"
                                              currency: USD
                                              quantity: "1"
                                            - name: Fitness Watch
                                              sku: sku04
                                              price: "0.55"
                                              currency: USD
                                              quantity: "1"
                                          shipping_address:
                                            line1: 2211 N First Street
                                            line2: Building 17
                                            city: San Jose
                                            country_code: US
                                            postal_code: "95131"
                                            state: CA
                                            phone: (123) 456-7890
                                          shipping_method: United Postal Service
                                          partner_fee_details:
                                            receiver:
                                                email: partner@example.com
                                            amount:
                                                value: "0.01"
                                                currency: USD
                                          payment_linked_group: 1
                                          custom: custom_value_2388
                                          invoice_number: invoice_number_2388
                                          payment_descriptor: Payment Mobile World
                                    redirect_urls:
                                        return_url: https://example.com/return
                                        cancel_url: https://example.com/cancel
                required: true
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                    - https://uri.paypal.com/services/payments/channelpartner
                    - https://uri.paypal.com/services/payments/partnerfee
                    - https://uri.paypal.com/services/payments/realtimepayment
            tags:
                - orders
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/checkout/orders/{order_id}:
        get:
            summary: Show order details
            description: Shows details for an order, by ID.
            operationId: orders.get
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows order details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
            parameters:
                - $ref: '#/components/parameters/order_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                    - https://uri.paypal.com/services/payments/channelpartner
                    - https://uri.paypal.com/services/payments/partnerfee
                    - https://uri.paypal.com/services/payments/realtimepayment
            tags:
                - orders
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        delete:
            summary: Cancel order
            description: Cancels an order, by ID, and deletes the order. To call this method, the order status must be  `CREATED` or `APPROVED`.
            operationId: orders.cancel
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body. If the order is already paid, the order cannot be canceled and the request returns the HTTP `422 Unprocessable Entity` status code with the message, `This order is in progress`.
            parameters:
                - $ref: '#/components/parameters/order_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                    - https://uri.paypal.com/services/payments/realtimepayment
            tags:
                - orders
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/checkout/orders/{order_id}/pay:
        post:
            summary: Pay for order
            description: Initiates a PayPal payment that a buyer has approved.<blockquote><strong>Note:</strong> For Partner use cases, use the <code>disbursement_mode</code> to indicate whether to disburse funds to the seller and partner accounts immediately or later. If you delay disbursement, you must call <a href="/docs/multiparty/checkout/delayed-disbursement/">disburse funds</a> to disburse funds to the merchant and partner.</blockquote>
            operationId: orders.pay
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows order and payment details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/pay_order_response'
                "201":
                    description: A successful request returns the HTTP `201 Created` status code and a JSON response body that shows order and payment details.<blockquote><strong>Note:</strong> Applies to existing asynchronous payment processing integrations.</blockquote>
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/pay_order_response'
                "202":
                    description: A successful request returns the HTTP `202 Accepted` status code and a JSON response body that shows order and payment details.<blockquote><strong>Note:</strong> Applies to existing asynchronous payment processing integrations.</blockquote>
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/pay_order_response'
            parameters:
                - $ref: '#/components/parameters/order_id'
                - $ref: '#/components/parameters/paypal_partner_attribution_id'
                - $ref: '#/components/parameters/paypal_request_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/pay_order_request'
                required: true
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                    - https://uri.paypal.com/services/payments/realtimepayment
            tags:
                - orders-payment-actions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/checkout/orders:
        post:
            summary: Create order
            description: Creates an order. Merchants and partners can add Level 2 and 3 data to payments to reduce risk and payment processing costs. For more information about processing payments, see <a href="https://developer.paypal.com/docs/checkout/advanced/processing/">checkout</a> or <a href="https://developer.paypal.com/docs/multiparty/checkout/advanced/processing/">multiparty checkout</a>.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href="/api/rest/reference/orders/v2/errors/#create-order">Orders v2 errors</a>.</blockquote>
            operationId: orders.create
            responses:
                "200":
                    description: A successful response to an idempotent request returns the HTTP `200 OK` status code with a JSON response body that shows order details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
                "201":
                    description: 'A successful request returns the HTTP `201 Created` status code and a JSON response body that includes by default a minimal response with the ID, status, and HATEOAS links. If you require the complete order resource representation, you must pass the <a href="/docs/api/orders/v2/#orders-create-header-parameters"><code>Prefer: return=representation</code> request header</a>. This header value is not the default.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
                            examples:
                                orders_request_create:
                                    value:
                                        intent: CAPTURE
                                        purchase_units:
                                            - reference_id: d9f80740-38f0-11e8-b467-0ed5f89f718b
                                              amount:
                                                currency_code: USD
                                                value: "100.00"
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/422'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/paypal_request_id'
                - $ref: '#/components/parameters/paypal_partner_attribution_id'
                - $ref: '#/components/parameters/paypal_client_metadata_id'
                - $ref: '#/components/parameters/prefer'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/order_request'
                        examples:
                            order_request:
                                value:
                                    intent: CAPTURE
                                    purchase_units:
                                        - reference_id: d9f80740-38f0-11e8-b467-0ed5f89f718b
                                          amount:
                                            currency_code: USD
                                            value: "100.00"
                                    payment_source:
                                        paypal:
                                            experience_context:
                                                payment_method_preference: IMMEDIATE_PAYMENT_REQUIRED
                                                payment_method_selected: PAYPAL
                                                brand_name: EXAMPLE INC
                                                locale: en-US
                                                landing_page: LOGIN
                                                user_action: PAY_NOW
                                                return_url: https://example.com/returnUrl
                                                cancel_url: https://example.com/cancelUrl
                required: true
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                    - https://uri.paypal.com/services/payments/orders/client-side-integration
            tags:
                - orders
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/checkout/orders/{id}:
        get:
            summary: Show order details
            description: Shows details for an order, by ID.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href="/api/rest/reference/orders/v2/errors/#get-order">Orders v2 errors</a>.</blockquote>
            operationId: orders.get
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows order details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/fields'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                    - https://uri.paypal.com/services/payments/orders/client-side-integration
            tags:
                - orders
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        patch:
            summary: Update order
            description: 'Updates an order with a `CREATED` or `APPROVED` status. You cannot update an order with the `COMPLETED` status.<br/><br/>To make an update, you must provide a `reference_id`. If you omit this value with an order that contains only one purchase unit, PayPal sets the value to `default` which enables you to use the path: <code>\"/purchase_units/@reference_id==''default''/{attribute-or-object}\"</code>. Merchants and partners can add Level 2 and 3 data to payments to reduce risk and payment processing costs. For more information about processing payments, see <a href="https://developer.paypal.com/docs/checkout/advanced/processing/">checkout</a> or <a href="https://developer.paypal.com/docs/multiparty/checkout/advanced/processing/">multiparty checkout</a>.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\"/api/rest/reference/orders/v2/errors/#patch-order\">Orders v2 errors</a>.</blockquote>Patchable attributes or objects:<br/><br/><table><thead><th>Attribute</th><th>Op</th><th>Notes</th></thead><tbody><tr><td><code>intent</code></td><td>replace</td><td></td></tr><tr><td><code>payer</code></td><td>replace, add</td><td>Using replace op for <code>payer</code> will replace the whole <code>payer</code> object with the value sent in request.</td></tr><tr><td><code>purchase_units</code></td><td>replace, add</td><td></td></tr><tr><td><code>purchase_units[].custom_id</code></td><td>replace, add, remove</td><td></td></tr><tr><td><code>purchase_units[].description</code></td><td>replace, add, remove</td><td></td></tr><tr><td><code>purchase_units[].payee.email</code></td><td>replace</td><td></td></tr><tr><td><code>purchase_units[].shipping.name</code></td><td>replace, add</td><td></td></tr><tr><td><code>purchase_units[].shipping.address</code></td><td>replace, add</td><td></td></tr><tr><td><code>purchase_units[].shipping.type</code></td><td>replace, add</td><td></td></tr><tr><td><code>purchase_units[].soft_descriptor</code></td><td>replace, remove</td><td></td></tr><tr><td><code>purchase_units[].amount</code></td><td>replace</td><td></td></tr><tr><td><code>purchase_units[].items</code></td><td>replace, add, remove</td><td></td></tr><tr><td><code>purchase_units[].invoice_id</code></td><td>replace, add, remove</td><td></td></tr><tr><td><code>purchase_units[].payment_instruction</code></td><td>replace</td><td></td></tr><tr><td><code>purchase_units[].payment_instruction.disbursement_mode</code></td><td>replace</td><td>By default, <code>disbursement_mode</code> is <code>INSTANT</code>.</td></tr><tr><td><code>purchase_units[].payment_instruction.platform_fees</code></td><td>replace, add, remove</td><td></td></tr><tr><td><code>purchase_units[].supplementary_data.airline</code></td><td>replace, add, remove</td><td></td></tr><tr><td><code>purchase_units[].supplementary_data.card</code></td><td>replace, add, remove</td><td></td></tr><tr><td><code>application_context.client_configuration</code></td><td>replace, add</td><td></td></tr></tbody></table>'
            operationId: orders.patch
            responses:
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with an empty object in the JSON response body.
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/orders.patch-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/orders.patch-422'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                $ref: '#/components/requestBodies/patch_request'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                    - https://uri.paypal.com/services/payments/orders/client-side-integration
            tags:
                - orders
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/checkout/orders/{id}/confirm-payment-source:
        post:
            summary: Confirm the Order
            description: Payer confirms their intent to pay for the the Order with the given payment source.
            operationId: orders.confirm
            responses:
                "200":
                    description: A successful request indicates that the payment source was added to the Order. A successful request returns the HTTP `200 OK` status code with a JSON response body that shows order details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/orders.confirm-400'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/orders.confirm-422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/paypal_client_metadata_id'
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/prefer'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/confirm_order_request'
                        examples:
                            confirm_order_request:
                                value:
                                    payment_source:
                                        paypal:
                                            name:
                                                given_name: John
                                                surname: Doe
                                            email_address: customer@example.com
                                            experience_context:
                                                payment_method_preference: IMMEDIATE_PAYMENT_REQUIRED
                                                payment_method_selected: PAYPAL
                                                brand_name: EXAMPLE INC
                                                locale: en-US
                                                landing_page: LOGIN
                                                shipping_preference: SET_PROVIDED_ADDRESS
                                                user_action: PAY_NOW
                                                return_url: https://example.com/returnUrl
                                                cancel_url: https://example.com/cancelUrl
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                    - https://uri.paypal.com/services/payments/initiatepayment
            tags:
                - orders
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/checkout/orders/{id}/authorize:
        post:
            summary: Authorize payment for order
            description: Authorizes payment for an order. To successfully authorize payment for an order, the buyer must first approve the order or a valid payment_source must be provided in the request. A buyer can approve the order upon being redirected to the rel:approve URL that was returned in the HATEOAS links in the create order response.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href="/api/rest/reference/orders/v2/errors/#authorize-order">Orders v2 errors</a>.</blockquote>
            operationId: orders.authorize
            responses:
                "200":
                    description: A successful response to an idempotent request returns the HTTP `200 OK` status code with a JSON response body that shows authorized payment details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order_authorize_response'
                "201":
                    description: 'A successful response to a non-idempotent request returns the HTTP `201 Created` status code with a JSON response body that shows authorized payment details. If a duplicate response is retried, returns the HTTP `200 OK` status code. By default, the response is minimal. If you need the complete resource representation, you must pass the <a href="/docs/api/orders/v2/#orders-authorize-header-parameters"><code>Prefer: return=representation</code> request header</a>.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order_authorize_response'
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/orders.authorize-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: The authorized payment failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/orders.authorize-403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/orders.authorize-422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/paypal_request_id'
                - $ref: '#/components/parameters/prefer'
                - $ref: '#/components/parameters/paypal_client_metadata_id'
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/paypal_auth_assertion'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/order_authorize_request'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                    - https://uri.paypal.com/services/payments/orders/client-side-integration
            tags:
                - orders
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/checkout/orders/{id}/capture:
        post:
            summary: Capture payment for order
            description: Captures payment for an order. To successfully capture payment for an order, the buyer must first approve the order or a valid payment_source must be provided in the request. A buyer can approve the order upon being redirected to the rel:approve URL that was returned in the HATEOAS links in the create order response.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href="/api/rest/reference/orders/v2/errors/#capture-order">Orders v2 errors</a>.</blockquote>
            operationId: orders.capture
            responses:
                "200":
                    description: A successful response to an idempotent request returns the HTTP `200 OK` status code with a JSON response body that shows captured payment details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
                "201":
                    description: 'A successful response to a non-idempotent request returns the HTTP `201 Created` status code with a JSON response body that shows captured payment details. If a duplicate response is retried, returns the HTTP `200 OK` status code. By default, the response is minimal. If you need the complete resource representation, pass the <a href="/docs/api/orders/v2/#orders-authorize-header-parameters"><code>Prefer: return=representation</code> request header</a>.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/orders.capture-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: The authorized payment failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/orders.capture-403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/orders.capture-422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/paypal_request_id'
                - $ref: '#/components/parameters/prefer'
                - $ref: '#/components/parameters/paypal_client_metadata_id'
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/paypal_auth_assertion'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/order_capture_request'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                    - https://uri.paypal.com/services/payments/orders/client-side-integration
            tags:
                - orders
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/checkout/orders/{id}/track:
        post:
            summary: Add tracking information for an Order.
            description: Adds tracking information for an Order.
            operationId: orders.track.create
            responses:
                "200":
                    description: A successful response to an idempotent request returns the HTTP `200 OK` status code with a JSON response body that shows tracker details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
                "201":
                    description: A successful response to a non-idempotent request returns the HTTP `201 Created` status code with a JSON response body that shows tracker details. If a duplicate response is retried, returns the HTTP `200 OK` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/orders.track.create-400'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/orders.track.create-403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/orders.track.create-422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/paypal_auth_assertion'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/order_tracker_request'
                required: true
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
            tags:
                - orders
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/checkout/orders/{id}/trackers/{tracker_id}:
        patch:
            summary: Update or cancel tracking information for a PayPal order
            description: Updates or cancels the tracking information for a PayPal order, by ID. Updatable attributes or objects:<br/><br/><table><thead><th>Attribute</th><th>Op</th><th>Notes</th></thead><tbody></tr><tr><td><code>items</code></td><td>replace</td><td>Using replace op for <code>items</code> will replace the entire <code>items</code> object with the value sent in request.</td></tr><tr><td><code>notify_payer</code></td><td>replace, add</td><td></td></tr><tr><td><code>status</code></td><td>replace</td><td>Only patching status to CANCELLED is currently supported.</td></tr></tbody></table>
            operationId: orders.trackers.patch
            responses:
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with an empty object in the JSON response body.
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/orders.trackers.patch-400'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/orders.trackers.patch-403'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/orders.trackers.patch-404'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/orders.trackers.patch-422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/tracker_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/patch_request'
                        examples:
                            orders_patch_request:
                                value:
                                    - op: replace
                                      path: /purchase_units/@reference_id=='PUHF'/shipping/address
                                      value:
                                        address_line_1: 2211 N First Street
                                        address_line_2: Building 17
                                        admin_area_2: San Jose
                                        admin_area_1: CA
                                        postal_code: "95131"
                                        country_code: US
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
            tags:
                - trackers
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/disputes:
        get:
            summary: List disputes
            description: Lists disputes with a summary set of details, which shows the <code>dispute_id</code>, <code>reason</code>, <code>status</code>, <code>dispute_state</code>, <code>dispute_life_cycle_stage</code>, <code>dispute_channel</code>, <code>dispute_amount</code>, <code>create_time</code> and <code>update_time</code> fields.<br/><br/>To filter the disputes in the response, specify one or more optional query parameters. To limit the number of disputes in the response, specify the <code>page_size</code> query parameter.<br/><br/>To list multiple disputes, set these query parameters in the request:<ul><li><code>page_size=2</code></li><li><code>start_time</code> instead of <code>disputed_transaction_id</code></li></ul><br/>If the response contains more than two disputes, it lists two disputes and includes a HATEOAS link to the next page of results.
            operationId: disputes.list
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP <code>200 OK</code> status code and a JSON response body that lists disputes with a full or summary set of details. Default is a summary set of details, which shows the <code>dispute_id</code>, <code>reason</code>, <code>status</code>, <code>dispute_amount</code>, <code>create_time</code>, and <code>update_time</code> fields for each dispute.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/dispute_search'
                "400":
                    description: The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/start_time'
                - $ref: '#/components/parameters/disputed_transaction_id'
                - $ref: '#/components/parameters/page_size'
                - $ref: '#/components/parameters/next_page_token'
                - $ref: '#/components/parameters/dispute_state'
                - $ref: '#/components/parameters/update_time_before'
                - $ref: '#/components/parameters/update_time_after'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/read-buyer
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/read-seller
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/read-ebay
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/read
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/read-partner
            tags:
                - disputes
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/disputes/{id}:
        get:
            summary: Show dispute details
            description: Shows details for a dispute, by ID.<blockquote><strong>Note:</strong> The fields that appear in the response depend on the access. For example, if the merchant requests shows dispute details, the customer's email ID does not appear.</blockquote>
            operationId: disputes.get
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows dispute details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/dispute'
                "500":
                    description: An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/read-buyer
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/read-seller
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/read-ebay
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/read
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/read-partner
            tags:
                - disputes
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        patch:
            summary: Partially update dispute
            description: Partially updates a dispute, by ID. Seller can update the `communication_detail` value or The partner can add the `partner action` information.
            operationId: disputes.patch
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "202":
                    description: A successfully accepted request returns the HTTP `202 Accepted` status code and a JSON response body that includes a [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) to the ID of the request. The Clients can choose webhook option as well to receive dispute update notification.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subsequent_action'
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "400":
                    description: The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "422":
                    description: The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/patch_request'
                    multipart/related:
                        schema:
                            $ref: '#/components/schemas/multipart_patch_request'
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/multipart_patch_request'
                    multipart/mixed:
                        schema:
                            $ref: '#/components/schemas/multipart_patch_request'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-seller
            tags:
                - disputes
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/disputes/{id}/provide-evidence:
        post:
            summary: Provide evidence
            description: Provides evidence for a dispute, by ID. A merchant can provide evidence for disputes with the <code>WAITING_FOR_SELLER_RESPONSE</code> status while customers can provide evidence for disputes with the <code>WAITING_FOR_BUYER_RESPONSE</code> status. Evidence can be a proof of delivery or proof of refund document or notes, which can include logs. A proof of delivery document includes a tracking number while a proof of refund document includes a refund ID. For other evidence type, notes and documents can be given. Evidences requested from you can be found by checking the type of evidence for the corresponding source under the evidence section of the <a href="/docs/api/customer-disputes/v1/#disputes_get">show dispute details</a> response. The source will be <code>REQUESTED_FROM_SELLER</code> for evidences requested from the merchant while it will be <code>REQUESTED_FROM_BUYER</code> for evidences requested from the customer. For constraints and rules regarding documents, see <a href="/docs/integration/direct/customer-disputes/integration-guide/#documents">documents</a>.<br/>To make this request, specify the evidence in the JSON request body and use the <code>provide-evidence</code> link in the <a href="/docs/api/reference/api-responses/#hateoas-links/">HATEOAS links</a> of the <a href="/docs/api/customer-disputes/v1/#disputes_get">show dispute details</a> response. In case the link is not present in the response, you can't provide evidence for the dispute. For information about dispute reasons, see <a href="/docs/integration/direct/customer-disputes/integration-guide/#dispute-reasons">dispute reasons</a>.
            operationId: disputes.provide-evidence
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subsequent_action'
                "400":
                    description: The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                $ref: '#/components/requestBodies/evidences'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-seller
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-buyer
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-partner
            tags:
                - disputes-actions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/disputes/{id}/appeal:
        post:
            summary: Appeal dispute
            description: Appeals a dispute, by ID. To appeal a dispute, use the <code>appeal</code> link in the <a href="/docs/api/reference/api-responses/#hateoas-links/">HATEOAS links</a> from the show dispute details response. If this link does not appear, you cannot appeal the dispute. Submit new evidence as a document or notes in the JSON request body. For constraints and rules regarding documents, see <a href="/docs/integration/direct/customer-disputes/integration-guide/#documents">documents</a>.<br/>To make this request, specify the dispute ID in the URI and specify the evidence in the JSON request body. For information about dispute reasons, see <a href="/docs/integration/direct/customer-disputes/integration-guide/#dispute-reasons">dispute reasons</a>.
            operationId: disputes.appeal
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subsequent_action'
                "400":
                    description: The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                $ref: '#/components/requestBodies/evidences'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-seller
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-buyer
            tags:
                - disputes-actions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/disputes/{id}/accept-claim:
        post:
            summary: Accept claim
            description: Accepts liability for a claim, by ID. When you accept liability for a claim, the dispute closes in the customerΓÇÖs favor and PayPal automatically refunds money to the customer from the merchant's account. Allowed accept_claim_type values for the request is available in dispute details <a href="/docs/api/customer-disputes/v1/#definition-allowed_response_options">allowed response options</a> object.
            operationId: disputes.accept-claim
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subsequent_action'
                "400":
                    description: The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                accept-claim-document:
                                    description: A file with evidence.
                                    type: string
                                    format: binary
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-seller
            tags:
                - disputes-actions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/disputes/{id}/adjudicate:
        post:
            summary: Settle dispute
            description: <blockquote><strong>Important:</strong> This method is for sandbox use only.</blockquote> Settles a dispute in either the customer's or merchant's favor. Merchants can make this call in the sandbox to complete end-to-end dispute resolution testing, which mimics the dispute resolution that PayPal agents normally complete. To make this call, the dispute <code>status</code> must be <code>UNDER_REVIEW</code> and <code>adjudicate</code> link  should be available in the <a href="/docs/api/customer-disputes/v1/#disputes_get!c=200&path=links&t=response/">HATEOAS links</a> of the <a href="/docs/api/customer-disputes/v1/#disputes_get">show dispute details</a> response.
            operationId: disputes.adjudicate
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subsequent_action'
                "400":
                    description: The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "422":
                    description: The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/adjudicate'
                        examples:
                            adjudicate:
                                value:
                                    adjudication_outcome: BUYER_FAVOR
                    multipart/related:
                        schema:
                            $ref: '#/components/schemas/adjudicate'
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/adjudicate'
                    multipart/mixed:
                        schema:
                            $ref: '#/components/schemas/adjudicate'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-seller
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-buyer
            tags:
                - disputes-actions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/disputes/{id}/require-evidence:
        post:
            summary: Update dispute status
            description: <blockquote><strong>Important:</strong> This method is for sandbox use only.</blockquote> Updates the status of a dispute, by ID, from <code>UNDER_REVIEW</code> to either:<ul><li><code>WAITING_FOR_BUYER_RESPONSE</code></li><li><code>WAITING_FOR_SELLER_RESPONSE</code></li></ul>This status change enables either the customer or merchant to submit evidence for the dispute. To make this call, the dispute <code>status</code> must be <code>UNDER_REVIEW</code> and <code>require-evidence</code> link  should be available in the <a href="/docs/api/customer-disputes/v1/#disputes_get!c=200&path=links&t=response/">HATEOAS links</a> of the <a href="/docs/api/customer-disputes/v1/#disputes_get">show dispute details</a> response. Specify an <code>action</code> value in the JSON request body to indicate whether the status change enables the customer or merchant to submit evidence:<table><thead><tr align="left"><th>If <code>action</code> is</th><th>The <code>status</code> updates to</th></tr></thead><tbody><tr><td><code>BUYER_EVIDENCE</code></td><td> <code>WAITING_FOR_BUYER_RESPONSE</code></td></tr><tr><td><code>SELLER_EVIDENCE</code></td><td> <code>WAITING_FOR_SELLER_RESPONSE</code></td></tr></tbody></table>.
            operationId: disputes.require-evidence
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subsequent_action'
                "400":
                    description: The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "422":
                    description: The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/require_evidence'
                        examples:
                            escalate:
                                value:
                                    note: Escalating to PayPal claim for resolution.
                    multipart/related:
                        schema:
                            $ref: '#/components/schemas/require_evidence'
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/require_evidence'
                    multipart/mixed:
                        schema:
                            $ref: '#/components/schemas/require_evidence'
                required: true
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-seller
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-buyer
            tags:
                - disputes-actions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/disputes/{id}/escalate:
        post:
            summary: Escalate dispute to claim
            description: Escalates the dispute, by ID, to a PayPal claim. To make this call, the stage in the dispute lifecycle must be `INQUIRY`.
            operationId: disputes.escalate
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subsequent_action'
                "400":
                    description: The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "422":
                    description: The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/escalate'
                        examples:
                            require_evidence:
                                value:
                                    action: BUYER_EVIDENCE
                    multipart/related:
                        schema:
                            $ref: '#/components/schemas/escalate'
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/escalate'
                    multipart/mixed:
                        schema:
                            $ref: '#/components/schemas/escalate'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-seller
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-buyer
            tags:
                - disputes-actions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/disputes/{id}/send-message:
        post:
            summary: Send message about dispute to other party
            description: Sends a message about a dispute, by ID, to the other party in the dispute. Merchants and customers can only send messages if the `dispute_life_cycle_stage` value is `INQUIRY`. For constraints and rules regarding documents that can be attached as part of the message, see <a href="/docs/integration/direct/customer-disputes/integration-guide/#documents">documents</a>. To send a message, use the <code>send-message</code> link in the <a href="/docs/api/reference/api-responses/#hateoas-links/">HATEOAS links</a> of the <a href="/docs/api/customer-disputes/v1/#disputes_get">show dispute details</a> response and specify the message in the JSON request body. In case the link is not present in the response you can't send a message on the dispute.
            operationId: disputes.send-message
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subsequent_action'
                "400":
                    description: The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "422":
                    description: The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                message_document:
                                    description: A file that contains any additional info about the message posted.
                                    type: string
                                    format: binary
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-seller
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-buyer
            tags:
                - disputes-actions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/disputes/{id}/make-offer:
        post:
            summary: Make offer to resolve dispute
            description: Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href="/docs/api/customer-disputes/v1/#definition-allowed_response_options">allowed response options</a> object.
            operationId: disputes.make-offer
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subsequent_action'
                "400":
                    description: The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "422":
                    description: The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/make_offer'
                        examples:
                            make_offer:
                                value:
                                    note: Offer refund with replacement item.
                                    offer_amount:
                                        currency_code: USD
                                        value: "23"
                                    offer_type: REFUND_WITH_REPLACEMENT
                    multipart/related:
                        schema:
                            $ref: '#/components/schemas/make_offer'
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/make_offer'
                    multipart/mixed:
                        schema:
                            $ref: '#/components/schemas/make_offer'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-seller
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-buyer
            tags:
                - disputes-actions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/disputes/{id}/accept-offer:
        post:
            summary: Accept offer to resolve dispute
            description: The customer accepts the offer from merchant to resolve a dispute, by ID. PayPal automatically refunds the amount proposed by merchant to the customer.
            operationId: disputes.accept-offer
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subsequent_action'
                "202":
                    description: A successfully accepted request returns the HTTP `202 Accepted` status code and a JSON response body that includes a [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) to the ID of the request. The request returns `202 Accepted` status in case money movement for the offer is delayed due to some internal reasons.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subsequent_action'
                "400":
                    description: The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "422":
                    description: The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/accept_offer'
                        examples:
                            accept_offer:
                                value:
                                    note: I am ok with the refund offered.
                    multipart/related:
                        schema:
                            $ref: '#/components/schemas/accept_offer'
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/accept_offer'
                    multipart/mixed:
                        schema:
                            $ref: '#/components/schemas/accept_offer'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-buyer
            tags:
                - disputes-actions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/disputes/{id}/deny-offer:
        post:
            summary: Deny offer to resolve dispute
            description: Denies an offer that the merchant proposes for a dispute, by ID.
            operationId: disputes.deny-offer
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subsequent_action'
                "400":
                    description: The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "422":
                    description: The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/deny_offer'
                        examples:
                            deny_offer:
                                value:
                                    note: refund offer is very low.
                    multipart/related:
                        schema:
                            $ref: '#/components/schemas/deny_offer'
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/deny_offer'
                    multipart/mixed:
                        schema:
                            $ref: '#/components/schemas/deny_offer'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-buyer
            tags:
                - disputes-actions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/disputes/{id}/acknowledge-return-item:
        post:
            summary: Acknowledge returned item
            description: Acknowledges that the customer returned an item for a dispute, by ID. A merchant can make this request for disputes with the `MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED` reason. Allowed acknowledgement_type values for the request is available in dispute details <a href="/docs/api/customer-disputes/v1/#definition-allowed_response_options">allowed response options</a> object. For constraints and rules regarding documents, see <a href="/docs/integration/direct/customer-disputes/integration-guide/#documents">documents</a>.
            operationId: disputes.acknowledge-return-item
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subsequent_action'
                "400":
                    description: The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "422":
                    description: The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                acknowledgement_document:
                                    description: A file with evidence.
                                    type: string
                                    format: binary
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-seller
            tags:
                - disputes-actions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/disputes/{id}/provide-supporting-info:
        post:
            summary: Provide supporting information for dispute
            description: Provides supporting information for a dispute, by ID. A merchant or buyer can make this request for disputes if they find the `provide-supporting-info` link in the HATEOAS links in the list disputes response. The party can provide the supporting information to PayPal to defend themselves only when the `dispute_life_cycle_stage` is `CHARGEBACK`, `PRE_ARBITRATION`, or `ARBITRATION`. They can provide a note that describes their part with details or upload any supporting documents to support their side. For constraints and rules regarding documents, see <a href="/docs/integration/direct/customer-disputes/integration-guide/#documents">documents</a>.<br/>To make this request, specify the dispute ID in the URI and specify the notes in the JSON request body. This method differs from the provide evidence method which supports only multipart request, where PayPal asks the concerned party for evidence.
            operationId: disputes.provide-supporting-info
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/subsequent_action'
                "400":
                    description: The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "404":
                    description: The request failed due to the dispute is not available. The request returns the HTTP `404 Not Found` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "422":
                    description: The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                supporting document:
                                    description: A file with evidence.
                                    type: string
                                    format: binary
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/disputes/update-seller
                    - https://uri.paypal.com/services/disputes/update-buyer
                    - https://uri.paypal.com/services/disputes/update-partner
            tags:
                - disputes-actions
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/partner-referrals:
        post:
            summary: Create partner referral
            description: Creates a partner referral that is shared by the API caller. The referrals contains the client's personal, business, and financial data.
            operationId: partner-referrals.create
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "201":
                    description: A successful request returns the HTTP `201 Created` status code and a JSON response body that contains a [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) to show the referral data and an `action_url` to which you redirect the customer in a browser to complete the signup process. The `partner_referral_id` token is appended to the URL.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/create_referral_data_response'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/referral_data'
                        examples:
                            referral_data:
                                value:
                                    customer_data:
                                        customer_type: MERCHANT
                                        person_details:
                                            email_address: customer@example.com
                                            name:
                                                prefix: Mr.
                                                given_name: Shashank
                                                surname: Wankhede
                                                middle_name: Govind
                                            phone_contacts:
                                                - phone_number_details:
                                                    country_code: "91"
                                                    national_number: "9740216087"
                                                  phone_type: HOME
                                            home_address:
                                                line1: 11, outer ring road
                                                state: Karnataka
                                                city: Bangalore
                                                country_code: IN
                                                postal_code: "560103"
                                            nationality_country_code: IN
                                            identity_documents:
                                                - type: SOCIAL_SECURITY_NUMBER
                                                  value: ABCDEF34646
                                                  partial_value: false
                                                  issuer_country_code: US
                                        business_details:
                                            phone_contacts:
                                                - phone_number_details:
                                                    country_code: "91"
                                                    national_number: "9740216087"
                                                  phone_type: FAX
                                            business_address:
                                                line1: 11, outer ring road
                                                state: Karnataka
                                                city: Bangalore
                                                country_code: IN
                                                postal_code: "560103"
                                            business_type: PROPRIETORSHIP
                                            category: "1004"
                                            sub_category: "2025"
                                            merchant_category_code: "8931"
                                            names:
                                                - type: LEGAL
                                                  name: SHASHANK STORE
                                            business_description: Arts and handicrafts
                                            event_dates:
                                                - event_type: ESTABLISHED
                                                  event_date: "2009-01-31T13:59:45Z"
                                            website_urls:
                                                - https://example.com/mystore/
                                            annual_sales_volume_range:
                                                minimum_amount:
                                                    currency: USD
                                                    value: "2000"
                                                maximum_amount:
                                                    currency: USD
                                                    value: "3000"
                                            average_monthly_volume_range: {}
                                            identity_documents:
                                                - type: TAX_IDENTIFICATION_NUMBER
                                                  value: ABCDEF34646
                                                  partial_value: false
                                                  issuer_country_code: US
                                            email_contacts:
                                                - email_address: customer-service@example.com
                                                  role: CUSTOMER_SERVICE
                                        financial_instrument_data:
                                            bank_details:
                                                - nick_name: Bank of America
                                                  account_number: "123405668293"
                                                  account_type: CHECKING
                                                  currency_code: USD
                                                  identifiers:
                                                    - type: ROUTING_NUMBER_1
                                                      value: "123456789"
                                        preferred_language_code: en_US
                                        primary_currency_code: USD
                                        referral_user_payer_id:
                                            type: PAYER_ID
                                            value: RFYUH2QQDGUQU
                                        partner_specific_identifiers:
                                            - type: TRACKING_ID
                                              value: ABJSDFO343SD
                                    requested_capabilities:
                                        - capability: BANK_ADDITION
                                    web_experience_preference:
                                        partner_logo_url: https://example.com/logo/
                                        return_url: https://example.com/
                                        action_renewal_url: https://example.com/renew/
                                    collected_consents:
                                        - type: SHARE_DATA_CONSENT
                                          granted: true
                                    products:
                                        - EXPRESS_CHECKOUT
                required: true
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/customer/partner-referrals/readwrite
            tags:
                - partner-referrals
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/partner-referrals/{partner_referral_id}:
        get:
            summary: Show referral data
            description: Shows details for referral data, by ID, that was shared by the API caller.
            operationId: partner-referrals.read
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows referral data.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/referral_data_response'
            parameters:
                - $ref: '#/components/parameters/partner_referral_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/customer/partner-referrals/readwrite
                - Oauth2:
                    - https://uri.paypal.com/services/customer/partner-referrals
            tags:
                - partner-referrals
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/partners/{partner_id}/merchant-integrations:
        get:
            summary: List seller tracking information
            description: Lists sellers that a partner onboarded, by partner ID.
            operationId: merchant-integration.find
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "201":
                    description: A successful request returns the HTTP `201 Created` status code and a JSON response body that lists sellers. For each seller, the response shows the seller ID (`merchant_id`), the tracking ID, and [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links) to show the seller-partner information.
            parameters:
                - $ref: '#/components/parameters/partner_id'
                - $ref: '#/components/parameters/tracking_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/customer/partner
            tags:
                - merchant-integration
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/partners/{partner_id}/merchant-integrations/{merchant_id}:
        get:
            summary: Show seller status
            description: Shows status information for sellers that the partner on-boards, by partner ID.
            operationId: merchant-integration.status
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows status details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/merchant-integration'
            parameters:
                - $ref: '#/components/parameters/partner_id'
                - $ref: '#/components/parameters/merchant_id'
                - $ref: '#/components/parameters/fields'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/customer/partner
            tags:
                - merchant-integration
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/partners/{partner_id}/merchant-integrations/credentials:
        get:
            summary: Fetch merchant credentials
            description: Fetches merchant credentials for a merchant onboarded through downloadable cart flow.
            operationId: merchant-integration.credentials
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows merchant credentials.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/merchant-integration.credentials'
            parameters:
                - $ref: '#/components/parameters/partner_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/customer/partner
            tags:
                - merchant-integration
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/customer/partners/{id}:
        get:
            summary: Show partner information - agreements and preferences
            description: Shows partner information - agreements and preferences - by partner ID.
            operationId: partner.read
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error-2'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows partner information.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/partner'
                "401":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error-2'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error-2'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error-2'
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/country_code'
                - $ref: '#/components/parameters/product'
                - $ref: '#/components/parameters/content_type'
                - $ref: '#/components/parameters/x_paypal_security_context'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/customer/partner
            tags:
                - partner
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        post:
            summary: Create partner information - agreements and preferences
            description: Creates partner information - agreements and preferences - for the given partner.
            operationId: partner.create
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error-2'
                "201":
                    description: A successful request returns the HTTP `201 Created` status code and a JSON response body that contains an array of [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links) that show the partner info.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/partner'
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error-2'
                "401":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error-2'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error-2'
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/content_type'
                - $ref: '#/components/parameters/x_paypal_security_context'
            requestBody:
                $ref: '#/components/requestBodies/partner'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/customer/partner
            tags:
                - partner
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        put:
            summary: Update partner information - agreements and preferences
            description: Updates partner information - agreements and preferences - for the given partner.
            operationId: partner.update
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error-2'
                "204":
                    description: The server has successfully executed the method, but there is no entity body to return.
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error-2'
                "401":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error-2'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error-2'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error-2'
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/content_type'
                - $ref: '#/components/parameters/x_paypal_security_context'
            requestBody:
                $ref: '#/components/requestBodies/partner'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/customer/partner
            tags:
                - partner
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/customer/partner-referrals:
        post:
            summary: Create partner referral
            description: Creates a partner referral that is shared by the partner or API caller. The partner referral is used to onboard the seller, and contains the seller's personal, business, financial and operations.
            operationId: partner-referrals.create
            responses:
                "201":
                    description: A successful request returns the HTTP `201 Created` status code and a JSON response body that contains a [HATEOAS link](/docs/api/overview/#hateoas-links) to show the referral data and an `action_url` to which you redirect the customer in a browser to complete the signup process. The `partner_referral_id` token is appended to the URL.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/create_referral_data_response'
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/400'
                "401":
                    description: The API call is not authorized.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions or missing scopes on the caller account.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "422":
                    description: The caller is not a business account or the account is closed or locked.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/422'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/referral_data'
                required: true
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/customer/partner-referrals/readwrite
            tags:
                - partner-referrals
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/customer/partner-referrals/{partner_referral_id}:
        get:
            summary: Show referral data
            description: Shows details by ID for referral data that was shared by the partner or API caller.
            operationId: partner-referrals.read
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows referral data.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/referral_data_response'
                            examples:
                                referral_data:
                                    value:
                                        individual_owners:
                                            - names:
                                                - prefix: Mr.
                                                  given_name: John
                                                  surname: Doe
                                                  middle_name: Middle
                                                  suffix: Jr.
                                                  full_name: John Middle Doe Jr.
                                                  type: LEGAL
                                              citizenship: US
                                              addresses:
                                                - address_line_1: One Washington Square
                                                  address_line_2: Apt 123
                                                  admin_area_2: San Jose
                                                  admin_area_1: CA
                                                  postal_code: "95112"
                                                  country_code: US
                                                  type: HOME
                                              phones:
                                                - country_code: "1"
                                                  national_number: "6692468839"
                                                  extension_number: "1234"
                                                  type: MOBILE
                                              birth_details:
                                                date_of_birth: "1955-12-29"
                                              type: PRIMARY
                                        business_entity:
                                            business_type:
                                                type: INDIVIDUAL
                                                subtype: ASSO_TYPE_INCORPORATED
                                            business_industry:
                                                category: "1004"
                                                mcc_code: "8931"
                                                subcategory: "2025"
                                            business_incorporation:
                                                incorporation_country_code: US
                                                incorporation_date: "1986-12-29"
                                            names:
                                                - business_name: Test Enterprise
                                                  type: LEGAL_NAME
                                            emails:
                                                - type: CUSTOMER_SERVICE
                                                  email: customerservice@example.com
                                            website: https://mystore.testenterprises.com
                                            addresses:
                                                - address_line_1: One Washington Square
                                                  address_line_2: Apt 123
                                                  admin_area_2: San Jose
                                                  admin_area_1: CA
                                                  postal_code: "95112"
                                                  country_code: US
                                                  type: WORK
                                            phones:
                                                - country_code: "1"
                                                  national_number: "6692478833"
                                                  extension_number: "1234"
                                                  type: CUSTOMER_SERVICE
                                            beneficial_owners:
                                                individual_beneficial_owners:
                                                    - names:
                                                        - prefix: Mr.
                                                          given_name: John
                                                          surname: Doe
                                                          middle_name: Middle
                                                          suffix: Jr.
                                                          full_name: John Middle Doe Jr.
                                                          type: LEGAL
                                                      citizenship: US
                                                      addresses:
                                                        - address_line_1: One Washington Square
                                                          address_line_2: Apt 123
                                                          admin_area_2: San Jose
                                                          admin_area_1: CA
                                                          postal_code: "95112"
                                                          country_code: US
                                                          type: HOME
                                                      phones:
                                                        - country_code: "1"
                                                          national_number: "6692468839"
                                                          extension_number: "1234"
                                                          type: MOBILE
                                                      birth_details:
                                                        date_of_birth: "1955-12-29"
                                                      percentage_of_ownership: "50"
                                                business_beneficial_owners:
                                                    - business_type:
                                                        type: INDIVIDUAL
                                                        subtype: ASSO_TYPE_INCORPORATED
                                                      business_industry:
                                                        category: "1004"
                                                        mcc_code: "8931"
                                                        subcategory: "2025"
                                                      business_incorporation:
                                                        incorporation_country_code: US
                                                        incorporation_date: "1986-12-29"
                                                      names:
                                                        - business_name: Test Enterprise
                                                          type: LEGAL_NAME
                                                      emails:
                                                        - type: CUSTOMER_SERVICE
                                                          email: customerservice@example.com
                                                      website: https://mystore.testenterprises.com
                                                      addresses:
                                                        - address_line_1: One Washington Square
                                                          address_line_2: Apt 123
                                                          admin_area_2: San Jose
                                                          admin_area_1: CA
                                                          postal_code: "95112"
                                                          country_code: US
                                                          type: WORK
                                                      phones:
                                                        - country_code: "1"
                                                          national_number: "6692478833"
                                                          extension_number: "1234"
                                                          type: CUSTOMER_SERVICE
                                                      percentage_of_ownership: "50"
                                            office_bearers:
                                                - names:
                                                    - prefix: Mr.
                                                      given_name: John
                                                      surname: Doe
                                                      middle_name: Middle
                                                      suffix: Jr.
                                                      full_name: John Middle Doe Jr.
                                                      type: LEGAL
                                                  citizenship: US
                                                  addresses:
                                                    - address_line_1: One Washington Square
                                                      address_line_2: Apt 123
                                                      admin_area_2: San Jose
                                                      admin_area_1: CA
                                                      postal_code: "95112"
                                                      country_code: US
                                                      type: HOME
                                                  phones:
                                                    - country_code: "1"
                                                      national_number: "6692468839"
                                                      extension_number: "1234"
                                                      type: MOBILE
                                                  birth_details:
                                                    date_of_birth: "1955-12-29"
                                                  role: DIRECTOR
                                            annual_sales_volume_range:
                                                minimum_amount:
                                                    currency_code: USD
                                                    value: "10000"
                                                maximum_amount:
                                                    currency_code: USD
                                                    value: "50000"
                                            average_monthly_volume_range:
                                                minimum_amount:
                                                    currency_code: USD
                                                    value: "1000"
                                                maximum_amount:
                                                    currency_code: USD
                                                    value: "50000"
                                            purpose_code: P0104
                                        email: accountemail@example.com
                                        preferred_language_code: en-US
                                        tracking_id: testenterprices123122
                                        partner_config_override:
                                            partner_logo_url: https://www.paypalobjects.com/webstatic/mktg/logo/pp_cc_mark_111x69.jpg
                                            return_url: https://testenterprises.com/merchantonboarded
                                            return_url_description: the url to return the merchant after the paypal onboarding process.
                                            action_renewal_url: https://testenterprises.com/renew-exprired-url
                                            show_add_credit_card: true
                                        operations:
                                            - operation: BANK_ADDITION
                                        financial_instruments:
                                            banks:
                                                - nick_name: Bank of America
                                                  account_number: "123405668293"
                                                  account_type: CHECKING
                                                  currency_code: USD
                                                  identifiers:
                                                    - type: ROUTING_NUMBER_1
                                                      value: "123456789"
                                        legal_consents:
                                            - type: SHARE_DATA_CONSENT
                                              granted: true
                                        products:
                                            - EXPRESS_CHECKOUT
                "401":
                    description: The API call is not authorized.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: Authorization failed due to insufficient permissions or missing scopes on the caller Account.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/partner_referral_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/customer/partner-referrals/readwrite
                - Oauth2:
                    - https://uri.paypal.com/services/customer/partner-referrals
            tags:
                - partner-referrals
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/invoicing/invoices:
        post:
            summary: Create draft invoice
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href="/docs/api/invoicing/v1/#invoices_send">send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.
            operationId: invoice.create
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "201":
                    description: A successful request returns the HTTP `201 Created` status code and a JSON response body that shows invoice details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/invoice'
            requestBody:
                $ref: '#/components/requestBodies/invoice'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        get:
            summary: List invoices
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Lists invoices. To filter the invoices that appear in the response, you can specify one or more optional query parameters.
            operationId: invoice.get_all
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that lists invoices with details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/invoices'
            parameters:
                - $ref: '#/components/parameters/page'
                - $ref: '#/components/parameters/page_size'
                - $ref: '#/components/parameters/total_count_required'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/invoicing/search:
        post:
            summary: Search for invoices
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Searches for invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.
            operationId: invoice.search
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that lists the invoices that match the search criteria.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/invoices'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/search'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - search
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/invoicing/invoices/{invoice_id}/send:
        post:
            summary: Send invoice
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Sends an invoice, by ID, to a customer. To suppress the merchant's email notification, set the `notify_merchant` query parameter to `false`.<blockquote><strong>Note:</strong> After you send an invoice, you cannot resend it.</blockquote>
            operationId: invoice.send
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "202":
                    description: A successful request returns the HTTP `202 Accepted` status code with no JSON response body.
            parameters:
                - $ref: '#/components/parameters/invoice_id'
                - $ref: '#/components/parameters/notify_merchant'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/invoicing/invoices/{invoice_id}/schedule:
        post:
            summary: Schedule invoice
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Schedules an invoice, by ID, to send on a future date. At 07:00 on that date in the preferred time zone of the merchant's PayPal account profile, PayPal emails an invoice notification to the merchant and the customer, adds an online payment button to the customerΓÇÖs view of the invoice, and updates the invoice status to <code>SENT</code>.<blockquote><strong>Note:</strong> To change the scheduled date, adjust the invoice date and <a href="/docs/api/invoicing/v1/#invoices_update">update invoice</a>. To send the invoice immediately, update the invoice date to today or to a date in the past.</blockquote>
            operationId: invoice.schedule
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "202":
                    description: A successful request returns the HTTP `202 Accepted` status code and a JSON response body with a link to the invoice .
            parameters:
                - $ref: '#/components/parameters/invoice_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/invoicing/invoices/{invoice_id}/remind:
        post:
            summary: Send invoice reminder
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Sends a reminder to the payer about an invoice, by ID. In the JSON request body, include a `notification` object that defines the subject of the reminder and other details.
            operationId: invoice.remind
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "202":
                    description: A successful request returns the HTTP `202 Accepted` status code with no JSON response body.
            parameters:
                - $ref: '#/components/parameters/invoice_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/notification'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/invoicing/invoices/{invoice_id}/cancel:
        post:
            summary: Cancel sent invoice
            description: '<blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Cancels a sent invoice, by ID, and, optionally, sends a notification about the cancellation to the payer, merchant, and CC: emails.'
            operationId: invoice.cancel
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
            parameters:
                - $ref: '#/components/parameters/invoice_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/cancel-notification'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/invoicing/invoices/{invoice_id}/record-payment:
        post:
            summary: Mark invoice as paid
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Marks the status of an invoice, by ID, as paid.
            operationId: invoice.record-payment
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code with no JSON response body.
            parameters:
                - $ref: '#/components/parameters/invoice_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment-detail'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/invoicing/invoices/{invoice_id}/record-refund:
        post:
            summary: Mark invoice as refunded
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Marks the status of an invoice, by ID, as refunded.
            operationId: invoice.record-refund
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code with no JSON response body.
            parameters:
                - $ref: '#/components/parameters/invoice_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/refund-detail'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/invoicing/invoices/{invoice_id}:
        get:
            summary: Show invoice details
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Shows details for an invoice, by ID.
            operationId: invoice.get
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows invoice details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/invoice'
            parameters:
                - $ref: '#/components/parameters/invoice_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        put:
            summary: Update invoice
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.
            operationId: invoice.update
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows invoice details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/invoice'
            parameters:
                - $ref: '#/components/parameters/invoice_id'
                - $ref: '#/components/parameters/notify_merchant'
            requestBody:
                $ref: '#/components/requestBodies/invoice'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        delete:
            summary: Delete draft invoice
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Deletes invoices in the <code>DRAFT</code> or <code>SCHEDULED</code> state, by ID. For invoices that have already been sent, you can <a href="/docs/api/invoicing/v1/#invoices_cancel">cancel the invoice</a>. After you delete a draft or scheduled invoice, you can no longer use it or show its details. However, you can reuse its invoice number.
            operationId: invoice.delete
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
            parameters:
                - $ref: '#/components/parameters/invoice_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/invoicing/invoices/{invoice_id}/payment-records/{transaction_id}:
        delete:
            summary: Delete external payment
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Deletes an external payment, by invoice ID and transaction ID.
            operationId: invoice.delete_external_payment
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
            parameters:
                - $ref: '#/components/parameters/invoice_id'
                - $ref: '#/components/parameters/transaction_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/invoicing/invoices/{invoice_id}/refund-records/{transaction_id}:
        delete:
            summary: Delete external refund
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Deletes an external refund, by invoice ID and transaction ID.
            operationId: invoice.delete_external_refund
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
            parameters:
                - $ref: '#/components/parameters/invoice_id'
                - $ref: '#/components/parameters/transaction_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/invoicing/invoices/{invoice_id}/qr-code:
        get:
            summary: Generate QR code
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Generates a QR code for an invoice, by ID. The QR code is a PNG image in <a href="https://www.base64encode.org/">Base64-encoded</a> format that corresponds to the invoice ID. You can generate a QR code for an invoice and add it to a paper or PDF invoice. When customers use their mobile devices to scan the QR code, they are redirected to the PayPal mobile payment flow where they can view the invoice and pay online with PayPal or a credit card. Before you get a QR code, you must <a href="#invoices_create">create an invoice</a> and <a href="#invoices_send">send an invoice</a> to move the invoice from a draft to payable state. Do not include an email address if you do not want the invoice emailed.
            operationId: invoice.qr_code
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows the QR code as a PNG image.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/qr_code'
            parameters:
                - $ref: '#/components/parameters/invoice_id'
                - $ref: '#/components/parameters/width'
                - $ref: '#/components/parameters/height'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/invoicing/invoices/next-invoice-number:
        post:
            summary: Generate invoice number
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Generates the next invoice number that is available to the merchant. The next invoice number uses the prefix and suffix from the last invoice number and increments the number by one. For example, the next invoice number after `INVOICE-1234` is `INVOICE-1235`.
            operationId: invoice.next_invoice_number
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows the next invoice number.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/invoice_number'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/invoicing/templates:
        post:
            summary: Create template
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>
            operationId: template.create
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows template details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/template'
            requestBody:
                $ref: '#/components/requestBodies/template'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - templates
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        get:
            summary: List templates
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Lists merchant-created templates with associated details. The associated details include the email addresses, postal addresses, and phone numbers from the user's PayPal profile.<br/>The user can select which values to show in the business information section of their template.
            operationId: template.get_templates
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that lists invoices.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/templates'
            parameters:
                - $ref: '#/components/parameters/fields'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - templates
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/invoicing/templates/{template_id}:
        get:
            summary: Show template details
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Shows details for a template, by ID.
            operationId: template.get
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows template details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/template'
            parameters:
                - $ref: '#/components/parameters/template_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - templates
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        delete:
            summary: Delete template
            description: Deletes a template, by ID.
            operationId: template.delete
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
            parameters:
                - $ref: '#/components/parameters/template_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - templates
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        put:
            summary: Update template
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/invoices</code> endpoint is deprecated. Use the <code>/v2/invoices</code> endpoint instead. For details, see <a href="/docs/invoicing/basic-integration/">PayPal Invoicing Basic Integration</a>.</blockquote>Updates a template, by ID. In the JSON request body, specify a complete `template` object. The update method does not support partial updates.
            operationId: template.update
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows template details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/template'
            parameters:
                - $ref: '#/components/parameters/template_id'
            requestBody:
                $ref: '#/components/requestBodies/template'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing
            tags:
                - templates
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/invoicing/invoices:
        post:
            summary: Create draft invoice
            description: Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href="#invoices_send">send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.
            operationId: invoices.create
            responses:
                "201":
                    description: A successful request returns the HTTP `201 Created` status code. A JSON response body that shows invoice details is returned if you set <code>prefer=return=representation</code>.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/invoice'
                            examples:
                                "0":
                                    $ref: '#/components/examples/invoice'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/invoice'
                "400":
                    description: Invalid request.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/invoices.create-400'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/invoices.create-400'
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_403'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_403'
                "422":
                    description: Unprocessable Entity.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/422'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/422'
                default:
                    $ref: '#/components/responses/default'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/invoice'
                        examples:
                            "0":
                                $ref: '#/components/examples/invoice_draft'
                description: The invoice details which includes all information of the invoice like items, billing information.
                required: true
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/readwrite
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        get:
            summary: List invoices
            description: Lists invoices. To filter the invoices that appear in the response, you can specify one or more optional query parameters.
            operationId: invoices.list
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that lists invoices with details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/invoices'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/invoices'
                "400":
                    description: Invalid request.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/400'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/400'
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_403'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_403'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/page'
                - $ref: '#/components/parameters/page_size'
                - $ref: '#/components/parameters/total_required'
                - $ref: '#/components/parameters/fields'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/read
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/invoicing/invoices/{invoice_id}/send:
        post:
            summary: Send invoice
            description: Sends or schedules an invoice, by ID, to be sent to a customer. The action depends on the invoice issue date:<ul><li>If the invoice issue date is current or in the past, sends the invoice immediately.</li><li>If the invoice issue date is in the future, schedules the invoice to be sent on that date.</li></ul>To suppress the merchant's email notification, set the `send_to_invoicer` body parameter to `false`. To send the invoice through a share link and not through PayPal, set the <code>send_to_recipient</code> parameter to <code>false</code> in the <code>notification</code> object. The <code>send_to_recipient</code> parameter does not apply to a future issue date because the invoice is scheduled to be sent through PayPal on that date.<blockquote><strong>Notes:</strong><ul><li>After you send an invoice, resending it has no effect.</li><li>To send a notification for updates, <a href="#invoices_update">update the invoice</a> and set the <code>send_to_recipient</code> body parameter to <code>true</code>.</li></ul></blockquote>
            operationId: invoices.send
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` when the invoice issue date is current date.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/link_description'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/link_description'
                "202":
                    description: A successful request returns the HTTP `202 Accepted` status code with no JSON response body, when the invoice issue date is in future.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/202-response'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/202-response'
                "400":
                    description: Invalid request.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_400'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_400'
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_403'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_403'
                "404":
                    description: Resource Not Found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_404'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_404'
                "422":
                    description: Unprocessable Entity.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_422'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_422'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/invoice_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/notification'
                        examples:
                            "0":
                                $ref: '#/components/examples/notification_invoice'
                description: The email or SMS notification to send to the payer when they send an invoice..
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/readwrite
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/invoicing/invoices/{invoice_id}/remind:
        post:
            summary: Send invoice reminder
            description: Sends a reminder to the payer about an invoice, by ID. In the JSON request body, include a `notification` object that defines the subject of the reminder and other details.
            operationId: invoices.remind
            responses:
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "400":
                    description: Invalid request.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/invoices.remind-400'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/invoices.remind-400'
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: Resource Not Found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_404'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_404'
                "422":
                    description: Unprocessable Entity.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/invoices.remind-422'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/invoices.remind-422'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/invoice_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/notification'
                        examples:
                            "0":
                                $ref: '#/components/examples/notification_reminder'
                description: The email or SMS notification that will be sent to the payer for reminder.
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/readwrite
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/invoicing/invoices/{invoice_id}/cancel:
        post:
            summary: Cancel sent invoice
            description: 'Cancels a sent invoice, by ID, and, optionally, sends a notification about the cancellation to the payer, merchant, and CC: emails.'
            operationId: invoices.cancel
            responses:
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "400":
                    description: Invalid request.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/invoices.cancel-400'
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: Resource Not Found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_404'
                "422":
                    description: Unprocessable Entity.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/invoices.cancel-422'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/invoice_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/notification'
                        examples:
                            "0":
                                $ref: '#/components/examples/notification_invoice_cancel'
                description: The email or SMS notification that will be sent to the payer on cancellation.
                required: true
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/readwrite
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/invoicing/invoices/{invoice_id}/payments:
        post:
            summary: Record payment for invoice
            description: Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.
            operationId: invoices.payments
            responses:
                "200":
                    description: A successful request returns the HTTP `200 Created` status code and a reference to the recorded payment.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment_reference'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/payment_reference'
                "400":
                    description: Invalid request.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/invoices.payments-400'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/invoices.payments-400'
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: Resource Not Found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_404'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_404'
                "422":
                    description: Unprocessable Entity.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/invoices.payments-422'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/invoices.payments-422'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/invoice_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment_detail'
                        examples:
                            "0":
                                $ref: '#/components/examples/payment_detail'
                description: The details of the payment to record against the invoice.
                required: true
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/readwrite
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/invoicing/invoices/{invoice_id}/payments/{transaction_id}:
        delete:
            summary: Delete external payment
            description: Deletes an external payment, by invoice ID and transaction ID.
            operationId: invoices.payments-delete
            responses:
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: Resource Not Found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_404'
                "422":
                    description: Unprocessable Entity.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/invoices.payments-delete-422'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/invoice_id'
                - $ref: '#/components/parameters/transaction_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/readwrite
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/invoicing/invoices/{invoice_id}/refunds:
        post:
            summary: Record refund for invoice
            description: Records a refund for the invoice. If all payments are refunded, the invoice is marked as `REFUNDED`. Otherwise, the invoice is marked as `PARTIALLY REFUNDED`.
            operationId: invoices.refunds
            responses:
                "200":
                    description: A successful request returns the HTTP `200 Created` status code and a reference to the recorded refund.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/refund_reference'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/refund_reference'
                "400":
                    description: Invalid request.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/invoices.refunds-400'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/invoices.refunds-400'
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: Resource Not Found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_404'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_404'
                "422":
                    description: Unprocessable Entity.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/invoices.refunds-422'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/invoices.refunds-422'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/invoice_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/refund_detail'
                        examples:
                            "0":
                                $ref: '#/components/examples/refund_detail'
                description: The details of the refund to record against the invoice.
                required: true
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/readwrite
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/invoicing/invoices/{invoice_id}/refunds/{transaction_id}:
        delete:
            summary: Delete external refund
            description: Deletes an external refund, by invoice ID and transaction ID.
            operationId: invoices.refunds-delete
            responses:
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: Resource Not Found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_404'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_404'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/invoice_id'
                - $ref: '#/components/parameters/transaction_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/readwrite
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/invoicing/invoices/{invoice_id}/generate-qr-code:
        post:
            summary: Generate QR code
            description: Generates a QR code for an invoice, by ID. The QR code is a PNG image in <a href="https://www.base64encode.org/">Base64-encoded</a> format that corresponds to the invoice ID. You can generate a QR code for an invoice and add it to a paper or PDF invoice. When customers use their mobile devices to scan the QR code, they are redirected to the PayPal mobile payment flow where they can view the invoice and pay online with PayPal or a credit card. Before you get a QR code, you must <a href="#invoices_create">create an invoice</a> and <a href="#invoices_send">send an invoice</a> to move the invoice from a draft to payable state. Do not include an email address if you do not want the invoice emailed.
            operationId: invoices.generate-qr-code
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows the QR code as a PNG image.
                "400":
                    description: Invalid request.
                    content:
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/invoices.generate-qr-code-400'
                "403":
                    description: Authorization Error.
                    content:
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: Resource Not Found.
                    content:
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_404'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/invoice_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/qr_config'
                        examples:
                            "0":
                                $ref: '#/components/examples/qr_config'
                description: Optional configuration parameters to adjust QR code width, height and the encoded URL.
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/readwrite
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/invoicing/generate-next-invoice-number:
        post:
            summary: Generate invoice number
            description: Generates the next invoice number that is available to the merchant. The next invoice number uses the prefix and suffix from the last invoice number and increments the number by one. For example, the next invoice number after `INVOICE-1234` is `INVOICE-1235`.
            operationId: invoicing.generate-next-invoice-number
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows the next invoice number.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/invoice_number'
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_403'
                default:
                    $ref: '#/components/responses/default'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/readwrite
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/invoicing/invoices/{invoice_id}:
        get:
            summary: Show invoice details
            description: Shows details for an invoice, by ID.
            operationId: invoices.get
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows invoice details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/invoice'
                "400":
                    description: Invalid request.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_400'
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: Resource Not Found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_404'
                "422":
                    description: Unprocessable Entity.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_422'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/invoice_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/read
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        put:
            summary: Fully update invoice
            description: Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.
            operationId: invoices.update
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code. A JSON response body that shows invoice details is returned if you set <code>prefer=return=representation</code>.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/invoice'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/invoice'
                "400":
                    description: Invalid request.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/invoices.update-400'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/invoices.update-400'
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: Resource Not Found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_404'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_404'
                "422":
                    description: Unprocessable Entity.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/422'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/422'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/invoice_id'
                - $ref: '#/components/parameters/send_to_recipient'
                - $ref: '#/components/parameters/send_to_invoicer'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/invoice'
                description: A representation of changes to make in the invoice.
                required: true
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/readwrite
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        delete:
            summary: Delete invoice
            description: Deletes a draft or scheduled invoice, by ID. Deletes invoices in the draft or scheduled state only. For invoices that have already been sent, you can <a href="/docs/api/invoicing/v2/#invoices_cancel">cancel the invoice</a>. After you delete a draft or scheduled invoice, you can no longer use it or show its details. However, you can reuse its invoice number.
            operationId: invoices.delete
            responses:
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "400":
                    description: Invalid request.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_400'
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: Resource Not Found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_404'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/invoice_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/readwrite
            tags:
                - invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/invoicing/search-invoices:
        post:
            summary: Search for invoices
            description: Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.
            operationId: invoices.search-invoices
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that lists the invoices that match the search criteria.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/invoices'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/invoices'
                "400":
                    description: Invalid request.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/invoices.search-invoices-400'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/invoices.search-invoices-400'
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_403'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_403'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/page'
                - $ref: '#/components/parameters/page_size'
                - $ref: '#/components/parameters/total_required'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/search_data'
                        examples:
                            "0":
                                $ref: '#/components/examples/search_data'
                description: The invoice search can be used to retrieve the invoices based on the search parameters.
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/read
            tags:
                - search-invoices
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/invoicing/templates:
        get:
            summary: List templates
            description: Lists merchant-created templates with associated details. The associated details include the emails, addresses, and phone numbers from the user's PayPal profile.<br/>The user can select which values to show in the business information section of their template.
            operationId: templates.list
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that lists invoices.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/templates'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/templates'
                "400":
                    description: Invalid request.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/400'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/400'
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_403'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_403'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/fields'
                - $ref: '#/components/parameters/page'
                - $ref: '#/components/parameters/page_size'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/read
            tags:
                - templates
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        post:
            summary: Create template
            description: Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>
            operationId: templates.create
            responses:
                "201":
                    description: A successful request returns the HTTP `201 Created` status code. A JSON response body that shows template details is returned if you set <code>prefer=return=representation</code>.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/template'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/template'
                "400":
                    description: Invalid request.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/templates.create-400'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/templates.create-400'
                "422":
                    description: Unprocessable Entity.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/templates.create-422'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/templates.create-422'
                default:
                    $ref: '#/components/responses/default'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/template'
                required: true
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/readwrite
            tags:
                - templates
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/invoicing/templates/{template_id}:
        get:
            summary: Show template details
            description: Shows details for a template, by ID.
            operationId: templates.get
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows template details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/template'
                            examples:
                                "0":
                                    $ref: '#/components/examples/template'
                                "1":
                                    $ref: '#/components/examples/template_1'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/template'
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/templates.get-403'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/templates.get-403'
                "404":
                    description: Resource Not Found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_404'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_404'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/template_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/read
            tags:
                - templates
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        put:
            summary: Fully update template
            description: Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.
            operationId: templates.update
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code. A JSON response body that shows template details is returned if you set <code>prefer=return=representation</code>.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/template'
                "400":
                    description: Invalid request.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/templates.update-400'
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: Resource Not Found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_404'
                "422":
                    description: Unprocessable Entity.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/templates.update-422'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/template_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/template'
                description: A representation of changes to make in the template.
                required: true
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/readwrite
            tags:
                - templates
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        delete:
            summary: Delete template
            description: Deletes a template, by ID.
            operationId: templates.delete
            responses:
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "400":
                    description: Invalid request.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_400'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_400'
                "403":
                    description: Authorization Error.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/templates.delete-403'
                        multipart/mixed:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/templates.delete-403'
                "404":
                    description: Resource Not Found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_404'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_404'
                "422":
                    description: Unprocessable Entity.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_422'
                        multipart/mixed:
                            schema:
                                $ref: '#/components/schemas/error_422'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/template_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/invoicing/invoices/readwrite
            tags:
                - templates
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/notifications/webhooks:
        post:
            summary: Create webhook
            description: Subscribes your webhook listener to events.
            operationId: webhooks.post
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "201":
                    description: A successful request returns the HTTP `201 Created` status code and a JSON response body with a [`webhook`](/docs/api/webhooks/v1/#definition-webhook) object that includes the webhook ID for later use.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/webhook'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/webhook'
                        examples:
                            webhook:
                                value:
                                    url: https://example.com/example_webhook
                                    event_types:
                                        - name: PAYMENT.AUTHORIZATION.CREATED
                                        - name: PAYMENT.AUTHORIZATION.VOIDED
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/applications/webhooks
            tags:
                - webhooks
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        get:
            summary: List webhooks
            description: Lists webhooks for an app.
            operationId: webhooks.list
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that lists webhooks with webhook details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WebhookList'
            parameters:
                - $ref: '#/components/parameters/anchor_type'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/applications/webhooks
            tags:
                - webhooks
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/notifications/webhooks/{webhook_id}:
        get:
            summary: Show webhook details
            description: Shows details for a webhook, by ID.
            operationId: webhooks.get
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows webhook details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/webhook'
            parameters:
                - $ref: '#/components/parameters/webhook_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/applications/webhooks
            tags:
                - webhooks
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        patch:
            summary: Update webhook
            description: Updates a webhook to replace webhook fields with new values. Supports only the `replace` operation. Pass a `json_patch` object with `replace` operation and `path`, which is `/url` for a URL or `/event_types` for events. The `value` is either the URL or a list of events.
            operationId: webhooks.update
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows webhook details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/webhook'
            parameters:
                - $ref: '#/components/parameters/webhook_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/patch_request'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/applications/webhooks
            tags:
                - webhooks
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        delete:
            summary: Delete webhook
            description: Deletes a webhook, by ID.
            operationId: webhooks.delete
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
            parameters:
                - $ref: '#/components/parameters/webhook_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/applications/webhooks
            tags:
                - webhooks
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/notifications/webhooks/{webhook_id}/event-types:
        get:
            summary: List event subscriptions for webhook
            description: Lists event subscriptions for a webhook, by ID.
            operationId: event-types.list
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that lists event subscriptions for a webhook.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EventTypeList'
            parameters:
                - $ref: '#/components/parameters/webhook_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/applications/webhooks
            tags:
                - webhooks
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/notifications/webhooks-lookup:
        post:
            summary: Create webhook lookup
            description: Creates a webhook lookup.
            operationId: webhooks-lookup.post
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "201":
                    description: A successful request returns the HTTP `201 Created` status code and a JSON response body that shows webhook lookup details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/webhooks_lookup'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/applications/webhooks
            tags:
                - webhooks-lookup
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        get:
            summary: List webhook lookups
            description: Lists webhook lookups.
            operationId: webhooks-lookup.list
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that lists webhook lookups with webhook lookup details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WebhookLookupList'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/applications/webhooks
            tags:
                - webhooks-lookup
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/notifications/webhooks-lookup/{webhook_lookup_id}:
        get:
            summary: Show webhook lookup details
            description: Shows details for a webhook lookup, by ID.
            operationId: webhooks-lookup.get
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows webhook lookup details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/webhooks_lookup'
            parameters:
                - $ref: '#/components/parameters/webhook_lookup_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/applications/webhooks
            tags:
                - webhooks-lookup
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        delete:
            summary: Delete webhook lookup
            description: Deletes a webhook lookup, by ID.
            operationId: webhooks-lookup.delete
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
            parameters:
                - $ref: '#/components/parameters/webhook_lookup_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/applications/webhooks
            tags:
                - webhooks-lookup
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/notifications/verify-webhook-signature:
        post:
            summary: Verify webhook signature
            description: Verifies a webhook signature.
            operationId: verify-webhook-signature.post
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows the verification status.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/verify_webhook_signature_response'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/verify_webhook_signature'
                        examples:
                            verify_webhook_signature:
                                value:
                                    transmission_id: 69cd13f0-d67a-11e5-baa3-778b53f4ae55
                                    transmission_time: "2016-02-18T20:01:35Z"
                                    cert_url: cert_url
                                    auth_algo: SHA256withRSA
                                    transmission_sig: lmI95Jx3Y9nhR5SJWlHVIWpg4AgFk7n9bCHSRxbrd8A9zrhdu2rMyFrmz+Zjh3s3boXB07VXCXUZy/UFzUlnGJn0wDugt7FlSvdKeIJenLRemUxYCPVoEZzg9VFNqOa48gMkvF+XTpxBeUx/kWy6B5cp7GkT2+pOowfRK7OaynuxUoKW3JcMWw272VKjLTtTAShncla7tGF+55rxyt2KNZIIqxNMJ48RDZheGU5w1npu9dZHnPgTXB9iomeVRoD8O/jhRpnKsGrDschyNdkeh81BJJMH4Ctc6lnCCquoP/GzCzz33MMsNdid7vL/NIWaCsekQpW26FpWPi/tfj8nLA==
                                    webhook_id: 1JE4291016473214C
                                    webhook_event:
                                        id: 8PT597110X687430LKGECATA
                                        create_time: "2013-06-25T21:41:28Z"
                                        resource_type: authorization
                                        event_type: PAYMENT.AUTHORIZATION.CREATED
                                        summary: A payment authorization was created
                                        resource:
                                            id: 2DC87612EK520411B
                                            create_time: "2013-06-25T21:39:15Z"
                                            update_time: "2013-06-25T21:39:17Z"
                                            state: authorized
                                            amount:
                                                total: "7.47"
                                                currency: USD
                                                details:
                                                    subtotal: "7.47"
                                            parent_payment: PAY-36246664YD343335CKHFA4AY
                                            valid_until: "2013-07-24T21:39:15Z"
                                            links:
                                                - href: https://api-m.paypal.com/v1/payments/authorization/2DC87612EK520411B
                                                  rel: self
                                                  method: GET
                                                - href: https://api-m.paypal.com/v1/payments/authorization/2DC87612EK520411B/capture
                                                  rel: capture
                                                  method: POST
                                                - href: https://api-m.paypal.com/v1/payments/authorization/2DC87612EK520411B/void
                                                  rel: void
                                                  method: POST
                                                - href: https://api-m.paypal.com/v1/payments/payment/PAY-36246664YD343335CKHFA4AY
                                                  rel: parent_payment
                                                  method: GET
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/applications/webhooks
                    - https://uri.paypal.com/services/applications/verify-webhook-signature
            tags:
                - verify-webhook-signature
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/notifications/webhooks-event-types:
        get:
            summary: List available events
            description: Lists available events to which any webhook can subscribe. For a list of supported events, see [Webhook event names](/docs/api/notifications/webhooks/event-names/).
            operationId: webhooks-event-types.list
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that lists available events to which any webhook can subscribe.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EventTypeList'
            tags:
                - webhooks-event-types
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/notifications/webhooks-events:
        get:
            summary: List event notifications
            description: Lists webhooks event notifications. Use query parameters to filter the response.
            operationId: webhooks-events.list
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that lists webhooks event notifications.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EventList'
            parameters:
                - $ref: '#/components/parameters/page_size'
                - $ref: '#/components/parameters/start_time'
                - $ref: '#/components/parameters/end_time'
                - $ref: '#/components/parameters/transaction_id'
                - $ref: '#/components/parameters/event_type'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/applications/webhooks
            tags:
                - webhooks-events
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/notifications/webhooks-events/{event_id}:
        get:
            summary: Show event notification details
            description: Shows details for a webhooks event notification, by ID.
            operationId: webhooks-events.get
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows webhooks event notification details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/event'
            parameters:
                - $ref: '#/components/parameters/event_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/applications/webhooks
            tags:
                - webhooks-events
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/notifications/webhooks-events/{event_id}/resend:
        post:
            summary: Resend event notification
            description: Resends a webhook event notification, by ID. Any pending notifications are not resent.
            operationId: webhooks-events.resend
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "202":
                    description: A successful request returns the HTTP `202 Accepted` status code and a JSON response body that shows webhook event notification details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/event'
            parameters:
                - $ref: '#/components/parameters/event_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/event_resend'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/applications/webhooks
            tags:
                - webhooks-events
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/notifications/simulate-event:
        post:
            summary: Simulate webhook event
            description: Simulates a webhook event. In the JSON request body, specify a sample payload.<br>You need to subscribe to the following webhook events for Pay upon Invoice:<br><table><thead><tr><th>Event</th><th>Trigger</th></tr></thead><tbody><tr><td><code>PAYMENT.CAPTURE.COMPLETED</code></td><td>A payment capture completes.</td></tr><tr><td><code>PAYMENT.CAPTURE.DENIED</code></td><td>A payment capture is denied.</td></tr><tr><td><code>CHECKOUT.PAYMENT-APPROVAL.REVERSED</code></td><td>PayPal reverses a payment capture.</td></tr></tbody></table>
            operationId: simulate-event.post
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "202":
                    description: A successful request returns the HTTP `202 Accepted` status code and a JSON response body that shows details for the mock event.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/event'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/simulate_event'
                        examples:
                            simulate_event:
                                value:
                                    url: https://example.com/example_webhook
                                    event_type: PAYMENT.AUTHORIZATION.CREATED
                                    resource_version: "1.0"
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/applications/webhooks
            tags:
                - simulate-event
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payment-experience/web-profiles:
        post:
            summary: Create web experience profile
            description: Creates a web experience profile. In the JSON request body, specify the profile name and details.
            operationId: web-profile.create
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request, with or without the optional <code>PayPal-Request-Id</code> request header, returns the HTTP <code>201 Created</code> status code and a JSON response body that shows the profile details and the ID of the profile. Any subsequent calls with the same <code>PayPal-Request-Id</code> request header value within a three-hour window returns the HTTP <code>200 OK</code> status code and a JSON response body that shows the profile details and the ID of the profile.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/web_profile'
                "201":
                    description: A successful request, with or without the optional <code>PayPal-Request-Id</code> request header, returns the HTTP <code>201 Created</code> status code and a JSON response body that shows the profile details and the ID of the profile. Any subsequent calls with the same <code>PayPal-Request-Id</code> request header value within a three-hour window returns the HTTP <code>200 OK</code> status code and a JSON response body that shows the profile details and the ID of the profile.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/web_profile'
                "500":
                    description: An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/paypal_request_id'
            requestBody:
                $ref: '#/components/requestBodies/web_profile'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/realtimepayment
            tags:
                - web-profiles
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        get:
            summary: List web experience profiles
            description: Lists the latest 20 web experience profiles for a merchant or subject. To show details for these or additional profiles, you can show web experience profile details by ID.
            operationId: web-profile.get-list
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that lists the latest 20 profiles that the merchant owns, with details. To show details for these or additional profiles, you can show web experience profile details by ID.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/web_profile_list'
                "500":
                    description: An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/realtimepayment
            tags:
                - web-profiles
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payment-experience/web-profiles/{id}:
        put:
            summary: Update web experience profile
            description: Updates a web experience profile, by ID. In the JSON request body, specify the profile details. If your request omits any profile parameters, any previously set values for those parameters are removed.
            operationId: web-profile.update
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "500":
                    description: An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                $ref: '#/components/requestBodies/web_profile'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/realtimepayment
            tags:
                - web-profiles
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        patch:
            summary: Partially update web experience profile
            description: Partially-updates a web experience profile, by ID. In the JSON request body, specify a patch object, the path of the profile location to update, and a new value.
            operationId: web-profile.partial-update
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "500":
                    description: An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/patch_request'
                        examples:
                            patch_request:
                                value:
                                    - op: add
                                      path: /presentation/brand_name
                                      value: new_brand_name
                                    - op: remove
                                      path: /flow_config/landing_page_type
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/realtimepayment
            tags:
                - web-profiles
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        get:
            summary: Show web experience profile details by ID
            description: Shows details for a web experience profile, by ID.
            operationId: web-profile.get
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows the profile details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/web_profile'
                "500":
                    description: An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/realtimepayment
            tags:
                - web-profiles
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        delete:
            summary: Delete web experience profile
            description: Deletes a web experience profile, by ID.
            operationId: web-profile.delete
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "204":
                    description: A successful request returns the HTTP `204 No Content` status code with no JSON response body.
                "500":
                    description: An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/realtimepayment
            tags:
                - web-profiles
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/payment:
        post:
            summary: Create payment
            description: '<blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Creates a sale, an authorized payment to be captured later, or an order. To create a sale, authorization, or order, include the payment details in the JSON request body. Set the <code>intent</code> to <code>sale</code>, <code>authorize</code>, or <code>order</code>. <blockquote><strong>Note: </strong>TPP Clients (Third Party Providers in the context of PSD2 regulation) are restricted from using <code>authorize</code> and <code>order</code> intents.</blockquote> Include payer, transaction details, and, for PayPal payments only, redirect URLs. The combination of the <code>payment_method</code> and <code>funding_instrument</code> determines the type of payment that is created. For more information, see <a href="/docs/integration/direct/payments/">Payments REST API</a>.'
            operationId: payment.create
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "201":
                    description: A successful request returns the HTTP `201 Created` status code and a JSON response body that shows payment details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment'
            parameters:
                - $ref: '#/components/parameters/paypal_partner_attribution_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment'
                        examples:
                            payment:
                                value:
                                    intent: sale
                                    payer:
                                        payment_method: paypal
                                    transactions:
                                        - amount:
                                            total: "30.11"
                                            currency: USD
                                            details:
                                                subtotal: "30.00"
                                                tax: "0.07"
                                                shipping: "0.03"
                                                handling_fee: "1.00"
                                                shipping_discount: "-1.00"
                                                insurance: "0.01"
                                          description: The payment transaction description.
                                          custom: EBAY_EMS_90048630024435
                                          invoice_number: "48787589673"
                                          payment_options:
                                            allowed_payment_method: INSTANT_FUNDING_SOURCE
                                          soft_descriptor: ECHI5786786
                                          item_list:
                                            items:
                                                - name: hat
                                                  description: Brown hat.
                                                  quantity: "5"
                                                  price: "3"
                                                  tax: "0.01"
                                                  sku: "1"
                                                  currency: USD
                                                - name: handbag
                                                  description: Black handbag.
                                                  quantity: "1"
                                                  price: "15"
                                                  tax: "0.02"
                                                  sku: product34
                                                  currency: USD
                                            shipping_address:
                                                recipient_name: Brian Robinson
                                                line1: 4th Floor
                                                line2: 'Unit #34'
                                                city: San Jose
                                                country_code: US
                                                postal_code: "95131"
                                                phone: "011862212345678"
                                                state: CA
                                    note_to_payer: Contact us for any questions on your order.
                                    redirect_urls:
                                        return_url: https://example.com/return
                                        cancel_url: https://example.com/cancel
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/realtimepayment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/paymentcard
                - Oauth2:
                    - https://uri.paypal.com/services/payments/channelpartner
            tags:
                - payment
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        get:
            summary: List payments
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Lists payments that are completed. Payments that you just created with the <a href="/docs/api/payments/v1/#payment_create">create payment</a> call do not appear in the list.<br/><br/>The list shows the payments that are made to the merchant who makes the call. To filter the payments that appear in the response, you can specify one or more optional query and pagination parameters. See <a href="/docs/api/reference/api-requests/#query-parameters">Filtering and pagination</a>.
            operationId: payment.list
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that lists payments with payment details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment_history'
            parameters:
                - $ref: '#/components/parameters/count'
                - $ref: '#/components/parameters/start_id'
                - $ref: '#/components/parameters/start_index'
                - $ref: '#/components/parameters/start_time'
                - $ref: '#/components/parameters/end_time'
                - $ref: '#/components/parameters/payee_id'
                - $ref: '#/components/parameters/sort_by'
                - $ref: '#/components/parameters/sort_order'
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/realtimepayment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment/authcapture
                - Oauth2:
                    - https://uri.paypal.com/services/checkout/onetimepayment
            tags:
                - payment
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/payment/{payment_id}:
        get:
            summary: Show payment details
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Shows details for a payment, by ID, that has yet to complete. For example, shows details for a payment that was created, approved, or failed.
            operationId: payment.get
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows payment details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment'
            parameters:
                - $ref: '#/components/parameters/payment_id'
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/realtimepayment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment/authcapture
            tags:
                - payment
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
        patch:
            summary: Partially update payment
            description: '<blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Partially updates a payment, by ID. You can update the amount, shipping address, invoice ID, and custom data. You cannot update a payment after the payment executes. <blockquote><strong>Note: </strong>TPP Clients (Third Party Providers in the context of PSD2 regulation) are restricted from patching amount once authorized.</blockquote>'
            operationId: payment.update
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows payment details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment'
            parameters:
                - $ref: '#/components/parameters/payment_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/patch_request'
                        examples:
                            patch_request:
                                value:
                                    - op: replace
                                      path: /transactions/0/amount
                                      value:
                                        total: "18.37"
                                        currency: EUR
                                        details:
                                            subtotal: "13.37"
                                            shipping: "5.00"
                                    - op: add
                                      path: /transactions/0/item_list/shipping_address
                                      value:
                                        recipient_name: Anna Gruneberg
                                        line1: Kathwarinenhof 1
                                        city: Flensburg
                                        postal_code: "24939"
                                        country_code: DE
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/realtimepayment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/channelpartner
            tags:
                - payment
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/payment/{payment_id}/execute:
        post:
            summary: Execute approved PayPal payment
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Executes a PayPal payment that the customer has approved. You can optionally update one or more transactions when you execute the payment.<blockquote><strong>Important:</strong> This call works only after a customer has approved the payment. For more information, learn about <a href="/docs/integration/direct/payments/paypal-payments/">PayPal payments</a>.</blockquote>
            operationId: payment.execute
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows details for the executed payment.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment'
            parameters:
                - $ref: '#/components/parameters/paypal_request_id'
                - $ref: '#/components/parameters/paypal_partner_attribution_id'
                - $ref: '#/components/parameters/payment_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment_execution'
                        examples:
                            payment_execution:
                                value:
                                    payer_id: CR87QHB7JTRSC
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/realtimepayment
            tags:
                - payment
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/sale/{sale_id}:
        get:
            summary: Show sale details
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Shows details for a sale, by ID. Returns only sales that were created through the REST API.
            operationId: sale.get
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows sale details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/sale'
            parameters:
                - $ref: '#/components/parameters/sale_id'
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/realtimepayment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment/authcapture
            tags:
                - sale
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/sale/{sale_id}/refund:
        post:
            summary: Refund sale
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Refunds a sale, by ID. For a full refund, do not include the <code>amount</code> object in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.
            operationId: sale.refund
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful idempotent request returns the HTTP `200 Created` status code and a JSON response body that shows details for the refunded sale.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/detailed_refund'
                "201":
                    description: A successful request returns the HTTP `201 Created` status code and a JSON response body that shows details for the refunded sale.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/detailed_refund'
                "409":
                    description: The request failed because a previous call for the given resource is in progress.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/paypal_request_id'
                - $ref: '#/components/parameters/sale_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/refund_request'
                        examples:
                            refund_request:
                                value:
                                    amount:
                                        total: "100.00"
                                        currency: USD
                                    invoice_number: INV-7654321
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/refund
                - Oauth2:
                    - https://uri.paypal.com/services/payments/unilateralrefund
            tags:
                - sale
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/authorization/{authorization_id}:
        get:
            summary: Show authorization details
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Shows details for an authorization, by ID.
            operationId: authorization.get
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows authorization details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/authorization'
            parameters:
                - $ref: '#/components/parameters/authorization_id'
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/realtimepayment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment/authcapture
            tags:
                - authorization
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/authorization/{authorization_id}/capture:
        post:
            summary: Capture authorization
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Captures and processes an authorization, by ID. The original payment call must specify an intent of <code>authorize</code>.
            operationId: authorization.capture
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "201":
                    description: A successful request returns the HTTP `201 Created` status code and a JSON response body that shows details for the captured authorization.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/capture'
            parameters:
                - $ref: '#/components/parameters/authorization_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/capture'
                        examples:
                            capture:
                                value:
                                    amount:
                                        currency: USD
                                        total: "4.54"
                                    is_final_capture: true
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment/authcapture
            tags:
                - authorization
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/authorization/{authorization_id}/void:
        post:
            summary: Void authorization
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Voids, or cancels, an authorization, by ID. You cannot void a fully captured authorization.
            operationId: authorization.void
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows details for the voided authorization.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/authorization'
                "409":
                    description: The request failed because a previous call for the given resource is in progress.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/paypal_request_id'
                - $ref: '#/components/parameters/authorization_id'
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment/authcapture
            tags:
                - authorization
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/authorization/{authorization_id}/reauthorize:
        post:
            summary: Re-authorize payment
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Re-authorizes a PayPal account payment, by authorization ID. To ensure that funds are still available, re-authorize a payment after the initial three-day honor period. Supports only the <code>amount</code> request parameter. You can re-authorize a payment only once from four to 29 days after three-day honor period for the original authorization expires. If 30 days have passed from the original authorization, you must create a new authorization instead. A re-authorized payment itself has a new three-day honor period. You can re-authorize a transaction once for up to 115% of the originally authorized amount, not to exceed an increase of $75 USD.
            operationId: authorization.reauthorize
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "201":
                    description: A successful request returns the HTTP `201 Created` status code and a JSON response body that shows details for the re-authorized authorization.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/authorization'
            parameters:
                - $ref: '#/components/parameters/authorization_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/authorization'
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment/authcapture
            tags:
                - authorization
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/orders/{order_id}:
        get:
            summary: Show order details
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Shows details for an order, by ID.
            operationId: orders.get
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows details for the voided authorization.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
            parameters:
                - $ref: '#/components/parameters/order_id'
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/realtimepayment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment/authcapture
            tags:
                - orders
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/orders/{order_id}/capture:
        post:
            summary: Capture order
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Captures a payment for an order, by ID. To use this call, the original payment call must specify an <code>order</code> intent. In the JSON request body, include the payment amount and indicate whether this capture is the final capture for the authorization.
            operationId: orders.capture
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "201":
                    description: A successful request returns the HTTP `201 Created` status code and a JSON response body that shows details for the captured order.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/capture'
            parameters:
                - $ref: '#/components/parameters/order_id'
            requestBody:
                $ref: '#/components/requestBodies/capture'
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment/authcapture
            tags:
                - orders
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/orders/{order_id}/do-void:
        post:
            summary: Void order
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Voids, or cancels, an order, by ID. You can only void orders that are either in the <code>PENDING</code> or <code>AUTHORIZED</code> states or those in the <code>CAPTURED</code> state that are not fully captured.
            operationId: orders.void
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows details for the voided order.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
            parameters:
                - $ref: '#/components/parameters/paypal_request_id'
                - $ref: '#/components/parameters/order_id'
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment/authcapture
            tags:
                - orders
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/orders/{order_id}/authorize:
        post:
            summary: Authorize order
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Authorizes an order, by ID. In the JSON request body, include an <code>amount</code> object.
            operationId: orders.authorize
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "201":
                    description: A successful request returns the HTTP `201 Created` status code and a JSON response body that shows details for the authorized order.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/authorization'
            parameters:
                - $ref: '#/components/parameters/order_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/order'
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment/authcapture
            tags:
                - orders
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/capture/{capture_id}:
        get:
            summary: Show captured payment details
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Shows details for a captured payment, by ID.
            operationId: capture.get
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows details for the captured payment.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/capture'
            parameters:
                - $ref: '#/components/parameters/capture_id'
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/realtimepayment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment/authcapture
            tags:
                - capture
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/capture/{capture_id}/refund:
        post:
            summary: Refund captured payment
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Refunds a captured payment, by ID. In the JSON request body, include an <code>amount</code> object.
            operationId: capture.refund
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful idempotent request returns the HTTP `200 OK` status code and a JSON response body that shows details for the captured payment.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/detailed_refund'
                "201":
                    description: A successful request returns the HTTP `201 OK` status code and a JSON response body that shows details for the captured payment.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/detailed_refund'
                "409":
                    description: The request failed because a previous call for the given resource is in progress.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/paypal_request_id'
                - $ref: '#/components/parameters/capture_id'
            requestBody:
                $ref: '#/components/requestBodies/refund_request'
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/refund
                - Oauth2:
                    - https://uri.paypal.com/services/payments/unilateralrefund
            tags:
                - capture
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/refund/{refund_id}:
        get:
            summary: Show refund details
            description: <blockquote><strong>Deprecation notice:</strong> The <code>/v1/payments</code> endpoint is deprecated. Use the <code>/v2/payments</code> endpoint instead. For details, see <a href="/docs/checkout/integrate/">PayPal Checkout Basic Integration</a>.</blockquote>Shows details for a refund, by ID.
            operationId: refund.get
            responses:
                default:
                    description: The error details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows refund details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/refund'
            parameters:
                - $ref: '#/components/parameters/refund_id'
            security:
                - Oauth2:
                    - https://api.paypal.com/v1/payments/.*
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment
                - Oauth2:
                    - https://uri.paypal.com/services/payments/refund
            tags:
                - refund
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/payments/authorizations/{authorization_id}:
        get:
            summary: Show details for authorized payment
            description: Shows details for an authorized payment, by ID.
            operationId: authorizations.get
            parameters:
                - $ref: '#/components/parameters/authorization_id'
            responses:
                "200":
                    description: A successful request returns the HTTP <code>200 OK</code> status code and a JSON response body that shows authorization details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/authorization-2'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_401'
                "403":
                    description: The request failed because the caller has insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The request failed because the resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "500":
                    description: The request failed because an internal server error occurred.
                default:
                    $ref: '#/components/responses/default'
            tags:
                - authorizations
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment/authcapture
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/payments/authorizations/{authorization_id}/capture:
        post:
            summary: Capture authorized payment
            description: Captures an authorized payment, by ID.
            operationId: authorizations.capture
            parameters:
                - $ref: '#/components/parameters/authorization_id'
                - $ref: '#/components/parameters/paypal_request_id'
                - $ref: '#/components/parameters/prefer'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/capture_request'
                        examples:
                            capture_request:
                                value:
                                    amount:
                                        value: "10.99"
                                        currency_code: USD
                                    invoice_id: INVOICE-123
                                    final_capture: true
                                    note_to_payer: If the ordered color is not available, we will substitute with a different color free of charge.
                                    soft_descriptor: Bob's Custom Sweaters
            responses:
                "201":
                    description: A successful request returns the HTTP <code>201 Created</code> status code and a JSON response body that shows captured payment details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/capture-2'
                "400":
                    description: The request failed because it is not well-formed or is syntactically incorrect or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_401'
                "403":
                    description: The request failed because the caller has insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The request failed because the resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "422":
                    description: The request failed because it is semantically incorrect or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/422'
                "500":
                    description: The request failed because an internal server error occurred.
                default:
                    $ref: '#/components/responses/default'
            tags:
                - authorizations
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment/authcapture
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/payments/authorizations/{authorization_id}/reauthorize:
        post:
            summary: Reauthorize authorized payment
            description: Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment from 4 to 29 days after the 3-day honor period. The allowed amount depends on context and geography, for example in US it is up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>
            operationId: authorizations.reauthorize
            parameters:
                - $ref: '#/components/parameters/authorization_id'
                - $ref: '#/components/parameters/paypal_request_id'
                - $ref: '#/components/parameters/prefer'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/reauthorize_request'
                        examples:
                            reauthorize_request:
                                value:
                                    amount:
                                        value: "10.99"
                                        currency_code: USD
            responses:
                "201":
                    description: A successful request returns the HTTP <code>201 Created</code> status code and a JSON response body that shows the reauthorized payment details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/authorization-2'
                "400":
                    description: The request failed because it is not well-formed or is syntactically incorrect or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/authorizations.reauthorize-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_401'
                "403":
                    description: The request failed because the caller has insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The request failed because the resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "422":
                    description: The request failed because it either is semantically incorrect or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/authorizations.reauthorize-422'
                "500":
                    description: The request failed because an internal server error occurred.
                default:
                    $ref: '#/components/responses/default'
            tags:
                - authorizations
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment/authcapture
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/payments/authorizations/{authorization_id}/void:
        post:
            summary: Void authorized payment
            description: Voids, or cancels, an authorized payment, by ID. You cannot void an authorized payment that has been fully captured.
            operationId: authorizations.void
            parameters:
                - $ref: '#/components/parameters/authorization_id'
                - $ref: '#/components/parameters/paypal_auth_assertion'
                - $ref: '#/components/parameters/prefer'
            responses:
                "200":
                    description: A successful request returns the HTTP <code>200 OK</code> status code and a JSON response body that shows authorization details. This response is returned when the Prefer header is set to return=representation.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/authorization-2'
                "204":
                    description: A successful request returns the HTTP <code>204 No Content</code> status code with no JSON response body. This response is returned when the Prefer header is set to return=minimal.
                "400":
                    description: The request failed because it is not well-formed or is syntactically incorrect or violates schema.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: The request failed because the caller has insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The request failed because the resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "409":
                    description: The request failed because a previous call for the given resource is in progress.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_409'
                                    - $ref: '#/components/schemas/409'
                "422":
                    description: The request failed because it either is semantically incorrect or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/authorizations.void-422'
                "500":
                    description: The request failed because an internal server error occurred.
                default:
                    $ref: '#/components/responses/default'
            tags:
                - authorizations
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment/authcapture
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/payments/captures/{capture_id}:
        get:
            summary: Show captured payment details
            description: Shows details for a captured payment, by ID.
            operationId: captures.get
            parameters:
                - $ref: '#/components/parameters/capture_id'
            responses:
                "200":
                    description: A successful request returns the HTTP <code>200 OK</code> status code and a JSON response body that shows captured payment details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/capture-2'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_401'
                "403":
                    description: The request failed because the caller has insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The request failed because the resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "500":
                    description: The request failed because an internal server error occurred.
                default:
                    $ref: '#/components/responses/default'
            tags:
                - captures
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/payment/authcapture
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/payments/captures/{capture_id}/refund:
        post:
            summary: Refund captured payment
            description: Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.
            operationId: captures.refund
            parameters:
                - $ref: '#/components/parameters/capture_id'
                - $ref: '#/components/parameters/paypal_request_id'
                - $ref: '#/components/parameters/prefer'
                - $ref: '#/components/parameters/paypal_auth_assertion'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/refund_request'
                        examples:
                            refund_request:
                                value:
                                    amount:
                                        value: "10.00"
                                        currency_code: USD
                                    invoice_id: INVOICE-123
                                    note_to_payer: DefectiveProduct
                                    payment_instruction:
                                        platform_fees:
                                            - amount:
                                                currency_code: USD
                                                value: "1.00"
            responses:
                "201":
                    description: A successful request returns the HTTP <code>201 Created</code> status code and a JSON response body that shows refund details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/refund'
                "400":
                    description: The request failed because it is not well-formed or is syntactically incorrect or violates schema.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_400'
                                    - $ref: '#/components/schemas/captures.refund-400'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: The request failed because the caller has insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The request failed because the resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "409":
                    description: The request failed because a previous call for the given resource is in progress.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_409'
                                    - $ref: '#/components/schemas/409'
                "422":
                    description: The request failed because it either is semantically incorrect or failed business validation.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_422'
                                    - $ref: '#/components/schemas/captures.refund-422'
                "500":
                    description: The request failed because an internal server error occurred.
                default:
                    $ref: '#/components/responses/default'
            tags:
                - captures
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/refund
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v2/payments/refunds/{refund_id}:
        get:
            summary: Show refund details
            description: Shows details for a refund, by ID.
            operationId: refunds.get
            parameters:
                - $ref: '#/components/parameters/refund_id'
            responses:
                "200":
                    description: A successful request returns the HTTP <code>200 OK</code> status code and a JSON response body that shows refund details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/refund'
                "401":
                    description: Authentication failed due to missing authorization header, or invalid authentication credentials.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_401'
                                    - $ref: '#/components/schemas/401'
                "403":
                    description: The request failed because the caller has insufficient permissions.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_403'
                                    - $ref: '#/components/schemas/403'
                "404":
                    description: The request failed because the resource does not exist.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/error_404'
                                    - $ref: '#/components/schemas/404'
                "500":
                    description: The request failed because an internal server error occurred.
                default:
                    $ref: '#/components/responses/default'
            tags:
                - refunds
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/payments/refund
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/payouts:
        post:
            summary: Create batch payout
            description: Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href="/api/rest/requests/#http-request-headers">HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href="https://www.paypal.com/us/webapps/mpp/partner-program">PayPal Partner Program</a>.</p></li></ul></blockquote>
            operationId: payouts.post
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "201":
                    description: A successful request returns the HTTP <code>201 Created</code> status code and a JSON response body that shows the ID for the payout and payout details. To show payout status, use the <code>payout_batch_id</code> value that appears in the response. If the initial scan that checks for syntax errors, missing or duplicated keywords, and more succeeds, the <code>batch_status</code> is <code>PENDING</code>. The initial scan checks for syntax errors and missing or duplicated keywords. The API does not immediately validate some payout item values, such as the receiver phone numbers.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payout'
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/paypal_request_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/create_payout_request'
                        examples:
                            create_payout_request:
                                value:
                                    sender_batch_header:
                                        sender_batch_id: Payouts_2018_100007
                                        email_subject: You have a payout!
                                        email_message: You have received a payout! Thanks for using our service!
                                    items:
                                        - recipient_type: EMAIL
                                          amount:
                                            value: "9.87"
                                            currency: USD
                                          note: Thanks for your patronage!
                                          sender_item_id: "201403140001"
                                          receiver: receiver@example.com
                                          alternate_notification_method:
                                            phone:
                                                country_code: "91"
                                                national_number: "9999988888"
                                          notification_language: fr-FR
                                        - recipient_type: PHONE
                                          amount:
                                            value: "112.34"
                                            currency: USD
                                          note: Thanks for your support!
                                          sender_item_id: "201403140002"
                                          receiver: 91-734-234-1234
                                        - recipient_type: PAYPAL_ID
                                          amount:
                                            value: "5.32"
                                            currency: USD
                                          note: Thanks for your patronage!
                                          sender_item_id: "201403140003"
                                          receiver: G83JXTJ5EHCQ2
            security:
                - Oauth2:
                    - https://uri.paypal.com/payments/payouts
            tags:
                - payouts
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/payouts/{id}:
        get:
            summary: Show payout batch details
            description: Shows the latest status of a batch payout. Includes the transaction status and other data for individual payout items.
            operationId: payouts.get
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows batch payout details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payout_batch'
                "404":
                    description: Resource Not Found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/fields'
                - $ref: '#/components/parameters/page'
                - $ref: '#/components/parameters/page_size'
                - $ref: '#/components/parameters/total_required'
            security:
                - Oauth2:
                    - https://uri.paypal.com/payments/payouts
            tags:
                - payouts
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/payouts-item/{payout_item_id}:
        get:
            summary: Show payout item details
            description: Shows details for a payout item, by ID. A <code>payout_item_id</code> helps you identify denied payments. If a payment is denied, you can use the <code>payout_item_id</code> to identify the payment even if it lacks a <code>transaction_id</code>.
            operationId: payouts-item.get
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP <code>200 OK</code> status code and a JSON response body with a <code>payout_item_details</code> object, which contains data about a payout item including the transaction status.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payout_item-2'
                "404":
                    description: Resource Not Found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/payout_item_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/payments/payouts
            tags:
                - payouts-item
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/payments/payouts-item/{payout_item_id}/cancel:
        post:
            summary: Cancel unclaimed payout item
            description: Cancels an unclaimed payout item, by ID. If no one claims the unclaimed item within 30 days, the API automatically returns the funds to the sender. Use this call to cancel the unclaimed item before the automatic 30-day refund. You can cancel payout items with a <code>transaction_status</code> of <code>UNCLAIMED</code>.
            operationId: payouts-item.cancel
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code with a JSON response body that shows payout item details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payout_item-2'
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "404":
                    description: Resource Not Found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/payout_item_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/payments/payouts
            tags:
                - payouts-item
            servers:
                - url: https://api-m.sandbox.paypal.com
                  description: PayPal Sandbox Environment
                - url: https://api-m.paypal.com
                  description: PayPal Live Environment
    /v1/reporting/transactions:
        get:
            summary: List transactions
            description: Lists transactions. Specify one or more query parameters to filter the transaction that appear in the response.<blockquote><strong>Notes:</strong> <ul><li>If you specify one or more optional query parameters, the <code>ending_balance</code> response field is empty.</li><li>It takes a maximum of three hours for executed transactions to appear in the list transactions call.</li><li>This call lists transaction for the previous three years.</li></ul></blockquote>
            operationId: search.get
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that lists transactions .
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/search_response'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/transaction_id'
                - $ref: '#/components/parameters/transaction_type'
                - $ref: '#/components/parameters/transaction_status'
                - $ref: '#/components/parameters/transaction_amount'
                - $ref: '#/components/parameters/transaction_currency'
                - $ref: '#/components/parameters/start_date'
                - $ref: '#/components/parameters/end_date'
                - $ref: '#/components/parameters/payment_instrument_type'
                - $ref: '#/components/parameters/store_id'
                - $ref: '#/components/parameters/terminal_id'
                - $ref: '#/components/parameters/fields'
                - $ref: '#/components/parameters/balance_affecting_records_only'
                - $ref: '#/components/parameters/page_size'
                - $ref: '#/components/parameters/page'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/reporting/search/read
            tags:
                - transactions
            servers:
                - url: https://api-m.paypal.com/v1/reporting
    /v1/reporting/balances:
        get:
            summary: List all balances
            description: List all balances. Specify date time to list balances for that time that appear in the response.<blockquote><strong>Notes:</strong> <ul><li>It takes a maximum of three hours for balances to appear in the list balances call.</li><li>This call lists balances upto the previous three years.</li></ul></blockquote>
            operationId: balances.get
            responses:
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that lists balances .
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/balances_response'
                "400":
                    description: The request is not well-formed, is syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_400'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_403'
                "500":
                    description: An internal server error occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_500'
                default:
                    $ref: '#/components/responses/default'
            parameters:
                - $ref: '#/components/parameters/as_of_time'
                - $ref: '#/components/parameters/currency_code'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/reporting/balances/read
            tags:
                - balances
            servers:
                - url: https://api-m.paypal.com/v1/reporting
    /v1/shipping/trackers-batch:
        post:
            summary: Add tracking information for multiple PayPal transactions
            description: Adds tracking information, with or without tracking numbers, for multiple PayPal transactions. Accepts up to 20 tracking IDs. For more information, see <a href="/docs/tracking/integrate/#add-tracking-information-with-tracking-numbers">Add tracking information with tracking numbers</a> and <a href="/docs/tracking/integrate/#add-tracking-information-without-tracking-numbers">Add tracking information without tracking numbers</a>.
            operationId: trackers-batch.post
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP 200 OK status code and a JSON response body that shows tracking information.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/batch_tracker_collection'
                "400":
                    description: The request is not well-formed, syntactically incorrect, or violates schema.
                "403":
                    description: The authorization failed due to insufficient permissions.
                "404":
                    description: The specified resource does not exist.
                "500":
                    description: An internal server error has occurred.
            requestBody:
                $ref: '#/components/requestBodies/tracker_collection'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/shipping/trackers/readwrite
            tags:
                - trackers-batch
    /v1/shipping/trackers:
        post:
            summary: Add tracking information for PayPal transaction
            description: Adds tracking information for a PayPal transaction.
            operationId: trackers.post
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP 200 OK status code and a JSON response body that shows tracking information.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/tracker_identifier_collection'
            requestBody:
                $ref: '#/components/requestBodies/tracker_collection'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/shipping/trackers/readwrite
            tags:
                - trackers
        get:
            summary: List tracking information
            description: Lists tracking information that meet search criteria. The tracking ID is required but the tracking number is optional.
            operationId: trackers-batch.get
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP 200 OK status code and a JSON response body that lists tracking information that meets search criteria.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/tracker'
            parameters:
                - $ref: '#/components/parameters/transaction_id'
                - $ref: '#/components/parameters/tracking_number'
                - $ref: '#/components/parameters/account_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/shipping/trackers/read
            tags:
                - trackers
    /v1/shipping/trackers/{id}:
        put:
            summary: Update or cancel tracking information for PayPal transaction
            description: Updates or cancels the tracking information for a PayPal transaction, by ID. To cancel tracking information, call this method and set the status to CANCELLED. For more information, see <a href="/docs/tracking/integrate/#update-or-cancel-tracking-information">Update or cancel tracking information</a>.
            operationId: trackers.put
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "204":
                    description: A successful request returns the HTTP 204 OK status code with no JSON response body.
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/tracker'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/shipping/trackers/readwrite
            tags:
                - trackers
        get:
            summary: Show tracking information
            description: Shows tracking information, by tracker ID, for a PayPal transaction.
            operationId: trackers.get
            responses:
                default:
                    description: The error response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "200":
                    description: A successful request returns the HTTP `200 OK` status code and a JSON response body that shows tracking information.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/tracker'
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/account_id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/shipping/trackers/read
            tags:
                - trackers
    /v3/vault/payment-tokens:
        post:
            description: Creates a Payment Token from the given payment source and adds it to the Vault of the associated customer.
            summary: Create payment token for a given payment source
            operationId: payment-tokens.create
            responses:
                "200":
                    description: Idempotent response for a successful creation of payment token.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment_token_response'
                            examples:
                                payment_token_response:
                                    value:
                                        id: 8kk8451t
                                        customer:
                                            id: customer_4029352050
                                        payment_source:
                                            card:
                                                last_digits: "1111"
                                                expiry: 2027-02
                                                brand: VISA
                                                name: John Doe
                                                billing_address:
                                                    address_line_1: 2211 N First Street
                                                    address_line_2: 17.3.160
                                                    admin_area_2: San Jose
                                                    admin_area_1: CA
                                                    postal_code: "95131"
                                                    country_code: US
                                        links:
                                            - rel: self
                                              href: https://api-m.paypal.com/v3/vault/payment-tokens/8kk8451t
                                              method: GET
                                              encType: application/json
                                            - rel: delete
                                              href: https://api-m.paypal.com/v3/vault/payment-tokens/8kk8451t
                                              method: DELETE
                                              encType: application/json
                "201":
                    description: A successful creation of payment token.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment_token_response'
                            examples:
                                payment_token_response:
                                    value:
                                        id: 8kk8451t
                                        customer:
                                            id: customer_4029352050
                                        payment_source:
                                            card:
                                                last_digits: "1111"
                                                expiry: 2027-02
                                                brand: VISA
                                                name: John Doe
                                                billing_address:
                                                    address_line_1: 2211 N First Street
                                                    address_line_2: 17.3.160
                                                    admin_area_2: San Jose
                                                    admin_area_1: CA
                                                    postal_code: "95131"
                                                    country_code: US
                                        links:
                                            - rel: self
                                              href: https://api-m.paypal.com/v3/vault/payment-tokens/8kk8451t
                                              method: GET
                                              encType: application/json
                                            - rel: delete
                                              href: https://api-m.paypal.com/v3/vault/payment-tokens/8kk8451t
                                              method: DELETE
                                              encType: application/json
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "404":
                    description: Request contains reference to resources that do not exist.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/paypal_request_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment_token_request'
                        examples:
                            payment_token_request:
                                value:
                                    payment_source:
                                        token:
                                            id: 5C991763VB2781612
                                            type: BILLING_AGREEMENT
                description: Payment Token creation with a financial instrument and an optional customer_id.
                required: true
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/vault/payment-tokens/readwrite
            tags:
                - payment-tokens
        get:
            description: Returns all payment tokens for a customer.
            summary: List all payment tokens
            operationId: customer.payment-tokens.get
            responses:
                "200":
                    description: Successful execution.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/customer_vault_payment_tokens_response'
                            examples:
                                customer_vault_payment_tokens_response:
                                    value:
                                        customer:
                                            id: customer_4029352050
                                        payment_tokens:
                                            - id: 8kk8451t
                                              customer:
                                                id: customer_4029352050
                                              payment_source:
                                                card:
                                                    brand: VISA
                                                    last_digits: "1111"
                                                    expiry: 2027-02
                                                    name: John Doe
                                                    billing_address:
                                                        address_line_1: 2211 N First Street
                                                        address_line_2: 17.3.160
                                                        admin_area_2: San Jose
                                                        admin_area_1: CA
                                                        postal_code: "95131"
                                                        country_code: US
                                              links:
                                                - rel: self
                                                  href: https://api-m.paypal.com/v3/vault/payment-tokens/8kk8451t
                                                  method: GET
                                                  encType: application/json
                                                - rel: delete
                                                  href: https://api-m.paypal.com/v3/vault/payment-tokens/8kk8451t
                                                  method: DELETE
                                                  encType: application/json
                                            - id: fgh6561t
                                              customer:
                                                id: customer_4029352050
                                              payment_source:
                                                paypal:
                                                    description: Description for PayPal to be shown to PayPal payer
                                                    email_address: john.doe@example.com
                                                    account_id: VYYFH3WJ4JPJQ
                                                    shipping:
                                                        name:
                                                            full_name: John Doe
                                                        address:
                                                            address_line_1: 2211 N First Street
                                                            address_line_2: 17.3.160
                                                            admin_area_2: San Jose
                                                            admin_area_1: CA
                                                            postal_code: "95131"
                                                            country_code: US
                                                    usage_pattern: IMMEDIATE
                                                    usage_type: MERCHANT
                                                    customer_type: CONSUMER
                                                    name:
                                                        given_name: John
                                                        surname: Doe
                                                    address:
                                                        address_line_1: 2211 N First Street
                                                        address_line_2: 17.3.160
                                                        admin_area_2: San Jose
                                                        admin_area_1: CA
                                                        postal_code: "95131"
                                                        country_code: US
                                              links:
                                                - rel: self
                                                  href: https://api-m.paypal.com/v3/vault/payment-tokens/fgh6561t
                                                  method: GET
                                                  encType: application/json
                                                - rel: delete
                                                  href: https://api-m.paypal.com/v3/vault/payment-tokens/fgh6561t
                                                  method: DELETE
                                                  encType: application/json
                                            - id: hg654s1t
                                              customer:
                                                id: customer_4029352050
                                              payment_source:
                                                venmo:
                                                    description: Description for Venmo to be shown to Venmo payer
                                                    shipping:
                                                        name:
                                                            full_name: John Doe
                                                        address:
                                                            address_line_1: 2211 N First Street
                                                            address_line_2: 17.3.160
                                                            admin_area_2: San Jose
                                                            admin_area_1: CA
                                                            postal_code: "95131"
                                                            country_code: US
                                                    usage_pattern: IMMEDIATE
                                                    usage_type: MERCHANT
                                                    customer_type: CONSUMER
                                                    email_address: john.doe@example.com
                                                    user_name: johndoe
                                                    name:
                                                        given_name: John
                                                        surname: Doe
                                                    account_id: VYYFH3WJ4JPJQ
                                                    address:
                                                        address_line_1: PayPal
                                                        address_line_2: 2211 North 1st Street
                                                        admin_area_1: CA
                                                        admin_area_2: San Jose
                                                        postal_code: "96112"
                                                        country_code: US
                                              links:
                                                - rel: self
                                                  href: https://api-m.paypal.com/v3/vault/payment-tokens/hg654s1t
                                                  method: GET
                                                  encType: application/json
                                                - rel: delete
                                                  href: https://api-m.paypal.com/v3/vault/payment-tokens/hg654s1t
                                                  method: DELETE
                                                  encType: application/json
                                        links:
                                            - rel: self
                                              href: https://api-m.paypal.com/v3/vault/payment-tokens?customer_id=customer_4029352050&page=1&page_size=5&total_required=false
                                              method: GET
                                              encType: application/json
                                            - rel: first
                                              href: https://api-m.paypal.com/v3/vault/payment-tokens?customer_id=customer_4029352050&page=1&page_size=5&total_required=false
                                              method: GET
                                              encType: application/json
                                            - rel: last
                                              href: https://api-m.paypal.com/v3/vault/payment-tokens?customer_id=customer_4029352050&page=1&page_size=5&total_required=false
                                              method: GET
                                              encType: application/json
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/customer_id'
                - $ref: '#/components/parameters/page_size'
                - $ref: '#/components/parameters/page'
                - $ref: '#/components/parameters/total_required'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/vault/payment-tokens/readwrite
            tags:
                - payment-tokens
    /v3/vault/payment-tokens/{id}:
        get:
            description: Returns a readable representation of vaulted payment source associated with the payment token id.
            summary: Retrieve a payment token
            operationId: payment-tokens.get
            responses:
                "200":
                    description: Successful execution.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment_token_response'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/vault/payment-tokens/readwrite
            tags:
                - payment-tokens
        delete:
            description: Delete the payment token associated with the payment token id.
            summary: Delete payment token
            operationId: payment-tokens.delete
            responses:
                "204":
                    description: The server has successfully executed the method, but there is no entity body to return.
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/vault/payment-tokens/readwrite
            tags:
                - payment-tokens
    /v3/vault/setup-tokens:
        post:
            description: Creates a Setup Token from the given payment source and adds it to the Vault of the associated customer.
            summary: Create a setup token
            operationId: setup-tokens.create
            responses:
                "200":
                    description: Idempotent response for a successful creation of setup token.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/setup_token_response'
                            examples:
                                setup_token_response:
                                    value:
                                        id: 5C991763VB2781612
                                        customer:
                                            id: customer_4029352050
                                        status: APPROVED
                                        payment_source:
                                            card:
                                                last_digits: "1111"
                                                expiry: 2027-02
                                                name: John Doe
                                                billing_address:
                                                    address_line_1: 2211 N First Street
                                                    address_line_2: 17.3.160
                                                    admin_area_1: CA
                                                    admin_area_2: San Jose
                                                    postal_code: "95131"
                                                    country_code: US
                                        links:
                                            - rel: self
                                              href: https://api-m.paypal.com/v3/vault/setup-tokens/5C991763VB2781612
                                              method: GET
                                              encType: application/json
                                            - rel: confirm
                                              href: https://api-m.paypal.com/v3/vault/payment-token
                                              method: POST
                                              encType: application/json
                "201":
                    description: A successful creation of setup token.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/setup_token_response'
                            examples:
                                setup_token_response:
                                    value:
                                        id: 5C991763VB2781612
                                        customer:
                                            id: customer_4029352050
                                        status: APPROVED
                                        payment_source:
                                            card:
                                                last_digits: "1111"
                                                expiry: 2027-02
                                                name: John Doe
                                                billing_address:
                                                    address_line_1: 2211 N First Street
                                                    address_line_2: 17.3.160
                                                    admin_area_1: CA
                                                    admin_area_2: San Jose
                                                    postal_code: "95131"
                                                    country_code: US
                                        links:
                                            - rel: self
                                              href: https://api-m.paypal.com/v3/vault/setup-tokens/5C991763VB2781612
                                              method: GET
                                              encType: application/json
                                            - rel: confirm
                                              href: https://api-m.paypal.com/v3/vault/payment-token
                                              method: POST
                                              encType: application/json
                "400":
                    description: Request is not well-formed, syntactically incorrect, or violates schema.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/paypal_request_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/setup_token_request'
                        examples:
                            setup_token_request:
                                value:
                                    payment_source:
                                        card:
                                            number: "4111111111111111"
                                            expiry: 2027-02
                                            name: John Doe
                                            billing_address:
                                                address_line_1: 2211 N First Street
                                                address_line_2: 17.3.160
                                                admin_area_1: CA
                                                admin_area_2: San Jose
                                                postal_code: "95131"
                                                country_code: US
                                            experience_context:
                                                brand_name: YourBrandName
                                                locale: en-US
                                                return_url: https://example.com/returnUrl
                                                cancel_url: https://example.com/cancelUrl
                description: Setup Token creation with a instrument type optional financial instrument details and customer_id.
                required: true
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/vault/payment-tokens/read
            tags:
                - setup-tokens
    /v3/vault/setup-tokens/{id}:
        get:
            description: Returns a readable representation of temporarily vaulted payment source associated with the setup token id.
            summary: Retrieve a setup token
            operationId: setup-tokens.get
            responses:
                "200":
                    description: Found requested setup-token, returned a payment method associated with the token.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/setup_token_response'
                "403":
                    description: Authorization failed due to insufficient permissions.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "404":
                    description: The specified resource does not exist.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "422":
                    description: The requested action could not be performed, semantically incorrect, or failed business validation.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                "500":
                    description: An internal server error has occurred.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
            parameters:
                - $ref: '#/components/parameters/id'
            security:
                - Oauth2:
                    - https://uri.paypal.com/services/vault/payment-tokens/read
            tags:
                - setup-tokens
components:
    requestBodies:
        patch_request:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/patch_request'
        evidences:
            content:
                multipart/form-data:
                    schema:
                        type: object
                        properties:
                            evidence-file:
                                description: A file with evidence.
                                type: string
                                format: binary
        partner:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/partner'
            required: true
        invoice:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/invoice'
        template:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/template'
        web_profile:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/web_profile'
        capture:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/capture'
        refund_request:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/refund_request'
        tracker_collection:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/tracker_collection'
    securitySchemes:
        Oauth2:
            type: oauth2
            description: Oauth 2.0 authentication
            flows:
                clientCredentials:
                    tokenUrl: /v1/oauth2/token
                    scopes:
                        https://uri.paypal.com/services/vault/payment-tokens/readwrite: Manage payment instruments
                        https://uri.paypal.com/services/vault/payment-tokens/read: Permission to only read from vault
                        https://uri.paypal.com/services/vault/customers/read: Permission to read customer information.
                        https://uri.paypal.com/services/vault/customers/readwrite: Permission to create/update customer information.
    responses:
        default:
            description: The default response.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error_default'
    schemas:
        "400":
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is invalid.
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - A required field / parameter is missing.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is either too short or too long.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is too long.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - The value of a field does not conform to the expected format.
        "401":
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_ACCOUNT_STATUS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_ACCOUNT_STATUS
                                description:
                                    type: string
                                    enum:
                                        - Account validations failed for the user.
        "403":
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: PERMISSION_DENIED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PERMISSION_DENIED
                                description:
                                    type: string
                                    enum:
                                        - You do not have permission to access or perform operations on this resource.
        "404":
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_RESOURCE_ID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_RESOURCE_ID
                                description:
                                    type: string
                                    enum:
                                        - Specified resource ID does not exist. Please check the resource ID and try again.
        "422":
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_CURRENCY_CODE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_CURRENCY_CODE
                                description:
                                    type: string
                                    enum:
                                        - Currency code is invalid or is not currently supported. Please refer https://developer.paypal.com/docs/api/reference/currency-codes/ for list of supported currency codes.
                            - title: CANNOT_BE_ZERO_OR_NEGATIVE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_BE_ZERO_OR_NEGATIVE
                                description:
                                    type: string
                                    enum:
                                        - Must be greater than zero. If the currency supports decimals, only two decimal place precision is supported.
                            - title: DECIMAL_PRECISION
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DECIMAL_PRECISION
                                description:
                                    type: string
                                    enum:
                                        - If the currency supports decimals, only two decimal place precision is supported.
                            - title: DECIMALS_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DECIMALS_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - Currency does not support decimals. Please refer to https://developer.paypal.com/docs/api/reference/currency-codes/ for more information.
                            - title: TRANSACTION_REFUSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TRANSACTION_REFUSED
                                description:
                                    type: string
                                    enum:
                                        - PayPal's internal controls prevent authorization from being captured.
                            - title: AUTHORIZATION_VOIDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AUTHORIZATION_VOIDED
                                description:
                                    type: string
                                    enum:
                                        - 'A voided authorization cannot be captured or reauthorized. '
                            - title: MAX_CAPTURE_COUNT_EXCEEDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MAX_CAPTURE_COUNT_EXCEEDED
                                description:
                                    type: string
                                    enum:
                                        - Maxmimum number of allowable captures has been reached. No additional captures are possible for this authorization. Contact Customer Service or your account manager to change the number of captures for a given authorization.
                            - title: DUPLICATE_INVOICE_ID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DUPLICATE_INVOICE_ID
                                description:
                                    type: string
                                    enum:
                                        - Requested invoice_id has been previously captured. Possible duplicate transaction.
                            - title: AUTH_CAPTURE_CURRENCY_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AUTH_CAPTURE_CURRENCY_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - Currency of capture must be the same as currency of authorization.
                            - title: PAYER_CANNOT_PAY
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYER_CANNOT_PAY
                                description:
                                    type: string
                                    enum:
                                        - Payer cannot pay for this transaction. Please contact the payer to find other ways to pay for this transaction.
                            - title: AUTHORIZATION_DENIED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AUTHORIZATION_DENIED
                                description:
                                    type: string
                                    enum:
                                        - An denied authorization cannot be captured.
                            - title: AUTHORIZATION_EXPIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AUTHORIZATION_EXPIRED
                                description:
                                    type: string
                                    enum:
                                        - An expired authorization cannot be captured.
                            - title: AUTHORIZATION_ALREADY_CAPTURED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AUTHORIZATION_ALREADY_CAPTURED
                                description:
                                    type: string
                                    enum:
                                        - Authorization has previously been captured.
                            - title: MAX_CAPTURE_AMOUNT_EXCEEDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MAX_CAPTURE_AMOUNT_EXCEEDED
                                description:
                                    type: string
                                    enum:
                                        - Capture amount exceeds allowable limit. Please contact customer service or your account manager to request the change to your overage limit. The default overage limit is 115%, which allows the sum of all captures to be up to 115% of the order amount. The ability to over capture is subjected to regulatory approvals.
                            - title: TRANSACTION_REFUSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TRANSACTION_REFUSED
                                description:
                                    type: string
                                    enum:
                                        - PayPal's internal controls prevent authorization from being captured.
                            - title: PAYEE_ACCOUNT_LOCKED_OR_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYEE_ACCOUNT_LOCKED_OR_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - Transaction could not complete because payee account is locked or closed.
                            - title: PAYER_ACCOUNT_LOCKED_OR_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYER_ACCOUNT_LOCKED_OR_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - The payer account cannot be used for this transaction.
                            - title: PAYEE_ACCOUNT_RESTRICTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYEE_ACCOUNT_RESTRICTED
                                description:
                                    type: string
                                    enum:
                                        - Payee account is restricted.
        error_details:
            title: Error Details
            type: object
            description: The error details. Required for client-side `4XX` errors.
            properties:
                field:
                    type: string
                    description: The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors.
                value:
                    type: string
                    description: The value of the field that caused the error.
                location:
                    $ref: '#/components/schemas/error_location'
                issue:
                    type: string
                    description: The unique, fine-grained application-level error code.
                description:
                    type: string
                    description: The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value.
            required:
                - issue
        error_location:
            type: string
            description: The location of the field that caused the error. Value is `body`, `path`, or `query`.
            enum:
                - body
                - path
                - query
            default: body
        error_default:
            description: The default error response.
            oneOf:
                - $ref: '#/components/schemas/error_400'
                - $ref: '#/components/schemas/error_401'
                - $ref: '#/components/schemas/error_403'
                - $ref: '#/components/schemas/error_404'
                - $ref: '#/components/schemas/error_409'
                - $ref: '#/components/schemas/error_415'
                - $ref: '#/components/schemas/error_422'
                - $ref: '#/components/schemas/error_500'
                - $ref: '#/components/schemas/error_503'
        error_link_description:
            title: Link Description
            description: The request-related [HATEOAS link](/api/rest/responses/#hateoas-links) information.
            type: object
            required:
                - href
                - rel
            properties:
                href:
                    description: The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call.
                    type: string
                    maxLength: 20000
                    pattern: ^.*$
                rel:
                    description: The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml).
                    type: string
                    maxLength: 100
                    pattern: ^.*$
                method:
                    description: The HTTP method required to make the related call.
                    type: string
                    minLength: 3
                    maxLength: 6
                    pattern: ^[A-Z]*$
                    enum:
                        - GET
                        - POST
                        - PUT
                        - DELETE
                        - PATCH
        error_400:
            type: object
            title: Bad Request Error
            description: Request is not well-formed, syntactically incorrect, or violates schema.
            properties:
                name:
                    type: string
                    enum:
                        - INVALID_REQUEST
                message:
                    type: string
                    enum:
                        - Request is not well-formed, syntactically incorrect, or violates schema.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/error_details'
                debug_id:
                    type: string
                    description: The PayPal internal ID. Used for correlation purposes.
                links:
                    description: An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
                    type: array
                    maxItems: 10000
                    items:
                        $ref: '#/components/schemas/error_link_description'
        error_401:
            type: object
            title: Unauthorized Error
            description: Authentication failed due to missing Authorization header, or invalid authentication credentials.
            properties:
                name:
                    type: string
                    enum:
                        - AUTHENTICATION_FAILURE
                message:
                    type: string
                    enum:
                        - Authentication failed due to missing authorization header, or invalid authentication credentials.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/error_details'
                debug_id:
                    type: string
                    description: The PayPal internal ID. Used for correlation purposes.
                links:
                    description: An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
                    type: array
                    maxItems: 10000
                    items:
                        $ref: '#/components/schemas/error_link_description'
        error_403:
            type: object
            title: Not Authorized Error
            description: 'The client is not authorized to access this resource, although it may have valid credentials. '
            properties:
                name:
                    type: string
                    enum:
                        - NOT_AUTHORIZED
                message:
                    type: string
                    enum:
                        - Authorization failed due to insufficient permissions.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/error_details'
                debug_id:
                    type: string
                    description: The PayPal internal ID. Used for correlation purposes.
                links:
                    description: An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
                    type: array
                    maxItems: 10000
                    items:
                        $ref: '#/components/schemas/error_link_description'
        error_404:
            type: object
            title: Not found Error
            description: The server has not found anything matching the request URI. This either means that the URI is incorrect or the resource is not available.
            properties:
                name:
                    type: string
                    enum:
                        - RESOURCE_NOT_FOUND
                message:
                    type: string
                    enum:
                        - The specified resource does not exist.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/error_details'
                debug_id:
                    type: string
                    description: The PayPal internal ID. Used for correlation purposes.
                links:
                    description: An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
                    type: array
                    maxItems: 10000
                    items:
                        $ref: '#/components/schemas/error_link_description'
        error_409:
            type: object
            title: Resource Conflict Error
            description: The server has detected a conflict while processing this request.
            properties:
                name:
                    type: string
                    enum:
                        - RESOURCE_CONFLICT
                message:
                    type: string
                    enum:
                        - The server has detected a conflict while processing this request.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/error_details'
                debug_id:
                    type: string
                    description: The PayPal internal ID. Used for correlation purposes.
                links:
                    description: An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
                    type: array
                    maxItems: 10000
                    items:
                        $ref: '#/components/schemas/error_link_description'
        error_415:
            type: object
            title: Unsupported Media Type Error
            description: The server does not support the request payload's media type.
            properties:
                name:
                    type: string
                    enum:
                        - UNSUPPORTED_MEDIA_TYPE
                message:
                    type: string
                    enum:
                        - The server does not support the request payload's media type.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/error_details'
                debug_id:
                    type: string
                    description: The PayPal internal ID. Used for correlation purposes.
                links:
                    description: An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
                    type: array
                    maxItems: 10000
                    items:
                        $ref: '#/components/schemas/error_link_description'
        error_422:
            type: object
            title: Unprocessable Entity Error
            description: The requested action cannot be performed and may require interaction with APIs or processes outside of the current request. This is distinct from a 500 response in that there are no systemic problems limiting the API from performing the request.
            properties:
                name:
                    type: string
                    enum:
                        - UNPROCESSABLE_ENTITY
                message:
                    type: string
                    enum:
                        - The requested action could not be performed, semantically incorrect, or failed business validation.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/error_details'
                debug_id:
                    type: string
                    description: The PayPal internal ID. Used for correlation purposes.
                links:
                    description: An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
                    type: array
                    maxItems: 10000
                    items:
                        $ref: '#/components/schemas/error_link_description'
        error_500:
            type: object
            title: Internal Server Error
            description: This is either a system or application error, and generally indicates that although the client appeared to provide a correct request, something unexpected has gone wrong on the server.
            properties:
                name:
                    type: string
                    enum:
                        - INTERNAL_SERVER_ERROR
                message:
                    type: string
                    enum:
                        - An internal server error occurred.
                debug_id:
                    type: string
                    description: The PayPal internal ID. Used for correlation purposes.
                links:
                    description: An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
                    type: array
                    maxItems: 10000
                    items:
                        $ref: '#/components/schemas/error_link_description'
            example:
                name: INTERNAL_SERVER_ERROR
                message: An internal server error occurred.
                debug_id: 90957fca61718
                links:
                    - href: https://developer.paypal.com/api/orders/v2/#error-INTERNAL_SERVER_ERROR
                      rel: information_link
        error_503:
            type: object
            title: Service Unavailable Error
            description: The server is temporarily unable to handle the request, for example, because of planned maintenance or downtime.
            properties:
                name:
                    type: string
                    enum:
                        - SERVICE_UNAVAILABLE
                message:
                    type: string
                    enum:
                        - Service Unavailable.
                debug_id:
                    type: string
                    description: The PayPal internal ID. Used for correlation purposes.
                links:
                    description: An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
                    type: array
                    maxItems: 10000
                    items:
                        $ref: '#/components/schemas/error_link_description'
            example:
                name: SERVICE_UNAVAILABLE
                message: Service Unavailable.
                debug_id: 90957fca61718
                information_link: https://developer.paypal.com/docs/api/orders/v2/#error-SERVICE_UNAVAILABLE
        currency_code:
            description: The [three-character ISO-4217 currency code](/api/rest/reference/currency-codes/) that identifies the currency.
            type: string
            format: ppaas_common_currency_code_v2
            minLength: 3
            maxLength: 3
        money:
            type: object
            title: Money
            description: The currency and amount for a financial transaction, such as a balance or payment due.
            properties:
                currency_code:
                    $ref: '#/components/schemas/currency_code'
                value:
                    type: string
                    description: The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency Codes](/api/rest/reference/currency-codes/).
                    maxLength: 32
                    pattern: ^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$
            required:
                - currency_code
                - value
        pricing_tier:
            title: Pricing Tier
            description: The pricing tier details.
            type: object
            properties:
                starting_quantity:
                    type: string
                    description: The starting quantity for the tier.
                    pattern: ^([0-9]+|([0-9]+)?[.][0-9]+)$
                    minLength: 1
                    maxLength: 32
                ending_quantity:
                    type: string
                    description: The ending quantity for the tier. Optional for the last tier.
                    pattern: ^([0-9]+|([0-9]+)?[.][0-9]+)$
                    minLength: 1
                    maxLength: 32
                amount:
                    description: The pricing amount for the tier.
                    $ref: '#/components/schemas/money'
            required:
                - starting_quantity
                - amount
        date_time:
            type: string
            description: The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>
            format: ppaas_date_time_v3
            minLength: 20
            maxLength: 64
            pattern: ^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$
        pricing_scheme:
            title: Pricing Scheme
            description: The pricing scheme details.
            type: object
            properties:
                version:
                    type: integer
                    description: The version of the pricing scheme.
                    minimum: 0
                    maximum: 999
                    readOnly: true
                fixed_price:
                    description: The fixed amount to charge for the subscription. The changes to fixed amount are applicable to both existing and future subscriptions. For existing subscriptions, payments within 10 days of price change are not affected.
                    $ref: '#/components/schemas/money'
                pricing_model:
                    type: string
                    description: The pricing model for tiered plan. The `tiers` parameter is required.
                    minLength: 1
                    maxLength: 24
                    pattern: ^[A-Z_]+$
                    enum:
                        - VOLUME
                        - TIERED
                tiers:
                    type: array
                    description: An array of pricing tiers which are used for billing volume/tiered plans. pricing_model field has to be specified.
                    minItems: 1
                    maxItems: 32
                    items:
                        $ref: '#/components/schemas/pricing_tier'
                create_time:
                    description: The date and time when this pricing scheme was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                update_time:
                    description: The date and time when this pricing scheme was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
        frequency:
            title: Billing Cycle Frequency
            description: The frequency of the billing cycle.
            type: object
            properties:
                interval_unit:
                    type: string
                    description: The interval at which the subscription is charged or billed.
                    minLength: 1
                    maxLength: 24
                    pattern: ^[A-Z_]+$
                    enum:
                        - DAY
                        - WEEK
                        - MONTH
                        - YEAR
                interval_count:
                    type: integer
                    description: The number of intervals after which a subscriber is billed. For example, if the `interval_unit` is `DAY` with an `interval_count` of  `2`, the subscription is billed once every two days. The following table lists the maximum allowed values for the `interval_count` for each `interval_unit`:<table><thead><tr><th><code>Interval unit</code></th><th>Maximum interval count</th></tr></thead><tbody><tr><td><code>DAY</code></td><td align="right">365</td></tr><tr><td><code>WEEK</code></td><td align="right">52</td></tr><tr><td><code>MONTH</code></td><td align="right">12</td></tr><tr><td><code>YEAR</code></td><td align="right">1</td></tr></tbody></table>
                    minimum: 1
                    maximum: 365
                    default: 1
            required:
                - interval_unit
        billing_cycle:
            title: Billing Cycle
            description: The billing cycle details.
            type: object
            properties:
                pricing_scheme:
                    description: The active pricing scheme for this billing cycle. A free trial billing cycle does not require a pricing scheme.
                    $ref: '#/components/schemas/pricing_scheme'
                frequency:
                    description: The frequency details for this billing cycle.
                    $ref: '#/components/schemas/frequency'
                tenure_type:
                    type: string
                    description: The tenure type of the billing cycle. In case of a plan having trial cycle, only 2 trial cycles are allowed per plan.
                    minLength: 1
                    maxLength: 24
                    pattern: ^[A-Z_]+$
                    enum:
                        - REGULAR
                        - TRIAL
                sequence:
                    type: integer
                    description: The order in which this cycle is to run among other billing cycles. For example, a trial billing cycle has a `sequence` of `1` while a regular billing cycle has a `sequence` of `2`, so that trial cycle runs before the regular cycle.
                    minimum: 1
                    maximum: 99
                total_cycles:
                    type: integer
                    description: The number of times this billing cycle gets executed. Trial billing cycles can only be executed a finite number of times (value between <code>1</code> and <code>999</code> for <code>total_cycles</code>). Regular billing cycles can be executed infinite times (value of <code>0</code> for <code>total_cycles</code>) or a finite number of times (value between <code>1</code> and <code>999</code> for <code>total_cycles</code>).
                    minimum: 0
                    maximum: 999
                    default: 1
            required:
                - frequency
                - tenure_type
                - sequence
        payment_preferences:
            title: Payment Preferences
            description: The payment preferences for a subscription.
            type: object
            properties:
                auto_bill_outstanding:
                    type: boolean
                    description: Indicates whether to automatically bill the outstanding amount in the next billing cycle.
                    default: true
                setup_fee:
                    description: The initial set-up fee for the service.
                    $ref: '#/components/schemas/money'
                setup_fee_failure_action:
                    type: string
                    description: The action to take on the subscription if the initial payment for the setup fails.
                    minLength: 1
                    maxLength: 24
                    pattern: ^[A-Z_]+$
                    default: CANCEL
                    enum:
                        - CONTINUE
                        - CANCEL
                payment_failure_threshold:
                    type: integer
                    description: The maximum number of payment failures before a subscription is suspended. For example, if `payment_failure_threshold` is `2`, the subscription automatically updates to the `SUSPEND` state if two consecutive payments fail.
                    minimum: 0
                    maximum: 999
                    default: 0
        percentage:
            type: string
            description: The percentage, as a fixed-point, signed decimal number. For example, define a 19.99% interest rate as `19.99`.
            format: ppaas_common_percentage_v2
            pattern: ^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$
        taxes:
            title: Taxes
            description: The tax details.
            type: object
            properties:
                percentage:
                    description: The tax percentage on the billing amount.
                    $ref: '#/components/schemas/percentage'
                inclusive:
                    type: boolean
                    description: Indicates whether the tax was already included in the billing amount.
                    default: true
            required:
                - percentage
        link_description:
            type: object
            title: Link Description
            description: The request-related [HATEOAS link](/api/rest/responses/#hateoas-links) information.
            required:
                - href
                - rel
            properties:
                href:
                    type: string
                    description: The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call.
                rel:
                    type: string
                    description: The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml).
                method:
                    type: string
                    description: The HTTP method required to make the related call.
                    enum:
                        - GET
                        - POST
                        - PUT
                        - DELETE
                        - HEAD
                        - CONNECT
                        - OPTIONS
                        - PATCH
        plan:
            title: Plan
            description: The plan details.
            type: object
            properties:
                id:
                    type: string
                    description: The unique PayPal-generated ID for the plan.
                    minLength: 3
                    maxLength: 50
                    readOnly: true
                product_id:
                    type: string
                    description: The ID for the product.
                    minLength: 6
                    maxLength: 50
                name:
                    type: string
                    description: The plan name.
                    minLength: 1
                    maxLength: 127
                status:
                    type: string
                    description: The plan status.
                    minLength: 1
                    maxLength: 24
                    pattern: ^[A-Z_]+$
                    enum:
                        - CREATED
                        - INACTIVE
                        - ACTIVE
                description:
                    type: string
                    description: The detailed description of the plan.
                    minLength: 1
                    maxLength: 127
                billing_cycles:
                    type: array
                    description: An array of billing cycles for trial billing and regular billing. A plan can have at most two trial cycles and only one regular cycle.
                    minItems: 1
                    maxItems: 12
                    items:
                        $ref: '#/components/schemas/billing_cycle'
                payment_preferences:
                    $ref: '#/components/schemas/payment_preferences'
                taxes:
                    $ref: '#/components/schemas/taxes'
                quantity_supported:
                    type: boolean
                    description: Indicates whether you can subscribe to this plan by providing a quantity for the goods or service.
                    default: false
                create_time:
                    description: The date and time when the plan was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                update_time:
                    description: The date and time when the plan was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    minItems: 1
                    maxItems: 10
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
        plan_collection:
            title: Plan Collection
            description: The list of plans with details.
            type: object
            properties:
                plans:
                    type: array
                    maxItems: 32767
                    description: An array of plans.
                    items:
                        $ref: '#/components/schemas/plan'
                total_items:
                    type: integer
                    description: The total number of items.
                    minimum: 0
                    maximum: 500000000
                total_pages:
                    type: integer
                    description: The total number of pages.
                    minimum: 0
                    maximum: 100000000
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    minItems: 1
                    maxItems: 10
                    items:
                        readOnly: true
                        $ref: '#/components/schemas/link_description'
        plan_request_POST:
            title: Create Plan Request
            description: The create plan request details.
            type: object
            properties:
                product_id:
                    type: string
                    description: The ID of the product created through Catalog Products API.
                    minLength: 6
                    maxLength: 50
                name:
                    type: string
                    description: The plan name.
                    minLength: 1
                    maxLength: 127
                status:
                    type: string
                    description: The initial state of the plan. Allowed input values are CREATED and ACTIVE.
                    minLength: 1
                    maxLength: 24
                    pattern: ^[A-Z_]+$
                    default: ACTIVE
                    enum:
                        - CREATED
                        - INACTIVE
                        - ACTIVE
                description:
                    type: string
                    description: The detailed description of the plan.
                    minLength: 1
                    maxLength: 127
                billing_cycles:
                    type: array
                    description: An array of billing cycles for trial billing and regular billing. A plan can have at most two trial cycles and only one regular cycle.
                    minItems: 1
                    maxItems: 12
                    items:
                        $ref: '#/components/schemas/billing_cycle'
                payment_preferences:
                    $ref: '#/components/schemas/payment_preferences'
                taxes:
                    $ref: '#/components/schemas/taxes'
                quantity_supported:
                    type: boolean
                    description: Indicates whether you can subscribe to this plan by providing a quantity for the goods or service.
                    default: false
            required:
                - name
                - billing_cycles
                - payment_preferences
                - product_id
        plans.create-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - The value of a field does not conform to the expected format.
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is invalid.
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - A required field is missing.
                            - title: INVALID_STRING_MIN_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MIN_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is too short.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is too long.
                            - title: INVALID_INTEGER_MIN_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_INTEGER_MIN_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The integer value of a field is too small.
                            - title: INVALID_INTEGER_MAX_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_INTEGER_MAX_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The integer value of a field is too large.
        patch:
            type: object
            title: Patch
            description: The JSON patch object to apply partial updates to resources.
            properties:
                op:
                    type: string
                    description: The operation.
                    enum:
                        - add
                        - remove
                        - replace
                        - move
                        - copy
                        - test
                path:
                    type: string
                    description: The <a href="https://tools.ietf.org/html/rfc6901">JSON Pointer</a> to the target document location at which to complete the operation.
                value:
                    title: Patch Value
                    description: The value to apply. The <code>remove</code> operation does not require a value.
                from:
                    type: string
                    description: The <a href="https://tools.ietf.org/html/rfc6901">JSON Pointer</a> to the target document location from which to move the value. Required for the <code>move</code> operation.
            required:
                - op
        patch_request:
            type: array
            title: Patch Request
            description: An array of JSON patch objects to apply partial updates to resources.
            items:
                $ref: '#/components/schemas/patch'
        plans.patch-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: UNSUPPORTED_PATCH_OPERATION
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - UNSUPPORTED_PATCH_OPERATION
                                description:
                                    type: string
                                    enum:
                                        - The specified patch operation not supported for this field.
                            - title: INVALID_PATCH_PATH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PATCH_PATH
                                description:
                                    type: string
                                    enum:
                                        - The specified field cannot be patched.
                            - title: INVALID_PATCH_PATH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PATCH_PATH
                                description:
                                    type: string
                                    enum:
                                        - Multiple operations on the same field are not allowed.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - The value of a field does not conform to the expected format.
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is invalid.
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The field is not eligible for '$value' patch operation.
        plans.patch-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: USER_ACCOUNT_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - USER_ACCOUNT_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - User account locked or closed.
                            - title: PLAN_STATUS_INACTIVE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PLAN_STATUS_INACTIVE
                                description:
                                    type: string
                                    enum:
                                        - Status update is the only patchable filed on an inactive plan.
        plans.activate-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: USER_ACCOUNT_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - USER_ACCOUNT_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - User account locked or closed.
                            - title: PLAN_STATUS_INVALID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PLAN_STATUS_INVALID
                                description:
                                    type: string
                                    enum:
                                        - Invalid plan status for activate action; plan status should be either created or inactive.
        plans.deactivate-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: USER_ACCOUNT_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - USER_ACCOUNT_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - User account locked or closed.
                            - title: PLAN_STATUS_INVALID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PLAN_STATUS_INVALID
                                description:
                                    type: string
                                    enum:
                                        - Invalid plan status for deactivate action; plan status should be active.
        update_pricing_scheme_request:
            title: Update Pricing Scheme
            description: The update pricing scheme request details.
            type: object
            properties:
                billing_cycle_sequence:
                    type: integer
                    description: The billing cycle sequence.
                    minimum: 1
                    maximum: 99
                pricing_scheme:
                    $ref: '#/components/schemas/pricing_scheme'
            required:
                - billing_cycle_sequence
                - pricing_scheme
        update_pricing_schemes_list_request:
            title: Update Pricing Scheme Request
            description: The update pricing scheme request details.
            type: object
            properties:
                pricing_schemes:
                    type: array
                    description: An array of pricing schemes.
                    minItems: 1
                    maxItems: 99
                    items:
                        $ref: '#/components/schemas/update_pricing_scheme_request'
            required:
                - pricing_schemes
        plans.update-pricing-schemes-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is invalid.
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - A required field is missing.
        plans.update-pricing-schemes-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: CURRENCY_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CURRENCY_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - The currency code is different from the plan's currency code.
                            - title: INVALID_BILLING_CYCLE_SEQUENCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_BILLING_CYCLE_SEQUENCE
                                description:
                                    type: string
                                    enum:
                                        - The provided billing cycle sequence is not available.
                            - title: INVALID_PRICING_SCHEME
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PRICING_SCHEME
                                description:
                                    type: string
                                    enum:
                                        - The new pricing scheme should be of the same type as that of the old one.
                            - title: INVALID_PRICING_TIER_AMOUNT
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PRICING_TIER_AMOUNT
                                description:
                                    type: string
                                    enum:
                                        - Free tiers are not supported.
                            - title: MISSING_PRICING_SCHEME_TIERS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_PRICING_SCHEME_TIERS
                                description:
                                    type: string
                                    enum:
                                        - Tier(s) are missing for some quantities.
                            - title: OVERLAPPING_PRICING_SCHEME_TIERS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - OVERLAPPING_PRICING_SCHEME_TIERS
                                description:
                                    type: string
                                    enum:
                                        - The specified quantity overlaps with multiple pricing tiers.
                            - title: INVALID_PRICING_MODEL
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PRICING_MODEL
                                description:
                                    type: string
                                    enum:
                                        - The specified pricing model is not supported for trial billing cycle.
                            - title: FIXED_PRICE_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - FIXED_PRICE_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - Fixed price is not supported for tiered pricing schemes.
                            - title: INVALID_PRICING_TIER_QUANTITY
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PRICING_TIER_QUANTITY
                                description:
                                    type: string
                                    enum:
                                        - Tier starting quantity must be less than ending quantity.
                            - title: PRICING_SCHEME_UPDATE_NOT_ALLOWED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PRICING_SCHEME_UPDATE_NOT_ALLOWED
                                description:
                                    type: string
                                    enum:
                                        - Pricing scheme update is not allowed for the plan.
        email:
            type: string
            description: The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
            format: merchant_common_email_address_v2
            maxLength: 254
            minLength: 3
            pattern: (?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
        account_id:
            type: string
            title: PayPal Account Identifier
            description: The account identifier for a PayPal account.
            format: ppaas_payer_id_v3
            minLength: 13
            maxLength: 13
            pattern: ^[2-9A-HJ-NP-Z]{13}$
        payer_base:
            type: object
            title: Payer Base
            description: The customer who approves and pays for the order. The customer is also known as the payer.
            properties:
                email_address:
                    description: The email address of the payer.
                    $ref: '#/components/schemas/email'
                payer_id:
                    description: The PayPal-assigned ID for the payer.
                    readOnly: true
                    $ref: '#/components/schemas/account_id'
        name:
            type: object
            title: Name
            description: The name of the party.
            properties:
                prefix:
                    type: string
                    description: The prefix, or title, to the party's name.
                    maxLength: 140
                given_name:
                    type: string
                    description: When the party is a person, the party's given, or first, name.
                    maxLength: 140
                surname:
                    type: string
                    description: When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.
                    maxLength: 140
                middle_name:
                    type: string
                    description: When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name.
                    maxLength: 140
                suffix:
                    type: string
                    description: The suffix for the party's name.
                    maxLength: 140
                alternate_full_name:
                    type: string
                    description: DEPRECATED. The party's alternate name. Can be a business name, nickname, or any other name that cannot be split into first, last name. Required when the party is a business.
                    maxLength: 300
                full_name:
                    type: string
                    description: When the party is a person, the party's full name.
                    maxLength: 300
        phone_type:
            type: string
            title: Phone Type
            description: The phone type.
            enum:
                - FAX
                - HOME
                - MOBILE
                - OTHER
                - PAGER
        phone:
            type: object
            title: Phone
            description: The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).
            properties:
                country_code:
                    type: string
                    description: The country calling code (CC), in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the CC and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).
                    minLength: 1
                    maxLength: 3
                    pattern: ^[0-9]{1,3}?$
                national_number:
                    type: string
                    description: The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).
                    minLength: 1
                    maxLength: 14
                    pattern: ^[0-9]{1,14}?$
                extension_number:
                    type: string
                    description: The extension number.
                    minLength: 1
                    maxLength: 15
                    pattern: ^[0-9]{1,15}?$
            required:
                - country_code
                - national_number
        phone_with_type:
            type: object
            title: Phone With Type
            description: The phone information.
            properties:
                phone_type:
                    $ref: '#/components/schemas/phone_type'
                phone_number:
                    description: The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). Supports only the `national_number` property.
                    $ref: '#/components/schemas/phone'
            required:
                - phone_number
        date_no_time:
            type: string
            description: The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.
            format: ppaas_date_notime_v2
            minLength: 10
            maxLength: 10
            pattern: ^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$
        tax_info:
            type: object
            description: The tax ID of the customer. The customer is also known as the payer. Both `tax_id` and `tax_id_type` are required.
            title: Tax Information
            properties:
                tax_id:
                    type: string
                    description: The customer's tax ID value.
                    minLength: 1
                    maxLength: 14
                    pattern: ([a-zA-Z0-9])
                tax_id_type:
                    type: string
                    description: The customer's tax ID type.
                    minLength: 1
                    maxLength: 14
                    pattern: ^[A-Z0-9_]+$
                    enum:
                        - BR_CPF
                        - BR_CNPJ
            required:
                - tax_id
                - tax_id_type
        country_code:
            type: string
            description: The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
            format: ppaas_common_country_code_v2
            maxLength: 2
            minLength: 2
            pattern: ^([A-Z]{2}|C2)$
        address_portable:
            type: object
            title: Portable Postal Address (Medium-Grained)
            description: 'The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).'
            properties:
                address_line_1:
                    type: string
                    description: The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.
                    maxLength: 300
                address_line_2:
                    type: string
                    description: The second line of the address. For example, suite or apartment number.
                    maxLength: 300
                address_line_3:
                    type: string
                    description: The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.
                    maxLength: 100
                admin_area_4:
                    type: string
                    description: The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:<ul><li>The postal sorting code for Guernsey and many French territories, such as French Guiana.</li><li>The fine-grained administrative levels in China.</li></ul>
                    maxLength: 100
                admin_area_3:
                    type: string
                    description: A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:<ul><li>Brazil. Suburb, bairro, or neighborhood.</li><li>India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</li></ul>
                    maxLength: 100
                admin_area_2:
                    type: string
                    description: A city, town, or village. Smaller than `admin_area_level_1`.
                    maxLength: 120
                admin_area_1:
                    type: string
                    description: The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>
                    maxLength: 300
                postal_code:
                    type: string
                    description: The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).
                    maxLength: 60
                country_code:
                    $ref: '#/components/schemas/country_code'
                address_details:
                    type: object
                    title: Address Details
                    description: The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.<br/>For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.
                    properties:
                        street_number:
                            type: string
                            description: The street number.
                            maxLength: 100
                        street_name:
                            type: string
                            description: The street name. Just `Drury` in `Drury Lane`.
                            maxLength: 100
                        street_type:
                            type: string
                            description: The street type. For example, avenue, boulevard, road, or expressway.
                            maxLength: 100
                        delivery_service:
                            type: string
                            description: The delivery service. Post office box, bag number, or post office name.
                            maxLength: 100
                        building_name:
                            type: string
                            description: A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, <code>Craven House</code>.
                            maxLength: 100
                        sub_building:
                            type: string
                            description: The first-order entity below a named building or location that represents the sub-premises. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.
                            maxLength: 100
            required:
                - country_code
        payer:
            type: object
            title: Customer
            description: The customer who approves and pays for the order. The customer is also known as the payer.
            format: payer_v1
            allOf:
                - $ref: '#/components/schemas/payer_base'
                - properties:
                    name:
                        description: The name of the payer. Supports only the `given_name` and `surname` properties.
                        $ref: '#/components/schemas/name'
                    phone:
                        description: The phone number of the customer. Available only when you enable the **Contact Telephone Number** option in the <a href="https://www.paypal.com/cgi-bin/customerprofileweb?cmd=_profile-website-payments">**Profile & Settings**</a> for the merchant's PayPal account. The `phone.phone_number` supports only `national_number`.
                        $ref: '#/components/schemas/phone_with_type'
                    birth_date:
                        description: The birth date of the payer in `YYYY-MM-DD` format.
                        $ref: '#/components/schemas/date_no_time'
                    tax_info:
                        description: The tax information of the payer. Required only for Brazilian payer's. Both `tax_id` and `tax_id_type` are required.
                        $ref: '#/components/schemas/tax_info'
                    address:
                        description: The address of the payer. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties. Also referred to as the billing address of the customer.
                        $ref: '#/components/schemas/address_portable'
        shipping_detail:
            type: object
            description: The shipping details.
            title: Shipping Details
            properties:
                name:
                    description: The name of the person to whom to ship the items. Supports only the `full_name` property.
                    $ref: '#/components/schemas/name'
                type:
                    description: The method by which the payer wants to get their items from the payee e.g shipping, in-person pickup. Either type or options but not both may be present.
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    enum:
                        - SHIPPING
                        - PICKUP_IN_PERSON
                address:
                    description: The address of the person to whom to ship the items. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties.
                    $ref: '#/components/schemas/address_portable'
        date_year_month:
            type: string
            description: The year and month, in ISO-8601 `YYYY-MM` date format. See [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
            minLength: 7
            maxLength: 7
            pattern: ^[0-9]{4}-(0[1-9]|1[0-2])$
        card_brand:
            type: string
            title: Card Brand
            description: The card network or brand. Applies to credit, debit, gift, and payment cards.
            minLength: 1
            maxLength: 255
            pattern: ^[A-Z_]+$
            enum:
                - VISA
                - MASTERCARD
                - DISCOVER
                - AMEX
                - SOLO
                - JCB
                - STAR
                - DELTA
                - SWITCH
                - MAESTRO
                - CB_NATIONALE
                - CONFIGOGA
                - CONFIDIS
                - ELECTRON
                - CETELEM
                - CHINA_UNION_PAY
        card:
            type: object
            title: Card
            description: The payment card to use to fund a payment. Can be a credit or debit card.
            properties:
                id:
                    description: The PayPal-generated ID for the card.
                    readOnly: true
                    $ref: '#/components/schemas/instrument_id'
                name:
                    type: string
                    description: The card holder's name as it appears on the card.
                    maxLength: 300
                    minLength: 1
                    pattern: ^.{1,300}$
                number:
                    type: string
                    description: The primary account number (PAN) for the payment card.
                    pattern: ^[0-9]{13,19}$
                    minLength: 13
                    maxLength: 19
                expiry:
                    description: The card expiration year and month, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_year_month'
                security_code:
                    type: string
                    description: The three- or four-digit security code of the card. Also known as the CVV, CVC, CVN, CVE, or CID. This parameter cannot be present in the request when `payment_initiator=MERCHANT`.
                    pattern: ^[0-9]{3,4}$
                    minLength: 3
                    maxLength: 4
                last_digits:
                    type: string
                    description: The last digits of the payment card.
                    pattern: ^[0-9]{2,4}$
                    minLength: 2
                    maxLength: 4
                    readOnly: true
                card_type:
                    description: The card brand or network. Typically used in the response.
                    readOnly: true
                    $ref: '#/components/schemas/card_brand'
                    deprecated: true
                type:
                    description: The payment card type.
                    $ref: '#/components/schemas/card_type'
                brand:
                    description: The card brand or network. Typically used in the response.
                    $ref: '#/components/schemas/card_brand'
                billing_address:
                    description: The billing address for this card. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties.
                    $ref: '#/components/schemas/address_portable'
        payment_source:
            type: object
            title: Payment Source
            description: The payment source definition.
            properties:
                token:
                    $ref: '#/components/schemas/token'
        subscriber_request:
            title: Subscriber Request Information
            description: The subscriber request information .
            type: object
            allOf:
                - $ref: '#/components/schemas/payer'
                - properties:
                    shipping_address:
                        $ref: '#/components/schemas/shipping_detail'
                    payment_source:
                        $ref: '#/components/schemas/payment_source'
        language:
            type: string
            description: The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the language in which to localize the error-related strings, such as messages, issues, and suggested actions. The tag is made up of the [ISO 639-2 language code](https://www.loc.gov/standards/iso639-2/php/code_list.php), the optional [ISO-15924 script tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166 alpha-2 country code](/api/rest/reference/country-codes/) or [M49 region code](https://unstats.un.org/unsd/methodology/m49/).
            format: ppaas_common_language_v3
            maxLength: 10
            minLength: 2
            pattern: ^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}|[0-9]{3}))?$
        payee_payment_method_preference:
            type: string
            description: The merchant-preferred payment methods.
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            default: UNRESTRICTED
            enum:
                - UNRESTRICTED
                - IMMEDIATE_PAYMENT_REQUIRED
        payment_method:
            type: string
            title: Payment Method
            description: The payment mode or method through which the invoicer can accept the payments.
            enum:
                - BANK_TRANSFER
                - CASH
                - CHECK
                - CREDIT_CARD
                - DEBIT_CARD
                - PAYPAL
                - WIRE_TRANSFER
                - OTHER
        application_context:
            type: object
            title: Application Context
            description: Metadata for Venmo transactions.
            properties:
                social_feed_privacy:
                    type: string
                    default: PRIVATE
                    description: This attribute controls the privacy of a payout transaction in recipientΓÇÖs feed. PUBLIC, FRIENDS_ONLY & PRIVATE are the values that can be used. PUBLIC - The payment displays on the recipient's public Venmo feed. FRIENDS_ONLY - The payment displays only to the recipient's Venmo friends. PRIVATE - The payment displays only on the recipient's personal feed. Defaults to `PRIVATE` if left blank.
                    minLength: 1
                    maxLength: 15
                    pattern: ^.*$
                holler_url:
                    type: string
                    description: Link to a Holler sticker. For Venmo recipients, the sticker displays with the payout message. The maximum URL length is 151.
                    format: uri
                    minLength: 1
                    maxLength: 1000
                    deprecated: true
                logo_url:
                    type: string
                    description: 'Link to a logo that displays as the sender''s profile image in the recipient''s Venmo feed. Used to add or update the business profile image. Max image size: 1024 x 1024 pixels. The image should be square and maximum URL length is 2000.'
                    format: uri
                    maxLength: 1000
        billing_cycle_override:
            title: Billing Cycle Override
            description: The billing cycle details to override at subscription level. The subscription billing cycle definition has to adhere to the plan billing cycle definition.
            type: object
            properties:
                pricing_scheme:
                    description: The active pricing scheme for this billing cycle. A free trial billing cycle does not require a pricing scheme.
                    $ref: '#/components/schemas/pricing_scheme'
                sequence:
                    type: integer
                    description: The order in which this cycle is to run among other billing cycles. For example, a trial billing cycle has a `sequence` of `1` while a regular billing cycle has a `sequence` of `2`, so that trial cycle runs before the regular cycle.
                    minimum: 1
                    maximum: 99
                total_cycles:
                    type: integer
                    description: The number of times this billing cycle gets executed. Trial billing cycles can only be executed a finite number of times (value between <code>1</code> and <code>999</code> for <code>total_cycles</code>). Regular billing cycles can be executed infinite times (value of <code>0</code> for <code>total_cycles</code>) or a finite number of times (value between <code>1</code> and <code>999</code> for <code>total_cycles</code>).
                    minimum: 0
                    maximum: 999
            required:
                - sequence
        payment_preferences_override:
            title: Payment Preferences Override
            description: The payment preferences to override at subscription level.
            type: object
            properties:
                auto_bill_outstanding:
                    type: boolean
                    description: Indicates whether to automatically bill the outstanding amount in the next billing cycle.
                setup_fee:
                    description: The initial set-up fee for the service.
                    $ref: '#/components/schemas/money'
                setup_fee_failure_action:
                    type: string
                    description: The action to take on the subscription if the initial payment for the setup fails.
                    minLength: 1
                    maxLength: 24
                    pattern: ^[A-Z_]+$
                    enum:
                        - CONTINUE
                        - CANCEL
                payment_failure_threshold:
                    type: integer
                    description: The maximum number of payment failures before a subscription is suspended. For example, if `payment_failure_threshold` is `2`, the subscription automatically updates to the `SUSPEND` state if two consecutive payments fail.
                    minimum: 0
                    maximum: 999
        taxes_override:
            title: Taxes Override
            description: The tax details.
            type: object
            properties:
                percentage:
                    description: The tax percentage on the billing amount.
                    $ref: '#/components/schemas/percentage'
                inclusive:
                    type: boolean
                    description: Indicates whether the tax was already included in the billing amount.
        plan_override:
            title: Plan Override
            description: An inline plan object to customise the subscription. You can override plan level default attributes by providing customised values for the subscription in this object.
            type: object
            properties:
                billing_cycles:
                    type: array
                    description: An array of billing cycles for trial billing and regular billing. The subscription billing cycle definition has to adhere to the plan billing cycle definition.
                    minItems: 1
                    maxItems: 12
                    items:
                        $ref: '#/components/schemas/billing_cycle_override'
                payment_preferences:
                    $ref: '#/components/schemas/payment_preferences_override'
                taxes:
                    $ref: '#/components/schemas/taxes_override'
        subscription_request_post:
            title: Create Subscription Request
            description: The create subscription request details.
            type: object
            properties:
                plan_id:
                    type: string
                    description: The ID of the plan.
                    minLength: 3
                    maxLength: 50
                start_time:
                    description: The date and time when the subscription started, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    default: Current time
                    $ref: '#/components/schemas/date_time'
                quantity:
                    type: string
                    description: The quantity of the product in the subscription.
                    pattern: ^([0-9]+|([0-9]+)?[.][0-9]+)$
                    minLength: 1
                    maxLength: 32
                shipping_amount:
                    description: The shipping charges.
                    $ref: '#/components/schemas/money'
                subscriber:
                    $ref: '#/components/schemas/subscriber_request'
                auto_renewal:
                    type: boolean
                    description: DEPRECATED. Indicates whether the subscription auto-renews after the billing cycles complete.
                    default: false
                    deprecated: true
                application_context:
                    $ref: '#/components/schemas/application_context'
                custom_id:
                    type: string
                    description: The custom id for the subscription. Can be invoice id.
                    minLength: 1
                    maxLength: 127
                    pattern: ^[\x20-\x7E]+
                plan:
                    description: An inline plan object to customise the subscription. You can override plan level default attributes by providing customised values for the subscription in this object.
                    $ref: '#/components/schemas/plan_override'
            required:
                - plan_id
        subscription_status:
            title: Subscription Status
            description: The subscription status details.
            type: object
            properties:
                status:
                    type: string
                    description: The status of the subscription.
                    minLength: 1
                    maxLength: 24
                    pattern: ^[A-Z_]+$
                    enum:
                        - APPROVAL_PENDING
                        - APPROVED
                        - ACTIVE
                        - SUSPENDED
                        - CANCELLED
                        - EXPIRED
                status_change_note:
                    type: string
                    description: The reason or notes for the status of the subscription.
                    minLength: 1
                    maxLength: 128
                status_update_time:
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
        liability_shift:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            description: Liability shift indicator. The outcome of the issuer's authentication.
            enum:
                - NO
                - POSSIBLE
                - UNKNOWN
        pares_status:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            description: Transactions status result identifier. The outcome of the issuer's authentication.
            enum:
                - Y
                - N
                - U
                - A
                - C
                - R
                - D
                - I
        enrolled:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            description: Status of Authentication eligibility.
            enum:
                - Y
                - N
                - U
                - B
        three_d_secure_authentication_response:
            type: object
            title: The 3D Secure Authentication Response
            description: Results of 3D Secure Authentication.
            properties:
                authentication_status:
                    description: The outcome of the issuer's authentication.
                    $ref: '#/components/schemas/pares_status'
                enrollment_status:
                    description: Status of authentication eligibility.
                    $ref: '#/components/schemas/enrolled'
        authentication_response:
            type: object
            title: Authentication Response
            description: Results of Authentication such as 3D Secure.
            properties:
                liability_shift:
                    $ref: '#/components/schemas/liability_shift'
                three_d_secure:
                    $ref: '#/components/schemas/three_d_secure_authentication_response'
                authentication_flow:
                    $ref: '#/components/schemas/authentication_flow'
                exemption_details:
                    description: Exemption details of 3D Secure Authentication.
                    $ref: '#/components/schemas/exemption_details'
        card_response:
            type: object
            title: Card Response
            description: Full representation of a Card Payment Token.
            properties:
                name:
                    type: string
                    description: The card holder's name as it appears on the card.
                    minLength: 2
                    maxLength: 300
                    pattern: ^[A-Za-z ]+$
                last_digits:
                    type: string
                    description: The last digits of the payment card.
                    pattern: '[0-9]{2,}'
                    minLength: 2
                    maxLength: 4
                    readOnly: true
                brand:
                    description: The card brand or network. Typically used in the response.
                    readOnly: true
                    $ref: '#/components/schemas/card_brand'
                expiry:
                    description: The card expiration year and month, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_year_month'
                billing_address:
                    description: The billing address for this card. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties.
                    $ref: '#/components/schemas/address_entity'
                verification_status:
                    description: Card Verification status.
                    $ref: '#/components/schemas/card_verification_status'
                verification:
                    $ref: '#/components/schemas/card_verification_details'
        card_response_with_billing_address:
            type: object
            title: Card Response with billing address and name
            description: The payment card used to fund the payment. Card can be a credit or debit card.
            allOf:
                - $ref: '#/components/schemas/card_response'
                - properties:
                    name:
                        type: string
                        description: The card holder's name as it appears on the card.
                        minLength: 2
                        maxLength: 300
                    billing_address:
                        $ref: '#/components/schemas/address_portable'
                        description: The billing address for this card. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties.
                    expiry:
                        description: The card expiration year and month, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6).
                        $ref: '#/components/schemas/date_year_month'
                    currency_code:
                        description: Currency code of the given instrument
                        $ref: '#/components/schemas/currency_code'
        payment_source_response:
            type: object
            title: Payment Source
            description: The payment source used to fund the payment.
            properties:
                card:
                    $ref: '#/components/schemas/card_response'
                paypal:
                    $ref: '#/components/schemas/paypal_wallet_response'
                bancontact:
                    $ref: '#/components/schemas/bancontact'
                blik:
                    $ref: '#/components/schemas/blik'
                eps:
                    $ref: '#/components/schemas/eps'
                giropay:
                    $ref: '#/components/schemas/giropay'
                ideal:
                    $ref: '#/components/schemas/ideal'
                mybank:
                    $ref: '#/components/schemas/mybank'
                p24:
                    $ref: '#/components/schemas/p24'
                sofort:
                    $ref: '#/components/schemas/sofort'
                trustly:
                    $ref: '#/components/schemas/trustly'
                venmo:
                    $ref: '#/components/schemas/venmo_wallet_response'
        subscriber:
            title: Subscriber Response Information
            description: The subscriber response information.
            type: object
            allOf:
                - $ref: '#/components/schemas/payer'
                - properties:
                    shipping_address:
                        $ref: '#/components/schemas/shipping_detail'
                    payment_source:
                        $ref: '#/components/schemas/payment_source_response'
        cycle_execution:
            title: Billing Cycle Execution Details
            description: The regular and trial execution details for a billing cycle.
            type: object
            properties:
                tenure_type:
                    type: string
                    description: The type of the billing cycle.
                    minLength: 1
                    maxLength: 24
                    pattern: ^[A-Z_]+$
                    readOnly: true
                    enum:
                        - REGULAR
                        - TRIAL
                sequence:
                    type: integer
                    description: The order in which to run this cycle among other billing cycles.
                    minimum: 0
                    maximum: 99
                cycles_completed:
                    type: integer
                    description: The number of billing cycles that have completed.
                    minimum: 0
                    maximum: 9999
                    readOnly: true
                cycles_remaining:
                    type: integer
                    description: For a finite billing cycle, cycles_remaining is the number of remaining cycles. For an infinite billing cycle, cycles_remaining is set as 0.
                    minimum: 0
                    maximum: 9999
                    readOnly: true
                current_pricing_scheme_version:
                    type: integer
                    description: The active pricing scheme version for the billing cycle.
                    minimum: 1
                    maximum: 99
                    readOnly: true
                total_cycles:
                    type: integer
                    description: The number of times this billing cycle gets executed. Trial billing cycles can only be executed a finite number of times (value between <code>1</code> and <code>999</code> for <code>total_cycles</code>). Regular billing cycles can be executed infinite times (value of <code>0</code> for <code>total_cycles</code>) or a finite number of times (value between <code>1</code> and <code>999</code> for <code>total_cycles</code>).
                    minimum: 0
                    maximum: 999
                    readOnly: true
            required:
                - tenure_type
                - sequence
                - cycles_completed
        last_payment_details:
            title: Last Payment Details
            description: The details for the last payment.
            type: object
            allOf:
                - properties:
                    amount:
                        description: The last payment amount.
                        readOnly: true
                        $ref: '#/components/schemas/money'
                    time:
                        description: The date and time when the last payment was made, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                        readOnly: true
                        $ref: '#/components/schemas/date_time'
            required:
                - amount
                - time
        failed_payment_details:
            title: Failed Payment Details
            description: The details for the failed payment of the subscription.
            type: object
            properties:
                amount:
                    description: The failed payment amount.
                    readOnly: true
                    $ref: '#/components/schemas/money'
                time:
                    description: The date and time when the failed payment was made, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                reason_code:
                    type: string
                    description: The reason code for the payment failure.
                    minLength: 1
                    maxLength: 120
                    pattern: ^[A-Z_]+$
                    readOnly: true
                    enum:
                        - PAYMENT_DENIED
                        - INTERNAL_SERVER_ERROR
                        - PAYEE_ACCOUNT_RESTRICTED
                        - PAYER_ACCOUNT_RESTRICTED
                        - PAYER_CANNOT_PAY
                        - SENDING_LIMIT_EXCEEDED
                        - TRANSACTION_RECEIVING_LIMIT_EXCEEDED
                        - CURRENCY_MISMATCH
                next_payment_retry_time:
                    description: The time when the retry attempt for the failed payment occurs, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
            required:
                - amount
                - time
        subscription_billing_info:
            title: Subscription Billing Information
            description: The billing details for the subscription. If the subscription was or is active, these fields are populated.
            type: object
            properties:
                outstanding_balance:
                    description: The total pending bill amount, to be paid by the subscriber.
                    $ref: '#/components/schemas/money'
                cycle_executions:
                    type: array
                    description: The trial and regular billing executions.
                    maxItems: 3
                    items:
                        $ref: '#/components/schemas/cycle_execution'
                    readOnly: true
                last_payment:
                    readOnly: true
                    description: The details for the last payment of the subscription.
                    $ref: '#/components/schemas/last_payment_details'
                next_billing_time:
                    description: The next date and time for billing this subscription, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                final_payment_time:
                    description: The date and time when the final billing cycle occurs, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                failed_payments_count:
                    type: integer
                    description: The number of consecutive payment failures. Resets to `0` after a successful payment. If this reaches the `payment_failure_threshold` value, the subscription updates to the `SUSPENDED` state.
                    minimum: 0
                    maximum: 999
                    readOnly: true
                last_failed_payment:
                    description: The details for the last failed payment of the subscription.
                    readOnly: true
                    $ref: '#/components/schemas/failed_payment_details'
            required:
                - outstanding_balance
                - failed_payments_count
        subscription:
            title: Subscription
            description: The subscription details.
            type: object
            allOf:
                - $ref: '#/components/schemas/subscription_status'
                - properties:
                    id:
                        type: string
                        description: The PayPal-generated ID for the subscription.
                        minLength: 3
                        maxLength: 50
                        readOnly: true
                    plan_id:
                        type: string
                        description: The ID of the plan.
                        minLength: 3
                        maxLength: 50
                    start_time:
                        $ref: '#/components/schemas/date_time'
                    quantity:
                        type: string
                        description: The quantity of the product in the subscription.
                        pattern: ^([0-9]+|([0-9]+)?[.][0-9]+)$
                        minLength: 1
                        maxLength: 32
                    shipping_amount:
                        $ref: '#/components/schemas/money'
                    subscriber:
                        $ref: '#/components/schemas/subscriber'
                    billing_info:
                        readOnly: true
                        $ref: '#/components/schemas/subscription_billing_info'
                    create_time:
                        readOnly: true
                        $ref: '#/components/schemas/date_time'
                    update_time:
                        readOnly: true
                        $ref: '#/components/schemas/date_time'
                    custom_id:
                        type: string
                        description: The custom id for the subscription. Can be invoice id.
                        minLength: 1
                        maxLength: 127
                        pattern: ^[\x20-\x7E]+
                    plan_overridden:
                        type: boolean
                        description: Indicates whether the subscription has overridden any plan attributes.
                        readOnly: true
                    plan:
                        description: Inline plan details.
                        $ref: '#/components/schemas/plan'
                    links:
                        type: array
                        description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                        readOnly: true
                        items:
                            readOnly: true
                            $ref: '#/components/schemas/link_description'
        subscriptions.create-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - The value of a field does not conform to the expected format.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is too long.
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is invalid.
                            - title: INVALID_INTEGER_MIN_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_INTEGER_MIN_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The integer value of a field is too small.
                            - title: INVALID_INTEGER_MAX_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_INTEGER_MAX_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The integer value of a field is too large.
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - Start time must be a valid future date and time.
                            - title: MISSING_REQUEST_BODY
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUEST_BODY
                                description:
                                    type: string
                                    enum:
                                        - Request body is missing.
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - A required field is missing.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is too long.
        subscriptions.create-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: USER_ACCOUNT_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - USER_ACCOUNT_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - User account locked or closed.
                            - title: PLAN_STATUS_INVALID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PLAN_STATUS_INVALID
                                description:
                                    type: string
                                    enum:
                                        - Invalid plan status for subscription creation; plan status should be active.
                            - title: SUBSCRIPTION_CANNOT_HAVE_QUANTITY
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SUBSCRIPTION_CANNOT_HAVE_QUANTITY
                                description:
                                    type: string
                                    enum:
                                        - Subscription can't have quantity as the plan does not support quantity.
                            - title: CARD_SUBSCRIPTIONS_NOT_ENABLED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CARD_SUBSCRIPTIONS_NOT_ENABLED
                                description:
                                    type: string
                                    enum:
                                        - The account is not setup to be able to process subscriptions funded by card payments. Please contact PayPal customer support.
                            - title: 3DS_CARDS_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - 3DS_CARDS_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - Cards that require 3DS authentication not supported.
                            - title: INVALID_BILLING_CYCLE_SEQUENCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_BILLING_CYCLE_SEQUENCE
                                description:
                                    type: string
                                    enum:
                                        - The provided billing cycle sequence is not available.
                            - title: INVALID_PRICING_SCHEME
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PRICING_SCHEME
                                description:
                                    type: string
                                    enum:
                                        - The override plan pricing scheme should be of the same type as that of the original plan.
                            - title: INVALID_PRICING_TIER_AMOUNT
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PRICING_TIER_AMOUNT
                                description:
                                    type: string
                                    enum:
                                        - Free tiers are not supported.
                            - title: MISSING_PRICING_SCHEME_TIERS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_PRICING_SCHEME_TIERS
                                description:
                                    type: string
                                    enum:
                                        - Tier(s) are missing for some quantities.
                            - title: OVERLAPPING_PRICING_SCHEME_TIERS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - OVERLAPPING_PRICING_SCHEME_TIERS
                                description:
                                    type: string
                                    enum:
                                        - The specified quantity overlaps with multiple pricing tiers.
                            - title: INVALID_PRICING_MODEL
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PRICING_MODEL
                                description:
                                    type: string
                                    enum:
                                        - The specified pricing model is not supported for trial billing cycle.
                            - title: FIXED_PRICE_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - FIXED_PRICE_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - Fixed price is not supported for tiered pricing schemes.
                            - title: INVALID_PRICING_TIER_QUANTITY
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PRICING_TIER_QUANTITY
                                description:
                                    type: string
                                    enum:
                                        - Tier starting quantity must be less than ending quantity.
                            - title: CURRENCY_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CURRENCY_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - The currency code is different from the plan's currency code.
        subscriptions.patch-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: UNSUPPORTED_PATCH_OPERATION
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - UNSUPPORTED_PATCH_OPERATION
                                description:
                                    type: string
                                    enum:
                                        - The specified patch operation not supported for this field.
                            - title: INVALID_PATCH_PATH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PATCH_PATH
                                description:
                                    type: string
                                    enum:
                                        - The specified field cannot be patched.
                            - title: INVALID_PATCH_PATH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PATCH_PATH
                                description:
                                    type: string
                                    enum:
                                        - Multiple operations on the same field are not allowed.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - The value of a field does not conform to the expected format.
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is invalid.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is too long.
                            - title: INVALID_STRING_MIN_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MIN_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is too short.
                            - title: INVALID_INTEGER_MIN_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_INTEGER_MIN_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The integer value of a field is too small.
                            - title: INVALID_INTEGER_MAX_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_INTEGER_MAX_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The integer value of a field is too large.
                            - title: MISSING_REQUEST_BODY
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUEST_BODY
                                description:
                                    type: string
                                    enum:
                                        - Request body is missing.
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - A required field is missing.
        subscriptions.patch-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: USER_ACCOUNT_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - USER_ACCOUNT_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - User account locked or closed.
                            - title: SUBSCRIPTION_STATUS_INVALID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SUBSCRIPTION_STATUS_INVALID
                                description:
                                    type: string
                                    enum:
                                        - Invalid subscription status for patch action; subscription status should be either active or suspended.
                            - title: CARD_SUBSCRIPTIONS_NOT_ENABLED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CARD_SUBSCRIPTIONS_NOT_ENABLED
                                description:
                                    type: string
                                    enum:
                                        - The account is not setup to be able to process subscriptions funded by card payments. Please contact PayPal customer support.
                            - title: 3DS_CARDS_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - 3DS_CARDS_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - Cards that require 3DS authentication not supported.
                            - title: BILLING_CYCLE_EXECUTION_COMPLETED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - BILLING_CYCLE_EXECUTION_COMPLETED
                                description:
                                    type: string
                                    enum:
                                        - Update cannot be performed on a billing cycle that has completed execution.
                            - title: AMOUNT_GREATER_THAN_OUTSTANDING_BALANCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AMOUNT_GREATER_THAN_OUTSTANDING_BALANCE
                                description:
                                    type: string
                                    enum:
                                        - The new outstanding balance cannot be greater than the current outstanding balance.
                            - title: INVALID_BILLING_TOTAL_CYCLES
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_BILLING_TOTAL_CYCLES
                                description:
                                    type: string
                                    enum:
                                        - The total cycles cannot be less than the number of billing cycles completed.
                            - title: INVALID_PRICING_TIER_AMOUNT
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PRICING_TIER_AMOUNT
                                description:
                                    type: string
                                    enum:
                                        - Free tiers are not supported.
                            - title: MISSING_PRICING_SCHEME_TIERS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_PRICING_SCHEME_TIERS
                                description:
                                    type: string
                                    enum:
                                        - Tier(s) are missing for some quantities.
                            - title: OVERLAPPING_PRICING_SCHEME_TIERS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - OVERLAPPING_PRICING_SCHEME_TIERS
                                description:
                                    type: string
                                    enum:
                                        - The specified quantity overlaps with multiple pricing tiers.
                            - title: INVALID_PRICING_MODEL
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PRICING_MODEL
                                description:
                                    type: string
                                    enum:
                                        - The specified pricing model is not supported for trial billing cycle.
                            - title: FIXED_PRICE_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - FIXED_PRICE_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - Fixed price is not supported for tiered pricing schemes.
                            - title: INVALID_PRICING_TIER_QUANTITY
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PRICING_TIER_QUANTITY
                                description:
                                    type: string
                                    enum:
                                        - Tier starting quantity must be less than ending quantity.
                            - title: INVALID_START_TIME
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_START_TIME
                                description:
                                    type: string
                                    enum:
                                        - The start time cannot be updated for a subscription that has been activated.
                            - title: CURRENCY_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CURRENCY_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - The currency code is different from the subscription's currency code.
        subscription_revise_request:
            title: Subscription Modify Plan Request
            description: The request to update the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount` and `shipping_address` values for the subscription. This type of update requires the buyer's consent.
            type: object
            properties:
                plan_id:
                    type: string
                    description: The unique PayPal-generated ID for the plan.
                    minLength: 3
                    maxLength: 50
                quantity:
                    type: string
                    description: The quantity of the product or service in the subscription.
                    pattern: ^([0-9]+|([0-9]+)?[.][0-9]+)$
                    minLength: 1
                    maxLength: 32
                shipping_amount:
                    description: The shipping charges.
                    $ref: '#/components/schemas/money'
                shipping_address:
                    description: The shipping address of the subscriber.
                    $ref: '#/components/schemas/shipping_detail'
                application_context:
                    $ref: '#/components/schemas/application_context'
                plan:
                    description: An inline plan object to customise the subscription. You can override plan level default attributes by providing customised values for the subscription in this object. Any existing overrides will not be carried forward during subscription revise.
                    $ref: '#/components/schemas/plan_override'
        subscription_revise_response:
            title: Update Product Quantity in Subscription Response
            description: The response to a request to update the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount` and `shipping_address` values for the subscription. This type of update requires the buyer's consent.
            type: object
            allOf:
                - $ref: '#/components/schemas/subscription_revise_request'
                - properties:
                    plan_overridden:
                        type: boolean
                        description: Indicates whether the subscription has overridden any plan attributes.
                        readOnly: true
                    links:
                        type: array
                        description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                        readOnly: true
                        items:
                            readOnly: true
                            $ref: '#/components/schemas/link_description'
        subscriptions.revise-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - The value of a field does not conform to the expected format.
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is invalid.
                            - title: INVALID_INTEGER_MIN_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_INTEGER_MIN_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The integer value of a field is too small.
                            - title: INVALID_INTEGER_MAX_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_INTEGER_MAX_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The integer value of a field is too large.
                            - title: MISSING_REQUEST_BODY
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUEST_BODY
                                description:
                                    type: string
                                    enum:
                                        - Request body is missing.
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - A required field is missing.
        subscriptions.revise-404:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_RESOURCE_ID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_RESOURCE_ID
                                description:
                                    type: string
                                    enum:
                                        - Requested resource ID was not found.
        subscriptions.revise-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: USER_ACCOUNT_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - USER_ACCOUNT_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - User account locked or closed.
                            - title: PLAN_PRODUCT_NOT_COMPATIBLE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PLAN_PRODUCT_NOT_COMPATIBLE
                                description:
                                    type: string
                                    enum:
                                        - The old and the new plans should be for the same product.
                            - title: INVALID_BILLING_CYCLE_SEQUENCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_BILLING_CYCLE_SEQUENCE
                                description:
                                    type: string
                                    enum:
                                        - The provided billing cycle sequence is not available.
                            - title: INVALID_PRICING_SCHEME
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PRICING_SCHEME
                                description:
                                    type: string
                                    enum:
                                        - The override plan pricing scheme should be of the same type as that of the original plan.
                            - title: INVALID_PRICING_TIER_AMOUNT
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PRICING_TIER_AMOUNT
                                description:
                                    type: string
                                    enum:
                                        - Free tiers are not supported.
                            - title: MISSING_PRICING_SCHEME_TIERS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_PRICING_SCHEME_TIERS
                                description:
                                    type: string
                                    enum:
                                        - Tier(s) are missing for some quantities.
                            - title: OVERLAPPING_PRICING_SCHEME_TIERS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - OVERLAPPING_PRICING_SCHEME_TIERS
                                description:
                                    type: string
                                    enum:
                                        - The specified quantity overlaps with multiple pricing tiers.
                            - title: INVALID_PRICING_MODEL
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PRICING_MODEL
                                description:
                                    type: string
                                    enum:
                                        - The specified pricing model is not supported for trial billing cycle.
                            - title: FIXED_PRICE_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - FIXED_PRICE_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - Fixed price is not supported for tiered pricing schemes.
                            - title: INVALID_PRICING_TIER_QUANTITY
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PRICING_TIER_QUANTITY
                                description:
                                    type: string
                                    enum:
                                        - Tier starting quantity must be less than ending quantity.
                            - title: CURRENCY_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CURRENCY_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - The currency code is different from the plan's currency code.
        subscription_suspend_request:
            title: Suspend Subscription
            description: The suspend subscription request details.
            type: object
            properties:
                reason:
                    type: string
                    description: The reason for suspenson of the subscription.
                    minLength: 1
                    maxLength: 128
            required:
                - reason
        subscriptions.suspend-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is too long.
        subscriptions.suspend-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: USER_ACCOUNT_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - USER_ACCOUNT_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - User account locked or closed.
                            - title: SUBSCRIPTION_STATUS_INVALID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SUBSCRIPTION_STATUS_INVALID
                                description:
                                    type: string
                                    enum:
                                        - Invalid subscription status for suspend action; subscription status should be active.
        subscription_cancel_request:
            title: Cancel Subscription Request
            description: The cancel subscription request details.
            type: object
            properties:
                reason:
                    type: string
                    description: The reason for the cancellation of a subscription.
                    minLength: 1
                    maxLength: 128
            required:
                - reason
        subscriptions.cancel-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is too long.
        subscriptions.cancel-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: USER_ACCOUNT_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - USER_ACCOUNT_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - User account locked or closed.
                            - title: SUBSCRIPTION_STATUS_INVALID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SUBSCRIPTION_STATUS_INVALID
                                description:
                                    type: string
                                    enum:
                                        - Invalid subscription status for cancel action; subscription status should be active or suspended.
        subscription_activate_request:
            title: Activate Subscription Request
            description: The activate subscription request details.
            type: object
            properties:
                reason:
                    type: string
                    description: The reason for activation of a subscription. Required to reactivate the subscription.
                    minLength: 1
                    maxLength: 128
        subscriptions.activate-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is too long.
        subscriptions.activate-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: USER_ACCOUNT_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - USER_ACCOUNT_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - User account locked or closed.
                            - title: SUBSCRIPTION_STATUS_INVALID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SUBSCRIPTION_STATUS_INVALID
                                description:
                                    type: string
                                    enum:
                                        - Invalid subscription status for activate action; subscription status should be suspended.
                            - title: SUBSCRIPTION_CANNOT_BE_ACTIVATED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SUBSCRIPTION_CANNOT_BE_ACTIVATED
                                description:
                                    type: string
                                    enum:
                                        - Subscription cannot be activated after payment failure threshold has reached.
                            - title: SUBSCRIPTION_CANNOT_BE_ACTIVATED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SUBSCRIPTION_CANNOT_BE_ACTIVATED
                                description:
                                    type: string
                                    enum:
                                        - This subscription should be activated by the system.
                            - title: SUBSCRIPTION_CANNOT_BE_ACTIVATED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SUBSCRIPTION_CANNOT_BE_ACTIVATED
                                description:
                                    type: string
                                    enum:
                                        - This subscription should be activated by the merchant.
        subscription_capture_request:
            title: Charge Amount from Subscriber
            description: The charge amount from the subscriber.
            type: object
            properties:
                note:
                    type: string
                    description: The reason or note for the subscription charge.
                    minLength: 1
                    maxLength: 128
                capture_type:
                    type: string
                    description: The type of capture.
                    minLength: 1
                    maxLength: 24
                    pattern: ^[A-Z_]+$
                    enum:
                        - OUTSTANDING_BALANCE
                amount:
                    $ref: '#/components/schemas/money'
                    description: The amount of the outstanding balance. This value cannot be greater than the current outstanding balance amount.
            required:
                - note
                - capture_type
                - amount
        capture_status_details:
            title: Capture Status Details
            description: The details of the captured payment status.
            type: object
            properties:
                reason:
                    description: The reason why the captured payment status is `PENDING` or `DENIED`.
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[A-Z_]+$
                    enum:
                        - BUYER_COMPLAINT
                        - CHARGEBACK
                        - ECHECK
                        - INTERNATIONAL_WITHDRAWAL
                        - OTHER
                        - PENDING_REVIEW
                        - RECEIVING_PREFERENCE_MANDATES_MANUAL_ACTION
                        - REFUNDED
                        - TRANSACTION_APPROVED_AWAITING_FUNDING
                        - UNILATERAL
                        - VERIFICATION_REQUIRED
        capture_status:
            type: object
            title: Capture Status
            description: The status of a captured payment.
            properties:
                status:
                    description: The status of the captured payment.
                    type: string
                    readOnly: true
                    enum:
                        - COMPLETED
                        - DECLINED
                        - PARTIALLY_REFUNDED
                        - PENDING
                        - REFUNDED
                        - FAILED
                status_details:
                    description: The details of the captured payment status.
                    readOnly: true
                    $ref: '#/components/schemas/capture_status_details'
        amount_with_breakdown:
            type: object
            title: Amount with Breakdown
            description: The breakdown of the amount. Includes total item amount, total tax amount, custom amount, and shipping and discounts, if any.
            properties:
                item_total:
                    $ref: '#/components/schemas/money'
                    description: The subtotal for all items. Must equal the sum of (`items[].unit_amount` * `items[].quantity`) for all items.
                discount:
                    $ref: '#/components/schemas/aggregated_discount'
                    description: The discount can be at the item or invoice level, or both. Can be applied as a percent or amount. If you provide both amount and percent, amount takes precedent.
                tax_total:
                    $ref: '#/components/schemas/money'
                    description: The aggregated amount of the item and shipping taxes.
                shipping:
                    $ref: '#/components/schemas/shipping_cost'
                    description: The shipping fee for all items. Includes tax on shipping.
                custom:
                    $ref: '#/components/schemas/custom_amount'
                    description: The custom amount to apply to an invoice. If you include a label, you must include the custom amount.
        email_address:
            type: string
            description: The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
            format: ppaas_common_email_address_v2
            minLength: 3
            maxLength: 254
            pattern: ^.+@[^"\-].+$
        transaction:
            type: object
            title: Transaction
            description: An array of payment-related transactions. A transaction defines what the payment is for and who fulfills the payment.
            properties:
                amount:
                    $ref: '#/components/schemas/amount'
                    description: The amount to collect.
                payee:
                    $ref: '#/components/schemas/payee'
                description:
                    type: string
                    description: The purchase description.
                    maxLength: 127
                note_to_payee:
                    type: string
                    description: The note to the recipient of the funds in this transaction.
                    maxLength: 255
                custom:
                    type: string
                    description: The free-form field for the client's use.
                    maxLength: 127
                invoice_number:
                    type: string
                    description: The invoice number to track this payment.
                    maxLength: 127
                soft_descriptor:
                    type: string
                    description: The soft descriptor to use to charge this funding source. If greater than the maximum allowed length, the API truncates the string.
                    maxLength: 22
                payment_options:
                    type: object
                    title: Payment Options
                    description: The payment options for this transaction.
                    properties:
                        allowed_payment_method:
                            type: string
                            description: The payment method for this transaction. This field does not apply to the credit card payment method.
                            default: UNRESTRICTED
                            enum:
                                - UNRESTRICTED
                                - INSTANT_FUNDING_SOURCE
                                - IMMEDIATE_PAY
                item_list:
                    type: object
                    title: Item List
                    description: An array of items that are being purchased.
                    properties:
                        items:
                            type: array
                            description: An array of items that are being purchased.
                            items:
                                $ref: '#/components/schemas/item'
                        shipping_address:
                            $ref: '#/components/schemas/shipping_address'
                        shipping_method:
                            type: string
                            description: The shipping method used for this payment, such as USPS Parcel.
                        shipping_phone_number:
                            type: string
                            description: The shipping phone number, in its canonical international format as defined by the [E.164](https://en.wikipedia.org/wiki/E.164) numbering plan. Enables merchants to share payerΓÇÖs contact number with PayPal for the current payment. The final contact number for the payer who is associated with the transaction might be the same as or different from the `shipping_phone_number` based on the payerΓÇÖs action on PayPal.
                notify_url:
                    type: string
                    format: uri
                    description: The URL to send payment notifications.
                    maxLength: 2048
                related_resources:
                    type: array
                    description: An array of payment-related transactions. A transaction defines what the payment is for and who fulfills the payment.
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/related_resources'
        subscriptions.capture-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: MISSING_REQUEST_BODY
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUEST_BODY
                                description:
                                    type: string
                                    enum:
                                        - Request body is missing.
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is invalid.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is too long.
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - A required field is missing.
        subscriptions.capture-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: USER_ACCOUNT_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - USER_ACCOUNT_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - User account locked or closed.
                            - title: SUBSCRIBER_ACCOUNT_LOCKED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SUBSCRIBER_ACCOUNT_LOCKED
                                description:
                                    type: string
                                    enum:
                                        - Subscriber Account Locked.
                            - title: SUBSCRIBER_ACCOUNT_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SUBSCRIBER_ACCOUNT_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - Subscriber Account Closed.
                            - title: SUBSCRIBER_ACCOUNT_RESTRICTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SUBSCRIBER_ACCOUNT_RESTRICTED
                                description:
                                    type: string
                                    enum:
                                        - Subscriber Account Restricted.
                            - title: SUBSCRIPTION_STATUS_INVALID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SUBSCRIPTION_STATUS_INVALID
                                description:
                                    type: string
                                    enum:
                                        - Invalid subscription status for capture action; subscription status should be active or suspended or expired.
                            - title: ZERO_OUTSTANDING_BALANCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ZERO_OUTSTANDING_BALANCE
                                description:
                                    type: string
                                    enum:
                                        - Current outstanding balance should be greater than zero.
                            - title: CURRENCY_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CURRENCY_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - The currency code is different from the subscription's currency code.
                            - title: AMOUNT_GREATER_THAN_OUTSTANDING_BALANCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AMOUNT_GREATER_THAN_OUTSTANDING_BALANCE
                                description:
                                    type: string
                                    enum:
                                        - The capture amount can not be greater than the current outstanding balance.
        transactions_list:
            title: List Transactions
            description: The list transactions for a subscription request details.
            type: object
            properties:
                transactions:
                    type: array
                    description: An array of transactions.
                    maxItems: 32767
                    items:
                        $ref: '#/components/schemas/transaction'
                total_items:
                    type: integer
                    description: The total number of items.
                    minimum: 0
                    maximum: 500000000
                total_pages:
                    type: integer
                    description: The total number of pages.
                    minimum: 0
                    maximum: 100000000
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    minItems: 1
                    maxItems: 10
                    items:
                        readOnly: true
                        $ref: '#/components/schemas/link_description'
        subscriptions.transactions-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - The value of a field does not conform to the expected format.
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is invalid.
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - A required field is missing.
        product_collection_element:
            title: Product Element
            description: The details for a product in the collection response.
            type: object
            properties:
                id:
                    type: string
                    description: The ID of the product.
                    minLength: 6
                    maxLength: 50
                    readOnly: true
                name:
                    type: string
                    description: The product name.
                    minLength: 1
                    maxLength: 127
                description:
                    type: string
                    description: The product description.
                    minLength: 1
                    maxLength: 256
                create_time:
                    description: The date and time when the product was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/overview/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
        product_collection:
            title: Product Collection
            description: The list of products, with details.
            type: object
            properties:
                products:
                    type: array
                    description: An array of products.
                    minItems: 1
                    maxItems: 32767
                    items:
                        $ref: '#/components/schemas/product_collection_element'
                total_items:
                    type: integer
                    description: The total number of items.
                    minimum: 0
                    maximum: 500000000
                total_pages:
                    type: integer
                    description: The total number of pages.
                    minimum: 0
                    maximum: 100000000
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/overview/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
        product_category:
            type: string
            description: The product category.
            title: Product Category
            minLength: 4
            maxLength: 256
            pattern: ^[A-Z_]+$
            enum:
                - AC_REFRIGERATION_REPAIR
                - ACADEMIC_SOFTWARE
                - ACCESSORIES
                - ACCOUNTING
                - ADULT
                - ADVERTISING
                - AFFILIATED_AUTO_RENTAL
                - AGENCIES
                - AGGREGATORS
                - AGRICULTURAL_COOPERATIVE_FOR_MAIL_ORDER
                - AIR_CARRIERS_AIRLINES
                - AIRLINES
                - AIRPORTS_FLYING_FIELDS
                - ALCOHOLIC_BEVERAGES
                - AMUSEMENT_PARKS_CARNIVALS
                - ANIMATION
                - ANTIQUES
                - APPLIANCES
                - AQUARIAMS_SEAQUARIUMS_DOLPHINARIUMS
                - ARCHITECTURAL_ENGINEERING_AND_SURVEYING_SERVICES
                - ART_AND_CRAFT_SUPPLIES
                - ART_DEALERS_AND_GALLERIES
                - ARTIFACTS_GRAVE_RELATED_AND_NATIVE_AMERICAN_CRAFTS
                - ARTS_AND_CRAFTS
                - ARTS_CRAFTS_AND_COLLECTIBLES
                - AUDIO_BOOKS
                - AUTO_ASSOCIATIONS_CLUBS
                - AUTO_DEALER_USED_ONLY
                - AUTO_RENTALS
                - AUTO_SERVICE
                - AUTOMATED_FUEL_DISPENSERS
                - AUTOMOBILE_ASSOCIATIONS
                - AUTOMOTIVE
                - AUTOMOTIVE_REPAIR_SHOPS_NON_DEALER
                - AUTOMOTIVE_TOP_AND_BODY_SHOPS
                - AVIATION
                - BABIES_CLOTHING_AND_SUPPLIES
                - BABY
                - BANDS_ORCHESTRAS_ENTERTAINERS
                - BARBIES
                - BATH_AND_BODY
                - BATTERIES
                - BEAN_BABIES
                - BEAUTY
                - BEAUTY_AND_FRAGRANCES
                - BED_AND_BATH
                - BICYCLE_SHOPS_SALES_AND_SERVICE
                - BICYCLES_AND_ACCESSORIES
                - BILLIARD_POOL_ESTABLISHMENTS
                - BOAT_DEALERS
                - BOAT_RENTALS_AND_LEASING
                - BOATING_SAILING_AND_ACCESSORIES
                - BOOKS
                - BOOKS_AND_MAGAZINES
                - BOOKS_MANUSCRIPTS
                - BOOKS_PERIODICALS_AND_NEWSPAPERS
                - BOWLING_ALLEYS
                - BULLETIN_BOARD
                - BUS_LINE
                - BUS_LINES_CHARTERS_TOUR_BUSES
                - BUSINESS
                - BUSINESS_AND_SECRETARIAL_SCHOOLS
                - BUYING_AND_SHOPPING_SERVICES_AND_CLUBS
                - CABLE_SATELLITE_AND_OTHER_PAY_TELEVISION_AND_RADIO_SERVICES
                - CABLE_SATELLITE_AND_OTHER_PAY_TV_AND_RADIO
                - CAMERA_AND_PHOTOGRAPHIC_SUPPLIES
                - CAMERAS
                - CAMERAS_AND_PHOTOGRAPHY
                - CAMPER_RECREATIONAL_AND_UTILITY_TRAILER_DEALERS
                - CAMPING_AND_OUTDOORS
                - CAMPING_AND_SURVIVAL
                - CAR_AND_TRUCK_DEALERS
                - CAR_AND_TRUCK_DEALERS_USED_ONLY
                - CAR_AUDIO_AND_ELECTRONICS
                - CAR_RENTAL_AGENCY
                - CATALOG_MERCHANT
                - CATALOG_RETAIL_MERCHANT
                - CATERING_SERVICES
                - CHARITY
                - CHECK_CASHIER
                - CHILD_CARE_SERVICES
                - CHILDREN_BOOKS
                - CHIROPODISTS_PODIATRISTS
                - CHIROPRACTORS
                - CIGAR_STORES_AND_STANDS
                - CIVIC_SOCIAL_FRATERNAL_ASSOCIATIONS
                - CIVIL_SOCIAL_FRAT_ASSOCIATIONS
                - CLOTHING
                - CLOTHING_ACCESSORIES_AND_SHOES
                - CLOTHING_RENTAL
                - COFFEE_AND_TEA
                - COIN_OPERATED_BANKS_AND_CASINOS
                - COLLECTIBLES
                - COLLECTION_AGENCY
                - COLLEGES_AND_UNIVERSITIES
                - COMMERCIAL_EQUIPMENT
                - COMMERCIAL_FOOTWEAR
                - COMMERCIAL_PHOTOGRAPHY
                - COMMERCIAL_PHOTOGRAPHY_ART_AND_GRAPHICS
                - COMMERCIAL_SPORTS_PROFESSIONA
                - COMMODITIES_AND_FUTURES_EXCHANGE
                - COMPUTER_AND_DATA_PROCESSING_SERVICES
                - COMPUTER_HARDWARE_AND_SOFTWARE
                - COMPUTER_MAINTENANCE_REPAIR_AND_SERVICES_NOT_ELSEWHERE_CLAS
                - CONSTRUCTION
                - CONSTRUCTION_MATERIALS_NOT_ELSEWHERE_CLASSIFIED
                - CONSULTING_SERVICES
                - CONSUMER_CREDIT_REPORTING_AGENCIES
                - CONVALESCENT_HOMES
                - COSMETIC_STORES
                - COUNSELING_SERVICES_DEBT_MARRIAGE_PERSONAL
                - COUNTERFEIT_CURRENCY_AND_STAMPS
                - COUNTERFEIT_ITEMS
                - COUNTRY_CLUBS
                - COURIER_SERVICES
                - COURIER_SERVICES_AIR_AND_GROUND_AND_FREIGHT_FORWARDERS
                - COURT_COSTS_ALIMNY_CHILD_SUPT
                - COURT_COSTS_INCLUDING_ALIMONY_AND_CHILD_SUPPORT_COURTS_OF_LAW
                - CREDIT_CARDS
                - CREDIT_UNION
                - CULTURE_AND_RELIGION
                - DAIRY_PRODUCTS_STORES
                - DANCE_HALLS_STUDIOS_AND_SCHOOLS
                - DECORATIVE
                - DENTAL
                - DENTISTS_AND_ORTHODONTISTS
                - DEPARTMENT_STORES
                - DESKTOP_PCS
                - DEVICES
                - DIECAST_TOYS_VEHICLES
                - DIGITAL_GAMES
                - DIGITAL_MEDIA_BOOKS_MOVIES_MUSIC
                - DIRECT_MARKETING
                - DIRECT_MARKETING_CATALOG_MERCHANT
                - DIRECT_MARKETING_INBOUND_TELE
                - DIRECT_MARKETING_OUTBOUND_TELE
                - DIRECT_MARKETING_SUBSCRIPTION
                - DISCOUNT_STORES
                - DOOR_TO_DOOR_SALES
                - DRAPERY_WINDOW_COVERING_AND_UPHOLSTERY
                - DRINKING_PLACES
                - DRUGSTORE
                - DURABLE_GOODS
                - ECOMMERCE_DEVELOPMENT
                - ECOMMERCE_SERVICES
                - EDUCATIONAL_AND_TEXTBOOKS
                - ELECTRIC_RAZOR_STORES
                - ELECTRICAL_AND_SMALL_APPLIANCE_REPAIR
                - ELECTRICAL_CONTRACTORS
                - ELECTRICAL_PARTS_AND_EQUIPMENT
                - ELECTRONIC_CASH
                - ELEMENTARY_AND_SECONDARY_SCHOOLS
                - EMPLOYMENT
                - ENTERTAINERS
                - ENTERTAINMENT_AND_MEDIA
                - EQUIP_TOOL_FURNITURE_AND_APPLIANCE_RENTAL_AND_LEASING
                - ESCROW
                - EVENT_AND_WEDDING_PLANNING
                - EXERCISE_AND_FITNESS
                - EXERCISE_EQUIPMENT
                - EXTERMINATING_AND_DISINFECTING_SERVICES
                - FABRICS_AND_SEWING
                - FAMILY_CLOTHING_STORES
                - FASHION_JEWELRY
                - FAST_FOOD_RESTAURANTS
                - FICTION_AND_NONFICTION
                - FINANCE_COMPANY
                - FINANCIAL_AND_INVESTMENT_ADVICE
                - FINANCIAL_INSTITUTIONS_MERCHANDISE_AND_SERVICES
                - FIREARM_ACCESSORIES
                - FIREARMS_WEAPONS_AND_KNIVES
                - FIREPLACE_AND_FIREPLACE_SCREENS
                - FIREWORKS
                - FISHING
                - FLORISTS
                - FLOWERS
                - FOOD_DRINK_AND_NUTRITION
                - FOOD_PRODUCTS
                - FOOD_RETAIL_AND_SERVICE
                - FRAGRANCES_AND_PERFUMES
                - FREEZER_AND_LOCKER_MEAT_PROVISIONERS
                - FUEL_DEALERS_FUEL_OIL_WOOD_AND_COAL
                - FUEL_DEALERS_NON_AUTOMOTIVE
                - FUNERAL_SERVICES_AND_CREMATORIES
                - FURNISHING_AND_DECORATING
                - FURNITURE
                - FURRIERS_AND_FUR_SHOPS
                - GADGETS_AND_OTHER_ELECTRONICS
                - GAMBLING
                - GAME_SOFTWARE
                - GAMES
                - GARDEN_SUPPLIES
                - GENERAL
                - GENERAL_CONTRACTORS
                - GENERAL_GOVERNMENT
                - GENERAL_SOFTWARE
                - GENERAL_TELECOM
                - GIFTS_AND_FLOWERS
                - GLASS_PAINT_AND_WALLPAPER_STORES
                - GLASSWARE_CRYSTAL_STORES
                - GOVERNMENT
                - GOVERNMENT_IDS_AND_LICENSES
                - GOVERNMENT_LICENSED_ON_LINE_CASINOS_ON_LINE_GAMBLING
                - GOVERNMENT_OWNED_LOTTERIES
                - GOVERNMENT_SERVICES
                - GRAPHIC_AND_COMMERCIAL_DESIGN
                - GREETING_CARDS
                - GROCERY_STORES_AND_SUPERMARKETS
                - HARDWARE_AND_TOOLS
                - HARDWARE_EQUIPMENT_AND_SUPPLIES
                - HAZARDOUS_RESTRICTED_AND_PERISHABLE_ITEMS
                - HEALTH_AND_BEAUTY_SPAS
                - HEALTH_AND_NUTRITION
                - HEALTH_AND_PERSONAL_CARE
                - HEARING_AIDS_SALES_AND_SUPPLIES
                - HEATING_PLUMBING_AC
                - HIGH_RISK_MERCHANT
                - HIRING_SERVICES
                - HOBBIES_TOYS_AND_GAMES
                - HOME_AND_GARDEN
                - HOME_AUDIO
                - HOME_DECOR
                - HOME_ELECTRONICS
                - HOSPITALS
                - HOTELS_MOTELS_INNS_RESORTS
                - HOUSEWARES
                - HUMAN_PARTS_AND_REMAINS
                - HUMOROUS_GIFTS_AND_NOVELTIES
                - HUNTING
                - IDS_LICENSES_AND_PASSPORTS
                - ILLEGAL_DRUGS_AND_PARAPHERNALIA
                - INDUSTRIAL
                - INDUSTRIAL_AND_MANUFACTURING_SUPPLIES
                - INSURANCE_AUTO_AND_HOME
                - INSURANCE_DIRECT
                - INSURANCE_LIFE_AND_ANNUITY
                - INSURANCE_SALES_UNDERWRITING
                - INSURANCE_UNDERWRITING_PREMIUMS
                - INTERNET_AND_NETWORK_SERVICES
                - INTRA_COMPANY_PURCHASES
                - LABORATORIES_DENTAL_MEDICAL
                - LANDSCAPING
                - LANDSCAPING_AND_HORTICULTURAL_SERVICES
                - LAUNDRY_CLEANING_SERVICES
                - LEGAL
                - LEGAL_SERVICES_AND_ATTORNEYS
                - LOCAL_DELIVERY_SERVICE
                - LOCKSMITH
                - LODGING_AND_ACCOMMODATIONS
                - LOTTERY_AND_CONTESTS
                - LUGGAGE_AND_LEATHER_GOODS
                - LUMBER_AND_BUILDING_MATERIALS
                - MAGAZINES
                - MAINTENANCE_AND_REPAIR_SERVICES
                - MAKEUP_AND_COSMETICS
                - MANUAL_CASH_DISBURSEMENTS
                - MASSAGE_PARLORS
                - MEDICAL
                - MEDICAL_AND_PHARMACEUTICAL
                - MEDICAL_CARE
                - MEDICAL_EQUIPMENT_AND_SUPPLIES
                - MEDICAL_SERVICES
                - MEETING_PLANNERS
                - MEMBERSHIP_CLUBS_AND_ORGANIZATIONS
                - MEMBERSHIP_COUNTRY_CLUBS_GOLF
                - MEMORABILIA
                - MEN_AND_BOY_CLOTHING_AND_ACCESSORY_STORES
                - MEN_CLOTHING
                - MERCHANDISE
                - METAPHYSICAL
                - MILITARIA
                - MILITARY_AND_CIVIL_SERVICE_UNIFORMS
                - MISC._AUTOMOTIVE_AIRCRAFT_AND_FARM_EQUIPMENT_DEALERS
                - MISC._GENERAL_MERCHANDISE
                - MISCELLANEOUS_GENERAL_SERVICES
                - MISCELLANEOUS_REPAIR_SHOPS_AND_RELATED_SERVICES
                - MODEL_KITS
                - MONEY_TRANSFER_MEMBER_FINANCIAL_INSTITUTION
                - MONEY_TRANSFER_MERCHANT
                - MOTION_PICTURE_THEATERS
                - MOTOR_FREIGHT_CARRIERS_AND_TRUCKING
                - MOTOR_HOME_AND_RECREATIONAL_VEHICLE_RENTAL
                - MOTOR_HOMES_DEALERS
                - MOTOR_VEHICLE_SUPPLIES_AND_NEW_PARTS
                - MOTORCYCLE_DEALERS
                - MOTORCYCLES
                - MOVIE
                - MOVIE_TICKETS
                - MOVING_AND_STORAGE
                - MULTI_LEVEL_MARKETING
                - MUSIC_CDS_CASSETTES_AND_ALBUMS
                - MUSIC_STORE_INSTRUMENTS_AND_SHEET_MUSIC
                - NETWORKING
                - NEW_AGE
                - NEW_PARTS_AND_SUPPLIES_MOTOR_VEHICLE
                - NEWS_DEALERS_AND_NEWSTANDS
                - NON_DURABLE_GOODS
                - NON_FICTION
                - NON_PROFIT_POLITICAL_AND_RELIGION
                - NONPROFIT
                - NOVELTIES
                - OEM_SOFTWARE
                - OFFICE_SUPPLIES_AND_EQUIPMENT
                - ONLINE_DATING
                - ONLINE_GAMING
                - ONLINE_GAMING_CURRENCY
                - ONLINE_SERVICES
                - OOUTBOUND_TELEMARKETING_MERCH
                - OPHTHALMOLOGISTS_OPTOMETRIST
                - OPTICIANS_AND_DISPENSING
                - ORTHOPEDIC_GOODS_PROSTHETICS
                - OSTEOPATHS
                - OTHER
                - PACKAGE_TOUR_OPERATORS
                - PAINTBALL
                - PAINTS_VARNISHES_AND_SUPPLIES
                - PARKING_LOTS_AND_GARAGES
                - PARTS_AND_ACCESSORIES
                - PAWN_SHOPS
                - PAYCHECK_LENDER_OR_CASH_ADVANCE
                - PERIPHERALS
                - PERSONALIZED_GIFTS
                - PET_SHOPS_PET_FOOD_AND_SUPPLIES
                - PETROLEUM_AND_PETROLEUM_PRODUCTS
                - PETS_AND_ANIMALS
                - PHOTOFINISHING_LABORATORIES_PHOTO_DEVELOPING
                - PHOTOGRAPHIC_STUDIOS_PORTRAITS
                - PHOTOGRAPHY
                - PHYSICAL_GOOD
                - PICTURE_VIDEO_PRODUCTION
                - PIECE_GOODS_NOTIONS_AND_OTHER_DRY_GOODS
                - PLANTS_AND_SEEDS
                - PLUMBING_AND_HEATING_EQUIPMENTS_AND_SUPPLIES
                - POLICE_RELATED_ITEMS
                - POLITICAL_ORGANIZATIONS
                - POSTAL_SERVICES_GOVERNMENT_ONLY
                - POSTERS
                - PREPAID_AND_STORED_VALUE_CARDS
                - PRESCRIPTION_DRUGS
                - PROMOTIONAL_ITEMS
                - PUBLIC_WAREHOUSING_AND_STORAGE
                - PUBLISHING_AND_PRINTING
                - PUBLISHING_SERVICES
                - RADAR_DECTORS
                - RADIO_TELEVISION_AND_STEREO_REPAIR
                - REAL_ESTATE
                - REAL_ESTATE_AGENT
                - REAL_ESTATE_AGENTS_AND_MANAGERS_RENTALS
                - RELIGION_AND_SPIRITUALITY_FOR_PROFIT
                - RELIGIOUS
                - RELIGIOUS_ORGANIZATIONS
                - REMITTANCE
                - RENTAL_PROPERTY_MANAGEMENT
                - RESIDENTIAL
                - RETAIL
                - RETAIL_FINE_JEWELRY_AND_WATCHES
                - REUPHOLSTERY_AND_FURNITURE_REPAIR
                - RINGS
                - ROOFING_SIDING_SHEET_METAL
                - RUGS_AND_CARPETS
                - SCHOOLS_AND_COLLEGES
                - SCIENCE_FICTION
                - SCRAPBOOKING
                - SCULPTURES
                - SECURITIES_BROKERS_AND_DEALERS
                - SECURITY_AND_SURVEILLANCE
                - SECURITY_AND_SURVEILLANCE_EQUIPMENT
                - SECURITY_BROKERS_AND_DEALERS
                - SEMINARS
                - SERVICE_STATIONS
                - SERVICES
                - SEWING_NEEDLEWORK_FABRIC_AND_PIECE_GOODS_STORES
                - SHIPPING_AND_PACKING
                - SHOE_REPAIR_HAT_CLEANING
                - SHOE_STORES
                - SHOES
                - SNOWMOBILE_DEALERS
                - SOFTWARE
                - SPECIALTY_AND_MISC._FOOD_STORES
                - SPECIALTY_CLEANING_POLISHING_AND_SANITATION_PREPARATIONS
                - SPECIALTY_OR_RARE_PETS
                - SPORT_GAMES_AND_TOYS
                - SPORTING_AND_RECREATIONAL_CAMPS
                - SPORTING_GOODS
                - SPORTS_AND_OUTDOORS
                - SPORTS_AND_RECREATION
                - STAMP_AND_COIN
                - STATIONARY_PRINTING_AND_WRITING_PAPER
                - STENOGRAPHIC_AND_SECRETARIAL_SUPPORT_SERVICES
                - STOCKS_BONDS_SECURITIES_AND_RELATED_CERTIFICATES
                - STORED_VALUE_CARDS
                - SUPPLIES
                - SUPPLIES_AND_TOYS
                - SURVEILLANCE_EQUIPMENT
                - SWIMMING_POOLS_AND_SPAS
                - SWIMMING_POOLS_SALES_SUPPLIES_SERVICES
                - TAILORS_AND_ALTERATIONS
                - TAX_PAYMENTS
                - TAX_PAYMENTS_GOVERNMENT_AGENCIES
                - TAXICABS_AND_LIMOUSINES
                - TELECOMMUNICATION_SERVICES
                - TELEPHONE_CARDS
                - TELEPHONE_EQUIPMENT
                - TELEPHONE_SERVICES
                - THEATER
                - TIRE_RETREADING_AND_REPAIR
                - TOLL_OR_BRIDGE_FEES
                - TOOLS_AND_EQUIPMENT
                - TOURIST_ATTRACTIONS_AND_EXHIBITS
                - TOWING_SERVICE
                - TOYS_AND_GAMES
                - TRADE_AND_VOCATIONAL_SCHOOLS
                - TRADEMARK_INFRINGEMENT
                - TRAILER_PARKS_AND_CAMPGROUNDS
                - TRAINING_SERVICES
                - TRANSPORTATION_SERVICES
                - TRAVEL
                - TRUCK_AND_UTILITY_TRAILER_RENTALS
                - TRUCK_STOP
                - TYPESETTING_PLATE_MAKING_AND_RELATED_SERVICES
                - USED_MERCHANDISE_AND_SECONDHAND_STORES
                - USED_PARTS_MOTOR_VEHICLE
                - UTILITIES
                - UTILITIES_ELECTRIC_GAS_WATER_SANITARY
                - VARIETY_STORES
                - VEHICLE_SALES
                - VEHICLE_SERVICE_AND_ACCESSORIES
                - VIDEO_EQUIPMENT
                - VIDEO_GAME_ARCADES_ESTABLISH
                - VIDEO_GAMES_AND_SYSTEMS
                - VIDEO_TAPE_RENTAL_STORES
                - VINTAGE_AND_COLLECTIBLE_VEHICLES
                - VINTAGE_AND_COLLECTIBLES
                - VITAMINS_AND_SUPPLEMENTS
                - VOCATIONAL_AND_TRADE_SCHOOLS
                - WATCH_CLOCK_AND_JEWELRY_REPAIR
                - WEB_HOSTING_AND_DESIGN
                - WELDING_REPAIR
                - WHOLESALE_CLUBS
                - WHOLESALE_FLORIST_SUPPLIERS
                - WHOLESALE_PRESCRIPTION_DRUGS
                - WILDLIFE_PRODUCTS
                - WIRE_TRANSFER
                - WIRE_TRANSFER_AND_MONEY_ORDER
                - WOMEN_ACCESSORY_SPECIALITY
                - WOMEN_CLOTHING
        product_request_POST:
            title: Create Product Request
            description: The create product request details.
            type: object
            properties:
                id:
                    type: string
                    description: The ID of the product. You can specify the SKU for the product. If you omit the ID, the system generates it. System-generated IDs have the `PROD-` prefix.
                    minLength: 6
                    maxLength: 50
                name:
                    type: string
                    description: The product name.
                    minLength: 1
                    maxLength: 127
                description:
                    type: string
                    description: The product description.
                    minLength: 1
                    maxLength: 256
                type:
                    type: string
                    description: The product type. Indicates whether the product is physical or digital goods, or a service.
                    minLength: 1
                    maxLength: 24
                    pattern: ^[A-Z_]+$
                    default: PHYSICAL
                    enum:
                        - PHYSICAL
                        - DIGITAL
                        - SERVICE
                category:
                    $ref: '#/components/schemas/product_category'
                image_url:
                    type: string
                    format: uri
                    minLength: 1
                    maxLength: 2000
                    description: The image URL for the product.
                home_url:
                    type: string
                    format: uri
                    minLength: 1
                    maxLength: 2000
                    description: The home page URL for the product.
            required:
                - name
                - type
        product:
            type: string
            description: The PayPal product for which the customer is onboarded.
            title: Product Name
            minLength: 1
            maxLength: 127
            pattern: ^[0-9A-Z_-]+$
            enum:
                - EXPRESS_CHECKOUT
                - PAYPAL_COMMERCE_PLATFORM_BUSINESS
                - PPPLUS
                - WEBSITE_PAYMENT_PRO
                - PAYMENT_METHODS
                - PPCP
                - ADVANCED_VAULTING
                - IZETTLE
        products.create-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - Input identifier must not use system prefix(PROD-).
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - The value of a field does not conform to the expected format.
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is invalid.
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - A required field is missing.
                            - title: INVALID_STRING_MIN_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MIN_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is too short.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is too long.
        products.patch-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - A required field is missing.
                            - title: UNSUPPORTED_PATCH_OPERATION
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - UNSUPPORTED_PATCH_OPERATION
                                description:
                                    type: string
                                    enum:
                                        - The specified patch operation not supported for this field.
                            - title: INVALID_PATCH_PATH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PATCH_PATH
                                description:
                                    type: string
                                    enum:
                                        - The specified field cannot be patched.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - The value of a field does not conform to the expected format.
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is invalid.
        products.patch-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: USER_ACCOUNT_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - USER_ACCOUNT_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - User account locked or closed.
                            - title: DUPLICATE_RESOURCE_IDENTIFIER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DUPLICATE_RESOURCE_IDENTIFIER
                                description:
                                    type: string
                                    enum:
                                        - Identifier must be unique.
        amount:
            type: object
            title: Amount
            description: The payment amount, with details.
            properties:
                currency:
                    type: string
                    description: The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/). PayPal does not support all currencies.
                total:
                    type: string
                    description: The total amount charged to the payee by the payer. For refunds, represents the amount that the payee refunds to the original payer. Maximum length is 10 characters, which includes:<ul><li>Seven digits before the decimal point.</li><li>The decimal point.</li><li>Two digits after the decimal point.</li><li>For currencies like `JPY` do not support decimals.</li></ul>
                details:
                    type: object
                    title: Payment Amount Details
                    description: The additional details about the payment amount.<blockquote><strong>Note:</strong> For an order authorization or capture, you cannot include the amount <code>details</code> object.</blockquote>
                    properties:
                        subtotal:
                            type: string
                            description: The subtotal amount for the items. If the request includes line items, this property is **required**. Maximum length is 10 characters, which includes:<ul><li>Seven digits before the decimal point.</li><li>The decimal point.</li><li>Two digits after the decimal point.</li></ul><blockquote><strong>Note:</strong> For an order authorization or capture, you cannot include the <code>subtotal</code> parameter.</blockquote>
                        shipping:
                            type: string
                            description: The shipping fee. Maximum length is 10 characters, which includes:<ul><li>Seven digits before the decimal point.</li><li>The decimal point.</li><li>Two digits after the decimal point.</li></ul><blockquote><strong>Note:</strong> For an order authorization or capture, you cannot include the <code>shipping</code> parameter.</blockquote>
                        tax:
                            type: string
                            description: The tax. Maximum length is 10 characters, which includes:<ul><li>Seven digits before the decimal point.</li><li>The decimal point.</li><li>Two digits after the decimal point.</li></ul><blockquote><strong>Note:</strong> For an order authorization or capture, you cannot include the <code>tax</code> parameter.</blockquote>
                        handling_fee:
                            type: string
                            description: The handling fee. Maximum length is 10 characters, which includes:<ul><li>Seven digits before the decimal point.</li><li>The decimal point.</li><li>Two digits after the decimal point.</li></ul>Supported for the PayPal payment method only.<blockquote><strong>Note:</strong> For an order authorization or capture, you cannot include the <code>handling_fee</code> parameter.</blockquote>
                        shipping_discount:
                            type: string
                            description: The shipping fee discount. Maximum length is 10 characters, which includes:<ul><li>Seven digits before the decimal point.</li><li>The decimal point.</li><li>Two digits after the decimal point.</li></ul>Supported for the PayPal payment method only.<blockquote><strong>Note:</strong> For an order authorization or capture, you cannot include the <code>shipping_discount</code> parameter.</blockquote>
                        insurance:
                            type: string
                            description: The insurance fee. Maximum length is 10 characters, which includes:<ul><li>Seven digits before the decimal point.</li><li>The decimal point.</li><li>Two digits after the decimal point.</li></ul>Supported only for the PayPal payment method.<blockquote><strong>Note:</strong> For an order authorization or capture, you cannot include the <code>insurance</code> parameter.</blockquote>
                        gift_wrap:
                            type: string
                            description: The gift wrap fee. Maximum length is 10 characters, which includes:<ul><li>Seven digits before the decimal point.</li><li>The decimal point.</li><li>Two digits after the decimal point.</li></ul><blockquote><strong>Note:</strong> For an order authorization or capture, you cannot include the <code>gift_wrap</code> parameter.</blockquote>
                            deprecated: true
            required:
                - currency
                - total
        payee_display_metadata:
            type: object
            title: Payee Display Metadata
            description: The display-only metadata for the payee.
            properties:
                email:
                    type: string
                    format: email
                    description: The email address for the payer. Maximum length is 127 characters.
                display_phone:
                    type: object
                    title: Display Phone
                    description: The payee's phone number.
                    properties:
                        country_code:
                            type: string
                            description: The [two-character IS0-3166-1 country code](https://developer.paypal.com/docs/integration/direct/rest/country-codes/) of the payee's country.
                        number:
                            type: string
                            description: The in-country phone number, in [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164-201011-I).
                brand_name:
                    type: string
                    description: The payer's business name.
        payee:
            type: object
            title: Payee
            description: The payee who receives the funds and fulfills the order.
            properties:
                email:
                    type: string
                    format: email
                    description: The email address associated with the payee's PayPal account. For an intent of authorize or order, the email address must be associated with a confirmed PayPal business account. For an intent of sale, the email can either:<ul><li>Be associated with a confirmed PayPal personal or business account.</li><li>Not be associated with a PayPal account.</li></ul>
                merchant_id:
                    type: string
                    description: The PayPal account ID for the payee.
        item:
            type: object
            title: Item
            description: The item details.
            properties:
                sku:
                    type: string
                    description: The stock keeping unit (SKU) for the item.
                    maxLength: 127
                name:
                    type: string
                    description: The item name. If this value is greater than the maximum allowed length, the API truncates the string.
                    maxLength: 127
                description:
                    type: string
                    description: The item description. Supported for only the PayPal payment method.
                    maxLength: 127
                quantity:
                    type: string
                    description: The item quantity. Must be a whole number.
                    maxLength: 10
                    pattern: ^[0-9]{0,10}$
                price:
                    type: string
                    description: The item cost. Supports two decimal places.
                    maxLength: 10
                    pattern: ^[0-9]{0,10}(\.[0-9]{0,2})?$
                currency:
                    $ref: '#/components/schemas/currency_code'
                tax:
                    type: string
                    description: The item tax. Supported only for the PayPal payment method.
            required:
                - quantity
                - price
                - currency
        address:
            type: object
            title: Simple Postal Address (Coarse-Grained)
            description: A simple postal address with coarse-grained fields. Do not use for an international address. Use for backward compatibility only. Does not contain phone.
            properties:
                line1:
                    type: string
                    description: The first line of the address. For example, number or street.
                line2:
                    type: string
                    description: The second line of the address. For example, suite or apartment number.
                city:
                    type: string
                    description: The city name.
                state:
                    type: string
                    description: 'The [code](/docs/api/reference/state-codes/) for a US state or the equivalent for other countries. Required for transactions if the address is in one of these countries: [Argentina](/docs/api/reference/state-codes/#argentina), [Brazil](/docs/api/reference/state-codes/#brazil), [Canada](/docs/api/reference/state-codes/#canada), [China](/docs/api/reference/state-codes/#china), [India](/docs/api/reference/state-codes/#india), [Italy](/docs/api/reference/state-codes/#italy), [Japan](/docs/api/reference/state-codes/#japan), [Mexico](/docs/api/reference/state-codes/#mexico), [Thailand](/docs/api/reference/state-codes/#thailand), or [United States](/docs/api/reference/state-codes/#usa). Maximum length is 40 single-byte characters.'
                country_code:
                    $ref: '#/components/schemas/country_code'
                postal_code:
                    type: string
                    description: The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).
            required:
                - line1
                - city
                - country_code
        shipping_address:
            title: Shipping Address
            description: The shipping address details.
            allOf:
                - $ref: '#/components/schemas/address'
                - properties:
                    recipient_name:
                        type: string
                        description: The name of the recipient at this address.
                        maxLength: 127
        currency:
            type: object
            title: Currency
            description: The currency and amount for a financial transaction, such as a balance or payment due.
            properties:
                currency:
                    type: string
                    description: The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/).
                value:
                    type: string
                    description: The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html).
            required:
                - currency
                - value
        partner_fee_details:
            type: object
            title: Partner Fee Details
            description: The partner fee that is collected for the original transaction.
            additionalProperties: false
            properties:
                receiver:
                    description: The partner who receives the partner fee.
                    $ref: '#/components/schemas/payee'
                amount:
                    description: The amount and currency of the partner fee.
                    $ref: '#/components/schemas/currency'
            required:
                - receiver
                - amount
        name_value_pair:
            type: object
            title: Name and Value Pair
            description: The name-and-value pair details.
            properties:
                name:
                    type: string
                    description: The key for the name-and-value pair. You must correlate the value and name types.
                value:
                    type: string
                    description: The value for the name-and-value pair.
            required:
                - name
                - value
        metadata: {}
        capture:
            type: object
            title: Capture
            description: A captured payment.
            allOf:
                - $ref: '#/components/schemas/capture_status'
                - properties:
                    id:
                        description: The PayPal-generated ID for the captured payment.
                        type: string
                        readOnly: true
                    amount:
                        description: The amount for this captured payment.
                        $ref: '#/components/schemas/money'
                        readOnly: true
                    invoice_id:
                        description: The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
                        type: string
                        readOnly: true
                    custom_id:
                        type: string
                        description: The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.
                        maxLength: 127
                    network_transaction_reference:
                        $ref: '#/components/schemas/network_transaction_reference'
                    seller_protection:
                        $ref: '#/components/schemas/seller_protection'
                        readOnly: true
                    final_capture:
                        description: Indicates whether you can make additional captures against the authorized payment. Set to `true` if you do not intend to capture additional payments against the authorization. Set to `false` if you intend to capture additional payments against the authorization.
                        type: boolean
                        default: false
                        readOnly: true
                    seller_receivable_breakdown:
                        $ref: '#/components/schemas/seller_receivable_breakdown'
                        readOnly: true
                    disbursement_mode:
                        $ref: '#/components/schemas/disbursement_mode'
                    links:
                        description: An array of related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                        type: array
                        readOnly: true
                        items:
                            $ref: '#/components/schemas/link_description'
                    processor_response:
                        description: An object that provides additional processor information for a direct credit card transaction.
                        $ref: '#/components/schemas/processor_response'
                - $ref: '#/components/schemas/activity_timestamps'
        refund:
            type: object
            title: Refund
            description: The refund information.
            allOf:
                - $ref: '#/components/schemas/refund_status'
                - properties:
                    id:
                        description: The PayPal-generated ID for the refund.
                        type: string
                        readOnly: true
                    amount:
                        description: The amount that the payee refunded to the payer.
                        $ref: '#/components/schemas/money'
                        readOnly: true
                    invoice_id:
                        description: The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
                        type: string
                        readOnly: true
                    custom_id:
                        type: string
                        description: The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.
                        minLength: 1
                        maxLength: 127
                        pattern: ^[A-Za-z0-9-_.,]*$
                    acquirer_reference_number:
                        type: string
                        description: Reference ID issued for the card transaction. This ID can be used to track the transaction across processors, card brands and issuing banks.
                        minLength: 1
                        maxLength: 36
                        pattern: ^[a-zA-Z0-9]+$
                    note_to_payer:
                        description: The reason for the refund. Appears in both the payer's transaction history and the emails that the payer receives.
                        type: string
                        readOnly: true
                    seller_payable_breakdown:
                        description: The breakdown of the refund.
                        type: object
                        title: Merchant Payable Breakdown
                        properties:
                            gross_amount:
                                description: The amount that the payee refunded to the payer.
                                $ref: '#/components/schemas/money'
                                readOnly: true
                            paypal_fee:
                                description: The PayPal fee that was refunded to the payer in the currency of the transaction. This fee might not match the PayPal fee that the payee paid when the payment was captured.
                                $ref: '#/components/schemas/money'
                                readOnly: true
                            paypal_fee_in_receivable_currency:
                                description: The PayPal fee that was refunded to the payer in the receivable currency. Returned only in cases when the receivable currency is different from transaction currency. Example 'CNY'.
                                $ref: '#/components/schemas/money'
                                readOnly: true
                            net_amount:
                                description: The net amount that the payee's account is debited in the transaction currency. The net amount is calculated as <code>gross_amount</code> minus <code>paypal_fee</code> minus <code>platform_fees</code>.
                                $ref: '#/components/schemas/money'
                                readOnly: true
                            net_amount_in_receivable_currency:
                                description: The net amount that the payee's account is debited in the receivable currency. Returned only in cases when the receivable currency is different from transaction currency. Example 'CNY'.
                                $ref: '#/components/schemas/money'
                                readOnly: true
                            platform_fees:
                                type: array
                                description: An array of platform or partner fees, commissions, or brokerage fees for the refund.
                                maxItems: 1
                                items:
                                    $ref: '#/components/schemas/platform_fee'
                            net_amount_breakdown:
                                type: array
                                description: An array of breakdown values for the net amount. Returned when the currency of the refund is different from the currency of the PayPal account where the payee holds their funds.
                                items:
                                    $ref: '#/components/schemas/net_amount_breakdown_item'
                                readOnly: true
                            total_refunded_amount:
                                description: The total amount refunded from the original capture to date. For example, if a payer makes a $100 purchase and was refunded $20 a week ago and was refunded $30 in this refund, the `gross_amount` is $30 for this refund and the `total_refunded_amount` is $50.
                                $ref: '#/components/schemas/money'
                        readOnly: true
                    payer:
                        description: The details associated with the merchant for this transaction.
                        $ref: '#/components/schemas/payee_base'
                        readOnly: true
                    links:
                        description: An array of related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                        type: array
                        readOnly: true
                        items:
                            $ref: '#/components/schemas/link_description'
                - $ref: '#/components/schemas/activity_timestamps'
        sale:
            type: object
            title: Sale
            description: The sale transaction details.
            properties:
                id:
                    type: string
                    readOnly: true
                    description: The ID of the sale transaction.
                amount:
                    description: The amount to collect.
                    $ref: '#/components/schemas/amount'
                payment_mode:
                    type: string
                    description: The transaction payment mode. Supported only for PayPal payments.
                    readOnly: true
                    enum:
                        - INSTANT_TRANSFER
                        - MANUAL_BANK_TRANSFER
                        - DELAYED_TRANSFER
                        - ECHECK
                state:
                    type: string
                    enum:
                        - completed
                        - partially_refunded
                        - pending
                        - refunded
                        - denied
                    description: The state of the sale transaction.
                    readOnly: true
                reason_code:
                    type: string
                    enum:
                        - CHARGEBACK
                        - GUARANTEE
                        - BUYER_COMPLAINT
                        - REFUND
                        - UNCONFIRMED_SHIPPING_ADDRESS
                        - ECHECK
                        - INTERNATIONAL_WITHDRAWAL
                        - RECEIVING_PREFERENCE_MANDATES_MANUAL_ACTION
                        - PAYMENT_REVIEW
                        - REGULATORY_REVIEW
                        - UNILATERAL
                        - VERIFICATION_REQUIRED
                        - TRANSACTION_APPROVED_AWAITING_FUNDING
                    description: A reason code that describes why the transaction state is pending or reversed. Supported only for PayPal payments.
                    readOnly: true
                protection_eligibility:
                    type: string
                    enum:
                        - ELIGIBLE
                        - PARTIALLY_ELIGIBLE
                        - INELIGIBLE
                    description: The merchant protection level in effect for the transaction. Supported only for PayPal payments.
                    readOnly: true
                protection_eligibility_type:
                    type: string
                    enum:
                        - ITEM_NOT_RECEIVED_ELIGIBLE
                        - UNAUTHORIZED_PAYMENT_ELIGIBLE
                        - ITEM_NOT_RECEIVED_ELIGIBLE,UNAUTHORIZED_PAYMENT_ELIGIBLE
                    description: The merchant protection type in effect for the transaction. Returned only when `protection_eligibility` is `ELIGIBLE` or `PARTIALLY_ELIGIBLE`. Supported only for PayPal payments.
                    readOnly: true
                clearing_time:
                    type: string
                    format: date-time
                    description: The date and time when the PayPal eCheck transaction is expected to clear, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                payment_hold_status:
                    type: string
                    enum:
                        - HELD
                    description: The recipient fund status. Returned only when the fund status is `held`.
                    readOnly: true
                payment_hold_reasons:
                    type: array
                    readOnly: true
                    description: An array of reasons that PayPal holds the recipient fund. Set only if the payment hold status is `HELD`.
                    items:
                        $ref: '#/components/schemas/payment_hold_reason'
                transaction_fee:
                    description: The currency and amount of the transaction fee for this payment. Would not be returned for `pending` transactions where the funds have not been realized in the payee account.
                    readOnly: true
                    $ref: '#/components/schemas/currency'
                receivable_amount:
                    description: The currency and amount of the net that the merchant receives for this transaction in their receivable currency. Returned only in cross-currency use cases where a merchant bills a buyer in a non-primary currency for that buyer.
                    $ref: '#/components/schemas/currency'
                transaction_fee_in_receivable_currency:
                    description: The currency and amount of the PayPal fee for this payment in the receivable currency. Returned only in cases the fee is charged in the receivable currency. Example `CNY`. Would not be returned for `pending` transactions where the funds have not been realized in the payee account.
                    readOnly: true
                    $ref: '#/components/schemas/currency'
                exchange_rate:
                    type: string
                    description: The exchange rate for this transaction. Returned only in cross-currency use cases where a merchant bills a buyer in a non-primary currency for that buyer.
                    readOnly: true
                fmf_details:
                    $ref: '#/components/schemas/fmf_details'
                receipt_id:
                    type: string
                    description: The receipt ID, which is a payment ID number that is returned for guest users to identify the payment.
                    pattern: ^[0-9]{4}-[0-9]{4}-[0-9]{4}-[0-9]{4}$
                    readOnly: true
                parent_payment:
                    type: string
                    description: The ID of the payment on which this transaction is based.
                    readOnly: true
                processor_response:
                    $ref: '#/components/schemas/processor_response'
                billing_agreement_id:
                    type: string
                    description: The ID of the billing agreement. Used as reference to execute this transaction.
                    readOnly: true
                create_time:
                    type: string
                    format: date-time
                    description: The date and time of the sale, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                update_time:
                    type: string
                    format: date-time
                    description: The date and time when the resource was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
            required:
                - id
                - amount
                - state
                - parent_payment
                - create_time
        payment_summary:
            type: object
            title: Payment Summary
            description: The payment summary.
            properties:
                captures:
                    type: array
                    description: An array of captures for a purchase unit. A purchase unit can have zero or more captures.
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/capture'
                refunds:
                    type: array
                    description: An array of refunds for a purchase unit. A purchase unit can have zero or more refunds.
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/refund'
                sales:
                    type: array
                    description: An array of sales for a purchase unit. A purchase unit can have zero or more sales.
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/sale'
                authorizations:
                    type: array
                    description: An array of authorizations for a purchase unit. A purchase unit can have zero or more authorizations.
                    minItems: 1
                    items:
                        description: An authorization for a purchase unit.
                        $ref: '#/components/schemas/sale'
        purchase_unit:
            type: object
            title: Purchase Unit
            description: The purchase unit details. Used to capture required information for the payment contract.
            properties:
                reference_id:
                    type: string
                    description: The API caller-provided external ID for the purchase unit. Required for multiple purchase units when you must update the order through `PATCH`. If you omit this value and the order contains only one purchase unit, PayPal sets this value to `default`. <blockquote><strong>Note:</strong> If there are multiple purchase units, <code>reference_id</code> is required for each purchase unit.</blockquote>
                    minLength: 1
                    maxLength: 256
                amount:
                    $ref: '#/components/schemas/amount_with_breakdown'
                payee:
                    description: The merchant who receives payment for this transaction.
                    $ref: '#/components/schemas/payee'
                payment_instruction:
                    $ref: '#/components/schemas/payment_instruction'
                description:
                    type: string
                    description: The purchase description.
                    minLength: 1
                    maxLength: 127
                custom_id:
                    type: string
                    description: The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.
                    minLength: 1
                    maxLength: 127
                invoice_id:
                    type: string
                    description: The API caller-provided external invoice ID for this order.
                    minLength: 1
                    maxLength: 127
                id:
                    type: string
                    description: The PayPal-generated ID for the purchase unit. This ID appears in both the payer's transaction history and the emails that the payer receives. In addition, this ID is available in transaction and settlement reports that merchants and API callers can use to reconcile transactions. This ID is only available when an order is saved by calling <code>v2/checkout/orders/id/save</code>.
                    minLength: 1
                    maxLength: 19
                soft_descriptor:
                    type: string
                    description: The payment descriptor on account transactions on the customer's credit card statement, that PayPal sends to processors. The maximum length of the soft descriptor information that you can pass in the API field is 22 characters, in the following format:<code>22 - len(PAYPAL * (8)) - len(<var>Descriptor in Payment Receiving Preferences of Merchant account</var> + 1)</code>The PAYPAL prefix uses 8 characters.<br/><br/>The soft descriptor supports the following ASCII characters:<ul><li>Alphanumeric characters</li><li>Dashes</li><li>Asterisks</li><li>Periods (.)</li><li>Spaces</li></ul>For Wallet payments marketplace integrations:<ul><li>The merchant descriptor in the Payment Receiving Preferences must be the marketplace name.</li><li>You can't use the remaining space to show the customer service number.</li><li>The remaining spaces can be a combination of seller name and country.</li></ul><br/>For unbranded payments (Direct Card) marketplace integrations, use a combination of the seller name and phone number.
                    minLength: 1
                    maxLength: 22
                items:
                    type: array
                    description: An array of items that the customer purchases from the merchant.
                    items:
                        description: An item.
                        $ref: '#/components/schemas/item'
                shipping:
                    description: The shipping address and method.
                    $ref: '#/components/schemas/shipping_with_tracking_details'
                supplementary_data:
                    description: Supplementary data about this payment. Merchants and partners can add Level 2 and 3 data to payments to reduce risk and payment processing costs. For more information about processing payments, see <a href="https://developer.paypal.com/docs/checkout/advanced/processing/">checkout</a> or <a href="https://developer.paypal.com/docs/multiparty/checkout/advanced/processing/">multiparty checkout</a>.
                    $ref: '#/components/schemas/supplementary_data'
                payments:
                    description: The comprehensive history of payments for the purchase unit.
                    readOnly: true
                    $ref: '#/components/schemas/payment_collection'
        payment_details:
            type: object
            title: Payment Details
            description: The payment details for the order.
            properties:
                payment_id:
                    type: string
                    description: The payment ID for the order.
                    readOnly: true
                disbursement_mode:
                    type: string
                    description: Indicates whether to disburse the payment instantly or delay the payment.
                    readOnly: true
                    enum:
                        - INSTANT
                        - DELAYED
        order:
            type: object
            title: Order
            description: The order transaction details.
            properties:
                id:
                    type: string
                    readOnly: true
                    description: The ID of the order transaction.
                amount:
                    description: The amount to collect.<blockquote><strong>Note:</strong> For an order authorization, you cannot include amount <code>details</code>.</blockquote>
                    $ref: '#/components/schemas/amount'
                payment_mode:
                    type: string
                    description: The transaction payment mode.
                    readOnly: true
                    enum:
                        - INSTANT_TRANSFER
                        - MANUAL_BANK_TRANSFER
                        - DELAYED_TRANSFER
                        - ECHECK
                state:
                    type: string
                    description: The state of the order transaction.
                    readOnly: true
                    enum:
                        - PENDING
                        - AUTHORIZED
                        - CAPTURED
                        - COMPLETED
                        - VOIDED
                reason_code:
                    type: string
                    description: The reason code that describes why the transaction state is pending or reversed. Supported only for PayPal payments.
                    readOnly: true
                    enum:
                        - PAYER_SHIPPING_UNCONFIRMED
                        - MULTI_CURRENCY
                        - RISK_REVIEW
                        - REGULATORY_REVIEW
                        - VERIFICATION_REQUIRED
                        - ORDER
                        - OTHER
                pending_reason:
                    type: string
                    enum:
                        - payer_shipping_unconfirmed
                        - multi_currency
                        - risk_review
                        - regulatory_review
                        - verification_required
                        - order
                        - other
                    description: Deprecated. The reason code for the pending transaction state. Obsolete. Use `reason_code` instead.
                    readOnly: true
                protection_eligibility:
                    type: string
                    description: The level of seller protection in effect for the transaction.
                    readOnly: true
                    enum:
                        - ELIGIBLE
                        - PARTIALLY_ELIGIBLE
                        - INELIGIBLE
                protection_eligibility_type:
                    type: string
                    description: The kind of seller protection in effect for the transaction. Returned only when the `protection_eligibility` property is `ELIGIBLE` or `PARTIALLY_ELIGIBLE`. Supported only for PayPal payments.
                    readOnly: true
                    enum:
                        - ITEM_NOT_RECEIVED_ELIGIBLE
                        - UNAUTHORIZED_PAYMENT_ELIGIBLE
                        - ITEM_NOT_RECEIVED_ELIGIBLE,UNAUTHORIZED_PAYMENT_ELIGIBLE
                parent_payment:
                    type: string
                    readOnly: true
                    description: The ID of the payment on which this transaction is based.
                fmf_details:
                    $ref: '#/components/schemas/fmf_details'
                create_time:
                    type: string
                    format: date-time
                    description: The date and time when the resource was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                update_time:
                    type: string
                    format: date-time
                    description: The date and time when the resource was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
            required:
                - amount
        error_details-2:
            title: Error Details
            type: object
            description: The error details. Required for client-side `4XX` errors.
            properties:
                field:
                    type: string
                    description: The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors.
                value:
                    type: string
                    description: The value of the field that caused the error.
                location:
                    type: string
                    description: The location of the field that caused the error. Value is `body`, `path`, or `query`.
                    default: body
                issue:
                    type: string
                    description: The unique, fine-grained application-level error code.
                description:
                    type: string
                    description: The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value.
            required:
                - issue
        error:
            type: object
            title: Error
            description: The error details.
            properties:
                name:
                    type: string
                    description: The human-readable, unique name of the error.
                message:
                    type: string
                    description: The message that describes the error.
                debug_id:
                    type: string
                    description: The PayPal internal ID. Used for correlation purposes.
                information_link:
                    type: string
                    description: The information link, or URI, that shows detailed information about this error for the developer.
                    readOnly: true
                details:
                    type: array
                    description: An array of additional details about the error.
                    items:
                        $ref: '#/components/schemas/error_details-2'
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
            required:
                - name
                - message
                - debug_id
        credit_card:
            type: object
            title: Credit Card
            description: Deprecated. The credit card details. You can use this instrument to fund a payment. Use a payment card instead.
            properties:
                number:
                    type: string
                    description: The credit card number. Value is numeric characters only with no spaces or punctuation. Must conform to the modulo and length required by each credit card type. *Redacted in responses.*
                type:
                    type: string
                    description: The credit card type. Value is `visa`, `mastercard`, `discover`, or `amex`. Do not use these lowercase values for display.
                expire_month:
                    type: integer
                    description: The expiration month with no leading zero. Value is from `1` to `12`.
                expire_year:
                    type: integer
                    description: The four-digit expiration year.
                cvv2:
                    type: string
                    description: The three- to four-digit card validation code.
                first_name:
                    type: string
                    description: The card holder's first name.
                last_name:
                    type: string
                    description: The card holder's last name.
                billing_address:
                    $ref: '#/components/schemas/address'
                    description: The billing address for this card.
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
            required:
                - number
                - type
                - expire_month
                - expire_year
        credit_card_token:
            type: object
            title: Credit Card Token
            description: The tokenized credit card details. You can use this instrument to fund a payment.
            properties:
                credit_card_id:
                    type: string
                    description: The ID of credit card that is stored in the PayPal vault.
                    minLength: 1
                    maxLength: 256
                payer_id:
                    type: string
                    description: Deprecated. A unique ID that you can assign and track when you store a credit card in the vault or use a vaulted credit card. This ID can help to avoid unintentional use or misuse of credit cards and can be any value, such as a UUID, user name, or email address. **Required** when you use a vaulted credit card and if a `payer_id` was originally provided when you vaulted the credit card. Use external_customer_id instead.
                    maxLength: 1
                    minLength: 256
                external_customer_id:
                    type: string
                    description: The externally-provided ID of the customer.
                    minLength: 1
                    maxLength: 256
                last4:
                    type: string
                    readOnly: true
                    description: The last four digits of the stored credit card number.
                    minLength: 4
                    maxLength: 4
                type:
                    type: string
                    readOnly: true
                    description: The credit card type. Value is `visa`, `mastercard`, `discover`, or `amex`. Do not use these lowercase values for display.
                    minLength: 1
                    maxLength: 256
                expire_month:
                    type: integer
                    readOnly: true
                    description: The expiration month with no leading zero. Value is from `1` to `12`.
                    minimum: 1
                    maximum: 12
                expire_year:
                    type: string
                    readOnly: true
                    description: The four-digit expiration year.
                    pattern: ^[0-9]{4}$
                    minLength: 4
                    maxLength: 4
            required:
                - credit_card_id
        funding_instrument:
            type: object
            title: Funding Instrument
            description: The funding instrument details. An instance of this schema is valid if and only if it validates against exactly one of these supported properties.
            properties:
                credit_card_token:
                    description: The tokenized credit card details. You can use this instrument to fund a payment.
                    $ref: '#/components/schemas/credit_card_token'
        payer_info:
            type: object
            title: Payer Information
            description: The payer information.
            properties:
                account_id:
                    type: string
                    description: The PayPal` customer account ID.
                    minLength: 1
                    maxLength: 13
                    pattern: ^[a-zA-Z0-9]*$
                email_address:
                    description: The email address of the payer.
                    $ref: '#/components/schemas/email_address'
                phone_number:
                    description: The primary phone number of the payer.
                    $ref: '#/components/schemas/phone'
                address_status:
                    type: string
                    minLength: 1
                    maxLength: 1
                    pattern: ^[N|Y]$
                    description: The address status of the payer. Value is either:<ul><li><code>Y</code>. Verified.</li><li><code>N</code>. Not verified.</li></ul>
                payer_status:
                    type: string
                    minLength: 1
                    maxLength: 1
                    pattern: ^[N|Y]$
                    description: The status of the payer. Value is `Y` or `N`.
                payer_name:
                    description: The payer name.
                    $ref: '#/components/schemas/name'
                country_code:
                    description: The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region of the payer.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
                    $ref: '#/components/schemas/country_code'
                address:
                    description: The payer address.
                    $ref: '#/components/schemas/address'
        pay_order_request:
            type: object
            title: Execute Order
            description: An execute order request.
            required:
                - disbursement_mode
            properties:
                disbursement_mode:
                    type: string
                    description: Indicates whether to disburse money instantly or later.
                    enum:
                        - INSTANT
                        - DELAYED
                payer:
                    description: The source of the funds for this payment. Either a PayPal account or a credit card.
                    $ref: '#/components/schemas/payer'
        pay_order_response:
            type: object
            title: Pay Order Response
            description: A pay order response.
            properties:
                order_id:
                    type: string
                    description: The ID of the order.
                    readOnly: true
                status:
                    type: string
                    description: The status of the order.
                    readOnly: true
                    enum:
                        - APPROVED
                        - CANCELED
                        - COMPLETED
                        - CREATED
                        - EXPIRED
                        - FAILED
                        - IN_PROGRESS
                        - PARTIALLY_COMPLETED
                        - SUBMITTED
                intent:
                    type: string
                    description: The intent.
                    enum:
                        - SALE
                        - AUTHORIZE
                payer_info:
                    description: The payer information.
                    $ref: '#/components/schemas/payer_info'
                purchase_units:
                    type: array
                    description: An array of purchase units. Each purchase unit establishes a contract between a customer and merchant.
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/purchase_unit'
                create_time:
                    type: string
                    format: date-time
                    description: The date and time when the resource was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                update_time:
                    type: string
                    format: date-time
                    description: The date and time when the resource was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links).
                    readOnly: true
                    items:
                        readOnly: true
                        $ref: '#/components/schemas/link_description'
        checkout_payment_intent:
            type: string
            title: Checkout Payment Intent
            description: The intent to either capture payment immediately or authorize a payment for an order after order creation.
            enum:
                - CAPTURE
                - AUTHORIZE
        amount_breakdown:
            type: object
            description: The breakdown of the amount. Breakdown provides details such as total item amount, total tax amount, shipping, handling, insurance, and discounts, if any.
            title: Amount Breakdown
            properties:
                item_total:
                    description: The subtotal for all items. Required if the request includes `purchase_units[].items[].unit_amount`. Must equal the sum of `(items[].unit_amount * items[].quantity)` for all items. <code>item_total.value</code> can not be a negative number.
                    $ref: '#/components/schemas/money'
                shipping:
                    description: The shipping fee for all items within a given `purchase_unit`. <code>shipping.value</code> can not be a negative number.
                    $ref: '#/components/schemas/money'
                handling:
                    description: The handling fee for all items within a given `purchase_unit`. <code>handling.value</code> can not be a negative number.
                    $ref: '#/components/schemas/money'
                tax_total:
                    description: The total tax for all items. Required if the request includes `purchase_units.items.tax`. Must equal the sum of `(items[].tax * items[].quantity)` for all items. <code>tax_total.value</code> can not be a negative number.
                    $ref: '#/components/schemas/money'
                insurance:
                    description: The insurance fee for all items within a given `purchase_unit`. <code>insurance.value</code> can not be a negative number.
                    $ref: '#/components/schemas/money'
                shipping_discount:
                    description: The shipping discount for all items within a given `purchase_unit`. <code>shipping_discount.value</code> can not be a negative number.
                    $ref: '#/components/schemas/money'
                discount:
                    description: The discount for all items within a given `purchase_unit`. <code>discount.value</code> can not be a negative number.
                    $ref: '#/components/schemas/money'
        payee_base:
            type: object
            title: Merchant Base
            description: The details for the merchant who receives the funds and fulfills the order. The merchant is also known as the payee.
            properties:
                email_address:
                    description: The email address of merchant.
                    $ref: '#/components/schemas/email'
                merchant_id:
                    description: The encrypted PayPal account ID of the merchant.
                    $ref: '#/components/schemas/account_id'
        platform_fee:
            type: object
            title: Platform Fee
            description: The platform or partner fee, commission, or brokerage fee that is associated with the transaction. Not a separate or isolated transaction leg from the external perspective. The platform fee is limited in scope and is always associated with the original payment for the purchase unit.
            properties:
                amount:
                    description: The fee for this transaction.
                    $ref: '#/components/schemas/money'
                payee:
                    description: The recipient of the fee for this transaction. If you omit this value, the default is the API caller.
                    $ref: '#/components/schemas/payee_base'
            required:
                - amount
        disbursement_mode:
            type: string
            title: Disbursement Mode
            description: The funds that are held on behalf of the merchant.
            default: INSTANT
            minLength: 1
            maxLength: 16
            pattern: ^[A-Z_]+$
            enum:
                - INSTANT
                - DELAYED
        payment_instruction:
            type: object
            title: Payment Instruction
            description: Any additional payment instructions to be consider during payment processing. This processing instruction is applicable for Capturing an order or Authorizing an Order.
            properties:
                platform_fees:
                    type: array
                    description: An array of various fees, commissions, tips, or donations. This field is only applicable to merchants that been enabled for PayPal Commerce Platform for Marketplaces and Platforms capability.
                    maxItems: 1
                    items:
                        $ref: '#/components/schemas/platform_fee'
                disbursement_mode:
                    description: The funds that are held payee by the marketplace/platform. This field is only applicable to merchants that been enabled for PayPal Commerce Platform for Marketplaces and Platforms capability.
                    $ref: '#/components/schemas/disbursement_mode'
                payee_pricing_tier_id:
                    type: string
                    description: This field is only enabled for selected merchants/partners to use and provides the ability to trigger a specific pricing rate/plan for a payment transaction. The list of eligible 'payee_pricing_tier_id' would be provided to you by your Account Manager. Specifying values other than the one provided to you by your account manager would result in an error.
                    minLength: 1
                    maxLength: 20
                    pattern: ^.*$
                payee_receivable_fx_rate_id:
                    type: string
                    description: FX identifier generated returned by PayPal to be used for payment processing in order to honor FX rate (for eligible integrations) to be used when amount is settled/received into the payee account.
                    maxLength: 4000
                    minLength: 1
                    pattern: ^.*$
        shipping_type:
            type: string
            title: Shipping Type
            description: A classification for the method of purchase fulfillment.
            enum:
                - SHIPPING
                - PICKUP
                - PICKUP_IN_STORE
                - PICKUP_FROM_PERSON
        shipping_option:
            type: object
            title: Shipping Option
            description: The options that the payee or merchant offers to the payer to ship or pick up their items.
            properties:
                id:
                    type: string
                    description: A unique ID that identifies a payer-selected shipping option.
                    maxLength: 127
                label:
                    type: string
                    description: A description that the payer sees, which helps them choose an appropriate shipping option. For example, `Free Shipping`, `USPS Priority Shipping`, `Exp├⌐dition prioritaire USPS`, or `USPS y┼ìuxi─ün f─ü hu├▓`. Localize this description to the payer's locale.
                    maxLength: 127
                type:
                    description: A classification for the method of purchase fulfillment.
                    $ref: '#/components/schemas/shipping_type'
                amount:
                    description: The shipping cost for the selected option.
                    $ref: '#/components/schemas/money'
                selected:
                    type: boolean
                    description: If the API request sets `selected = true`, it represents the shipping option that the payee or merchant expects to be pre-selected for the payer when they first view the `shipping.options` in the PayPal Checkout experience. As part of the response if a `shipping.option` contains `selected=true`, it represents the shipping option that the payer selected during the course of checkout with PayPal. Only one `shipping.option` can be set to `selected=true`.
            required:
                - id
                - label
                - selected
        level_2_card_processing_data:
            type: object
            title: Level 2 Card Processing Data
            description: The level 2 card processing data collections. If your merchant account has been configured for Level 2 processing this field will be passed to the processor on your behalf. Please contact your PayPal Technical Account Manager to define level 2 data for your business.
            properties:
                invoice_id:
                    type: string
                    description: Use this field to pass a purchase identification value of up to 12 ASCII characters for AIB and 17 ASCII characters for all other processors.
                    minLength: 1
                    maxLength: 17
                    pattern: ^[\wΓÇÿ\-.,":;\!?]*$
                tax_total:
                    description: "Use this field to break down the amount of tax included in the total purchase amount. The value provided here will not add to the total purchase amount. The value can't be negative, and in most cases, it must be greater than zero in order to qualify for lower interchange rates. \n Value, by country, is:\n\n    UK. A county.\n    US. A state.\n    Canada. A province.\n    Japan. A prefecture.\n    Switzerland. A kanton.\n"
                    $ref: '#/components/schemas/money'
        line_item:
            type: object
            title: Lineitem
            description: The line items for this purchase. If your merchant account has been configured for Level 3 processing this field will be passed to the processor on your behalf.
            allOf:
                - $ref: '#/components/schemas/item'
                - properties:
                    commodity_code:
                        type: string
                        description: Code used to classify items purchased and track the total amount spent across various categories of products and services. Different corporate purchasing organizations may use different standards, but the United Nations Standard Products and Services Code (UNSPSC) is frequently used.
                        minLength: 1
                        maxLength: 12
                        pattern: ^[a-zA-Z0-9_'.-]*$
                    discount_amount:
                        description: Use this field to break down the discount amount included in the total purchase amount. The value provided here will not add to the total purchase amount. The value cannot be negative.
                        $ref: '#/components/schemas/money'
                    total_amount:
                        description: The subtotal for all items. Must equal the sum of (items[].unit_amount * items[].quantity) for all items. item_total.value can not be a negative number.
                        $ref: '#/components/schemas/money'
                    unit_of_measure:
                        type: string
                        description: 'Unit of measure is a standard used to express the magnitude of a quantity in international trade. Most commonly used (but not limited to) examples are: Acre (ACR), Ampere (AMP), Centigram (CGM), Centimetre (CMT), Cubic inch (INQ), Cubic metre (MTQ), Fluid ounce (OZA), Foot (FOT), Hour (HUR), Item (ITM), Kilogram (KGM), Kilometre (KMT), Kilowatt (KWT), Liquid gallon (GLL), Liter (LTR), Pounds (LBS), Square foot (FTK).'
                        minLength: 1
                        maxLength: 12
                        pattern: ^[a-zA-Z0-9_'.-]*$
        level_3_card_processing_data:
            type: object
            title: Level 3 Card Processing Data
            description: The level 3 card processing data collections, If your merchant account has been configured for Level 3 processing this field will be passed to the processor on your behalf. Please contact your PayPal Technical Account Manager to define level 3 data for your business.
            properties:
                shipping_amount:
                    description: Use this field to break down the shipping cost included in the total purchase amount. The value provided here will not add to the total purchase amount. The value cannot be negative.
                    $ref: '#/components/schemas/money'
                duty_amount:
                    description: Use this field to break down the duty amount included in the total purchase amount. The value provided here will not add to the total purchase amount. The value cannot be negative.
                    $ref: '#/components/schemas/money'
                discount_amount:
                    description: Use this field to break down the discount amount included in the total purchase amount. The value provided here will not add to the total purchase amount. The value cannot be negative.
                    $ref: '#/components/schemas/money'
                shipping_address:
                    description: The address of the person to whom to ship the items. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties.
                    $ref: '#/components/schemas/address_portable'
                ships_from_postal_code:
                    type: string
                    description: Use this field to specify the postal code of the shipping location.
                    minLength: 1
                    maxLength: 60
                    pattern: ^[a-zA-Z0-9_'.-]*$
                line_items:
                    type: array
                    description: A list of the items that were purchased with this payment. If your merchant account has been configured for Level 3 processing this field will be passed to the processor on your behalf.
                    minItems: 1
                    maxItems: 100
                    items:
                        $ref: '#/components/schemas/line_item'
        card_supplementary_data:
            type: object
            title: Card Supplementary Data
            description: Merchants and partners can add Level 2 and 3 data to payments to reduce risk and payment processing costs. For more information about processing payments, see <a href="https://developer.paypal.com/docs/checkout/advanced/processing/">checkout</a> or <a href="https://developer.paypal.com/docs/multiparty/checkout/advanced/processing/">multiparty checkout</a>.
            properties:
                level_2:
                    $ref: '#/components/schemas/level_2_card_processing_data'
                level_3:
                    $ref: '#/components/schemas/level_3_card_processing_data'
        supplementary_data:
            title: Supplementary Data
            type: object
            description: The supplementary data.
            properties:
                related_ids:
                    description: Identifiers related to a specific resource.
                    readOnly: true
                    $ref: '#/components/schemas/related_ids'
        purchase_unit_request:
            type: object
            title: Purchase Unit Request
            description: The purchase unit request. Includes required information for the payment contract.
            properties:
                reference_id:
                    type: string
                    description: The API caller-provided external ID for the purchase unit. Required for multiple purchase units when you must update the order through `PATCH`. If you omit this value and the order contains only one purchase unit, PayPal sets this value to `default`.
                    minLength: 1
                    maxLength: 256
                amount:
                    description: The total order amount with an optional breakdown that provides details, such as the total item amount, total tax amount, shipping, handling, insurance, and discounts, if any.<br/>If you specify `amount.breakdown`, the amount equals `item_total` plus `tax_total` plus `shipping` plus `handling` plus `insurance` minus `shipping_discount` minus discount.<br/>The amount must be a positive number. The `amount.value` field supports up to 15 digits preceding the decimal. For a list of supported currencies, decimal precision, and maximum charge amount, see the PayPal REST APIs <a href="https://developer.paypal.com/api/rest/reference/currency-codes/">Currency Codes</a>.
                    $ref: '#/components/schemas/amount_with_breakdown'
                payee:
                    description: The merchant who receives payment for this transaction.
                    $ref: '#/components/schemas/payee'
                payment_instruction:
                    $ref: '#/components/schemas/payment_instruction'
                description:
                    type: string
                    description: The purchase description. The maximum length of the character is dependent on the type of characters used. The character length is specified assuming a US ASCII character. Depending on type of character; (e.g. accented character, Japanese characters) the number of characters that that can be specified as input might not equal the permissible max length.
                    minLength: 1
                    maxLength: 127
                custom_id:
                    type: string
                    description: The API caller-provided external ID. Used to reconcile client transactions with PayPal transactions. Appears in transaction and settlement reports but is not visible to the payer.
                    minLength: 1
                    maxLength: 127
                invoice_id:
                    type: string
                    description: The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
                    minLength: 1
                    maxLength: 127
                soft_descriptor:
                    type: string
                    description: 'The soft descriptor is the dynamic text used to construct the statement descriptor that appears on a payer''s card statement.<br><br>If an Order is paid using the "PayPal Wallet", the statement descriptor will appear in following format on the payer''s card statement: <code><var>PAYPAL_prefix</var>+(space)+<var>merchant_descriptor</var>+(space)+ <var>soft_descriptor</var></code><blockquote><strong>Note:</strong> The merchant descriptor is the descriptor of the merchantΓÇÖs payment receiving preferences which can be seen by logging into the merchant account https://www.sandbox.paypal.com/businessprofile/settings/info/edit</blockquote>The <code>PAYPAL</code> prefix uses 8 characters. Only the first 22 characters will be displayed in the statement. <br>For example, if:<ul><li>The PayPal prefix toggle is <code>PAYPAL *</code>.</li><li>The merchant descriptor in the profile is <code>Janes Gift</code>.</li><li>The soft descriptor is <code>800-123-1234</code>.</li></ul>Then, the statement descriptor on the card is <code>PAYPAL * Janes Gift 80</code>.'
                    minLength: 1
                    maxLength: 22
                items:
                    type: array
                    description: An array of items that the customer purchases from the merchant.
                    items:
                        description: The item.
                        $ref: '#/components/schemas/item'
                shipping:
                    description: The name and address of the person to whom to ship the items.
                    $ref: '#/components/schemas/shipping_detail'
                supplementary_data:
                    description: Contains Supplementary Data.
                    $ref: '#/components/schemas/supplementary_data'
            required:
                - amount
        instrument_id:
            type: string
            description: The identifier of the instrument.
            minLength: 1
            maxLength: 256
            pattern: ^[A-Za-z0-9-_.+=]+$
        card_type:
            type: string
            title: Card Type
            description: Type of card. i.e Credit, Debit and so on.
            minLength: 1
            maxLength: 255
            pattern: ^[A-Z_]+$
            enum:
                - CREDIT
                - DEBIT
                - PREPAID
                - STORE
                - UNKNOWN
        merchant_partner_customer_id:
            type: string
            description: The unique ID for a customer generated by PayPal.
            minLength: 1
            maxLength: 22
            pattern: ^[0-9a-zA-Z_-]+$
        customer:
            type: object
            title: Customer Request
            description: Customer in merchant's or partner's system of records.
            properties:
                id:
                    description: The unique ID for a customer in merchant's or partner's system of records.
                    $ref: '#/components/schemas/merchant_partner_customer_id'
        store_in_vault_instruction:
            type: string
            description: Defines how and when the payment source gets vaulted.
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            enum:
                - ON_SUCCESS
        vault_instruction_base:
            type: object
            title: Base vault Instruction parameters
            description: Basic vault instruction specification that can be extended by specific payment sources that supports vaulting.
            properties:
                store_in_vault:
                    $ref: '#/components/schemas/store_in_vault_instruction'
        card_attributes:
            type: object
            title: Card Attributes
            description: Additional attributes associated with the use of this card.
            properties:
                customer:
                    $ref: '#/components/schemas/customer'
                vault:
                    description: Instruction to vault the card based on the specified strategy.
                    $ref: '#/components/schemas/vault_instruction_base'
        vault_id:
            type: string
            description: The PayPal-generated ID for the vault token.
            minLength: 1
            maxLength: 36
            pattern: ^[0-9a-zA-Z_-]+$
        payment_initiator:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            description: The person or party who initiated or triggered the payment.
            enum:
                - CUSTOMER
                - MERCHANT
        stored_payment_source_payment_type:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            description: Indicates the type of the stored payment_source payment.
            enum:
                - ONE_TIME
                - RECURRING
                - UNSCHEDULED
        stored_payment_source_usage_type:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            default: DERIVED
            description: Indicates if this is a `first` or `subsequent` payment using a stored payment source (also referred to as stored credential or card on file).
            enum:
                - FIRST
                - SUBSEQUENT
                - DERIVED
        network_transaction_reference:
            type: object
            title: Network Transaction Reference
            description: Reference values used by the card network to identify a transaction.
            properties:
                id:
                    type: string
                    minLength: 9
                    maxLength: 36
                    pattern: ^[a-zA-Z0-9-]+$
                    description: Transaction reference id returned by the scheme. For Visa and Amex, this is the "Tran id" field in response. For MasterCard, this is the "BankNet reference id" field in response. For Discover, this is the "NRID" field in response. The pattern we expect for this field from Visa/Amex/CB/Discover is numeric, Mastercard/BNPP is alphanumeric and Paysecure is alphanumeric with special character -.
                date:
                    type: string
                    minLength: 4
                    maxLength: 4
                    pattern: ^[0-9]+$
                    description: The date that the transaction was authorized by the scheme. This field may not be returned for all networks. MasterCard refers to this field as "BankNet reference date.
                network:
                    description: Name of the card network through which the transaction was routed.
                    $ref: '#/components/schemas/card_brand'
                acquirer_reference_number:
                    type: string
                    description: Reference ID issued for the card transaction. This ID can be used to track the transaction across processors, card brands and issuing banks.
                    minLength: 1
                    maxLength: 36
                    pattern: ^[a-zA-Z0-9]+$
            required:
                - id
        card_stored_credential:
            type: object
            title: Card Stored Credential
            description: Provides additional details to process a payment using a `card` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).<br/>Parameter compatibility:<br/><ul><li>`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`.</li><li>Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request.</li></ul>
            properties:
                payment_initiator:
                    $ref: '#/components/schemas/payment_initiator'
                payment_type:
                    $ref: '#/components/schemas/stored_payment_source_payment_type'
                usage:
                    $ref: '#/components/schemas/stored_payment_source_usage_type'
                previous_network_transaction_reference:
                    $ref: '#/components/schemas/network_transaction_reference'
            required:
                - payment_initiator
                - payment_type
        eci_flag:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            description: Electronic Commerce Indicator (ECI). The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the Gateway/Processor.
            enum:
                - MASTERCARD_NON_3D_SECURE_TRANSACTION
                - MASTERCARD_ATTEMPTED_AUTHENTICATION_TRANSACTION
                - MASTERCARD_FULLY_AUTHENTICATED_TRANSACTION
                - FULLY_AUTHENTICATED_TRANSACTION
                - ATTEMPTED_AUTHENTICATION_TRANSACTION
                - NON_3D_SECURE_TRANSACTION
        network_token_request:
            type: object
            title: Network Token
            description: The Third Party Network token used to fund a payment.
            properties:
                number:
                    type: string
                    description: Third party network token number.
                    pattern: ^[0-9]{13,19}$
                    minLength: 13
                    maxLength: 19
                expiry:
                    description: The card expiration year and month, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_year_month'
                cryptogram:
                    type: string
                    description: An Encrypted one-time use value that's sent along with Network Token. This field is not required to be present for recurring transactions.
                    pattern: ^.*$
                    minLength: 28
                    maxLength: 32
                eci_flag:
                    $ref: '#/components/schemas/eci_flag'
                token_requestor_id:
                    type: string
                    description: A TRID, or a Token Requestor ID, is an identifier used by merchants to request network tokens from card networks. A TRID is a precursor to obtaining a network token for a credit card primary account number (PAN), and will aid in enabling secure card on file (COF) payments and reducing fraud.
                    pattern: ^[0-9A-Z_]+$
                    minLength: 1
                    maxLength: 11
            required:
                - number
                - expiry
        url:
            type: string
            description: Describes the URL.
            format: uri
        card_experience_context:
            type: object
            title: Card Experience Context
            description: Customizes the payer experience during the 3DS Approval for payment.
            properties:
                return_url:
                    description: The URL where the customer will be redirected upon successfully completing the 3DS challenge.
                    type: string
                    minLength: 10
                    maxLength: 4000
                    format: uri
                    $ref: '#/components/schemas/url'
                cancel_url:
                    description: The URL where the customer will be redirected upon cancelling the 3DS challenge.
                    type: string
                    minLength: 10
                    maxLength: 4000
                    format: uri
                    $ref: '#/components/schemas/url'
        card_request:
            title: Card Request
            description: A Resource representing a request to vault a Card.
            allOf:
                - $ref: '#/components/schemas/card'
                - properties:
                    verification_method:
                        description: The API caller can opt in to verify the payment token through PayPal offered verification services (e.g. Smart Dollar Auth, 3DS).
                        $ref: '#/components/schemas/card_verification_method'
                    experience_context:
                        $ref: '#/components/schemas/experience_context'
        token:
            type: object
            title: Token
            description: The tokenized payment source to fund a payment.
            properties:
                id:
                    type: string
                    description: The PayPal-generated ID for the token.
                    minLength: 1
                    maxLength: 255
                type:
                    type: string
                    description: The tokenization method that generated the ID.
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_-]+$
                    enum:
                        - BILLING_AGREEMENT
            required:
                - id
                - type
        name-2:
            type: object
            title: Name
            description: The name of the party.
            properties:
                prefix:
                    type: string
                    description: The prefix, or title, to the party's name.
                    maxLength: 140
                given_name:
                    type: string
                    description: When the party is a person, the party's given, or first, name.
                    maxLength: 140
                surname:
                    type: string
                    description: When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.
                    maxLength: 140
                middle_name:
                    type: string
                    description: When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name.
                    maxLength: 140
                suffix:
                    type: string
                    description: The suffix for the party's name.
                    maxLength: 140
                full_name:
                    type: string
                    description: When the party is a person, the party's full name.
                    maxLength: 300
        country_code-2:
            type: string
            description: The [two-character ISO 3166-1 code](/docs/integration/direct/rest/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
            format: ppaas_common_country_code_v2
            maxLength: 2
            minLength: 2
            pattern: ^([A-Z]{2}|C2)$
        address_portable-2:
            type: object
            title: Portable Postal Address (Medium-Grained)
            description: 'The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).'
            properties:
                address_line_1:
                    type: string
                    description: The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.
                    maxLength: 300
                address_line_2:
                    type: string
                    description: The second line of the address. For example, suite or apartment number.
                    maxLength: 300
                address_line_3:
                    type: string
                    description: The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.
                    maxLength: 100
                admin_area_4:
                    type: string
                    description: The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:<ul><li>The postal sorting code for Guernsey and many French territories, such as French Guiana.</li><li>The fine-grained administrative levels in China.</li></ul>
                    maxLength: 100
                admin_area_3:
                    type: string
                    description: A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:<ul><li>Brazil. Suburb, bairro, or neighborhood.</li><li>India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</li></ul>
                    maxLength: 100
                admin_area_2:
                    type: string
                    description: A city, town, or village. Smaller than `admin_area_level_1`.
                    maxLength: 120
                admin_area_1:
                    type: string
                    description: The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>
                    maxLength: 300
                postal_code:
                    type: string
                    description: The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).
                    maxLength: 60
                country_code:
                    $ref: '#/components/schemas/country_code-2'
                address_details:
                    type: object
                    title: Address Details
                    description: The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.<br/>For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.
                    properties:
                        street_number:
                            type: string
                            description: The street number.
                            maxLength: 100
                        street_name:
                            type: string
                            description: The street name. Just `Drury` in `Drury Lane`.
                            maxLength: 100
                        street_type:
                            type: string
                            description: The street type. For example, avenue, boulevard, road, or expressway.
                            maxLength: 100
                        delivery_service:
                            type: string
                            description: The delivery service. Post office box, bag number, or post office name.
                            maxLength: 100
                        building_name:
                            type: string
                            description: A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, <code>Craven House</code>.
                            maxLength: 100
                        sub_building:
                            type: string
                            description: The first-order entity below a named building or location that represents the sub-premise. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.
                            maxLength: 100
            required:
                - country_code
        paypal_wallet_customer:
            type: object
            title: Customer information based on PayPal's system of record
            description: The details about a customer in PayPal's system of record.
            allOf:
                - $ref: '#/components/schemas/customer'
                - {}
        vault_owner_id: {}
        vault_paypal_wallet_base:
            type: object
            title: Vaulted PayPal Wallet Common Attributes
            description: Resource consolidating common request and response attributes for vaulting PayPal Wallet.
            allOf:
                - $ref: '#/components/schemas/vault_instruction_base'
                - properties:
                    description:
                        type: string
                        description: The description displayed to PayPal consumer on the approval flow for PayPal, as well as on the PayPal payment token management experience on PayPal.com.
                        minLength: 1
                        maxLength: 128
                    usage_pattern:
                        type: string
                        description: Expected business/pricing model for the billing agreement.
                        minLength: 1
                        maxLength: 30
                        enum:
                            - IMMEDIATE
                            - DEFERRED
                            - RECURRING_PREPAID
                            - RECURRING_POSTPAID
                            - THRESHOLD_PREPAID
                            - THRESHOLD_POSTPAID
                    shipping:
                        description: The shipping address for the Payer.
                        $ref: '#/components/schemas/shipping_detail'
                    usage_type:
                        type: string
                        description: The usage type associated with the PayPal payment token.
                        minLength: 1
                        maxLength: 255
                        pattern: ^[0-9A-Z_]+$
                        enum:
                            - MERCHANT
                            - PLATFORM
                    owner_id:
                        $ref: '#/components/schemas/vault_owner_id'
                    customer_type:
                        type: string
                        description: The customer type associated with the PayPal payment token. This is to indicate whether the customer acting on the merchant / platform is either a business or a consumer.
                        minLength: 1
                        maxLength: 255
                        pattern: ^[0-9A-Z_]+$
                        default: CONSUMER
                        enum:
                            - CONSUMER
                            - BUSINESS
                    permit_multiple_payment_tokens:
                        type: boolean
                        description: Create multiple payment tokens for the same payer, merchant/platform combination. Use this when the customer has not logged in at merchant/platform. The payment token thus generated, can then also be used to create the customer account at merchant/platform. Use this also when multiple payment tokens are required for the same payer, different customer at merchant/platform. This helps to identify customers distinctly even though they may share the same PayPal account. This only applies to PayPal payment source.
                        default: false
            required:
                - usage_type
        paypal_wallet_attributes:
            type: object
            title: PayPal Wallet Attributes
            description: Additional attributes associated with the use of this PayPal Wallet.
            properties:
                customer:
                    $ref: '#/components/schemas/paypal_wallet_customer'
                vault:
                    description: Attributes used to provide the instructions during vaulting of the PayPal Wallet.
                    $ref: '#/components/schemas/vault_paypal_wallet_base'
        paypal_wallet_experience_context:
            type: object
            title: PayPal Wallet Experience Context
            description: Customizes the payer experience during the approval process for payment with PayPal.<blockquote><strong>Note:</strong> Partners and Marketplaces might configure <code>brand_name</code> and <code>shipping_preference</code> during partner account setup, which overrides the request values.</blockquote>
            properties:
                brand_name:
                    type: string
                    description: The label that overrides the business name in the PayPal account on the PayPal site. The pattern is defined by an external party and supports Unicode.
                    minLength: 1
                    maxLength: 127
                    pattern: ^.*$
                locale:
                    description: The BCP 47-formatted locale of pages that the PayPal payment experience shows. PayPal supports a five-character code. For example, `da-DK`, `he-IL`, `id-ID`, `ja-JP`, `no-NO`, `pt-BR`, `ru-RU`, `sv-SE`, `th-TH`, `zh-CN`, `zh-HK`, or `zh-TW`.
                    $ref: '#/components/schemas/language'
                shipping_preference:
                    type: string
                    description: The location from which the shipping address is derived.
                    minLength: 1
                    maxLength: 24
                    pattern: ^[A-Z_]+$
                    default: GET_FROM_FILE
                    enum:
                        - GET_FROM_FILE
                        - NO_SHIPPING
                        - SET_PROVIDED_ADDRESS
                return_url:
                    description: The URL where the customer will be redirected upon approving a payment.
                    format: uri
                    $ref: '#/components/schemas/url'
                cancel_url:
                    description: The URL where the customer will be redirected upon cancelling the payment approval.
                    format: uri
                    $ref: '#/components/schemas/url'
                landing_page:
                    type: string
                    description: The type of landing page to show on the PayPal site for customer checkout.
                    default: NO_PREFERENCE
                    minLength: 1
                    maxLength: 13
                    pattern: ^[0-9A-Z_]+$
                    enum:
                        - LOGIN
                        - GUEST_CHECKOUT
                        - NO_PREFERENCE
                user_action:
                    type: string
                    description: Configures a <strong>Continue</strong> or <strong>Pay Now</strong> checkout flow.
                    default: CONTINUE
                    minLength: 1
                    maxLength: 8
                    pattern: ^[0-9A-Z_]+$
                    enum:
                        - CONTINUE
                        - PAY_NOW
                payment_method_preference:
                    type: string
                    description: The merchant-preferred payment methods.
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    default: UNRESTRICTED
                    enum:
                        - UNRESTRICTED
                        - IMMEDIATE_PAYMENT_REQUIRED
        billing_agreement_id:
            type: string
            description: The PayPal billing agreement ID. References an approved recurring payment for goods or services.
            minLength: 2
            maxLength: 128
            pattern: ^[a-zA-Z0-9-]+$
        paypal_wallet:
            type: object
            title: PayPal Wallet
            description: A resource that identifies a PayPal Wallet is used for payment.
            properties:
                vault_id:
                    description: The PayPal-generated ID for the payment_source stored within the Vault.
                    $ref: '#/components/schemas/vault_id'
                email_address:
                    description: The email address of the PayPal account holder.
                    $ref: '#/components/schemas/email'
                name:
                    description: The name of the PayPal account holder. Supports only the `given_name` and `surname` properties.
                    $ref: '#/components/schemas/name-2'
                phone:
                    description: The phone number of the customer. Available only when you enable the **Contact Telephone Number** option in the <a href="https://www.paypal.com/cgi-bin/customerprofileweb?cmd=_profile-website-payments">**Profile & Settings**</a> for the merchant's PayPal account. The `phone.phone_number` supports only `national_number`.
                    $ref: '#/components/schemas/phone_with_type'
                birth_date:
                    description: The birth date of the PayPal account holder in `YYYY-MM-DD` format.
                    $ref: '#/components/schemas/date_no_time'
                tax_info:
                    description: The tax information of the PayPal account holder. Required only for Brazilian PayPal account holder's. Both `tax_id` and `tax_id_type` are required.
                    $ref: '#/components/schemas/tax_info'
                address:
                    description: The address of the PayPal account holder. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties. Also referred to as the billing address of the customer.
                    $ref: '#/components/schemas/address_portable-2'
                attributes:
                    description: Additional attributes associated with the use of this wallet.
                    $ref: '#/components/schemas/paypal_wallet_attributes'
                experience_context:
                    $ref: '#/components/schemas/paypal_wallet_experience_context'
                billing_agreement_id:
                    $ref: '#/components/schemas/billing_agreement_id'
        full_name:
            type: string
            description: The full name representation like Mr J Smith.
            minLength: 3
            maxLength: 300
        experience_context_base:
            type: object
            title: Experience Context
            description: Customizes the payer experience during the approval process for the payment.
            properties:
                brand_name:
                    type: string
                    description: The label that overrides the business name in the PayPal account on the PayPal site. The pattern is defined by an external party and supports Unicode.
                    minLength: 1
                    maxLength: 127
                    pattern: ^.*$
                locale:
                    description: The BCP 47-formatted locale of pages that the PayPal payment experience shows. PayPal supports a five-character code. For example, `da-DK`, `he-IL`, `id-ID`, `ja-JP`, `no-NO`, `pt-BR`, `ru-RU`, `sv-SE`, `th-TH`, `zh-CN`, `zh-HK`, or `zh-TW`.
                    $ref: '#/components/schemas/language'
                shipping_preference:
                    type: string
                    description: The location from which the shipping address is derived.
                    minLength: 1
                    maxLength: 24
                    pattern: ^[A-Z_]+$
                    default: GET_FROM_FILE
                    enum:
                        - GET_FROM_FILE
                        - NO_SHIPPING
                        - SET_PROVIDED_ADDRESS
                return_url:
                    description: The URL where the customer is redirected after the customer approves the payment.
                    format: uri
                    $ref: '#/components/schemas/url'
                cancel_url:
                    description: The URL where the customer is redirected after the customer cancels the payment.
                    format: uri
                    $ref: '#/components/schemas/url'
        altpay_recurring_attributes_request: {}
        bancontact_request:
            type: object
            title: Bancontact payment object
            description: Information needed to pay using Bancontact.
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                experience_context:
                    description: Customizes the payer experience during the approval process for the payment.
                    $ref: '#/components/schemas/experience_context_base'
                attributes:
                    description: Attributes for altpay recurring.
                    $ref: '#/components/schemas/altpay_recurring_attributes_request'
            required:
                - name
                - country_code
        ip_address:
            type: string
            title: IP Address
            description: An Internet Protocol address (IP address). This address assigns a numerical label to each device that is connected to a computer network through the Internet Protocol. Supports IPv4 and IPv6 addresses.
            format: ppaas_ip_address_v1
            minLength: 7
            maxLength: 39
            pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])$|^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$
        blik_experience_context:
            type: object
            title: BLIK Experience Context
            description: Customizes the payer experience during the approval process for the BLIK payment.
            allOf:
                - $ref: '#/components/schemas/experience_context_base'
                - properties:
                    consumer_ip:
                        description: The IP address of the consumer. It could be either IPv4 or IPv6.
                        $ref: '#/components/schemas/ip_address'
                    consumer_user_agent:
                        type: string
                        description: The payer's User Agent. For example, Mozilla/5.0 (Macintosh; Intel Mac OS X x.y; rv:42.0).
                        minLength: 1
                        maxLength: 256
                        pattern: ^.*$
        blik_seamless:
            type: object
            title: BLIK level_0 payment object
            description: Information used to pay using BLIK level_0 flow.
            properties:
                auth_code:
                    type: string
                    description: The 6-digit code used to authenticate a consumer within BLIK.
                    minLength: 6
                    maxLength: 6
                    pattern: ^[0-9]{6}$
            required:
                - auth_code
        blik_one_click:
            type: object
            title: BLIK one-click payment object
            description: Information used to pay using BLIK one-click flow.
            properties:
                auth_code:
                    type: string
                    description: The 6-digit code used to authenticate a consumer within BLIK.
                    minLength: 6
                    maxLength: 6
                    pattern: ^[0-9]{6}$
                consumer_reference:
                    type: string
                    description: The merchant generated, unique reference serving as a primary identifier for accounts connected between Blik and a merchant.
                    minLength: 3
                    maxLength: 64
                    pattern: ^[ -~]{3,64}$
                alias_label:
                    type: string
                    description: A bank defined identifier used as a display name to allow the payer to differentiate between multiple registered bank accounts.
                    minLength: 8
                    maxLength: 35
                    pattern: ^[ -~]{8,35}$
                alias_key:
                    type: string
                    description: A Blik-defined identifier for a specific Blik-enabled bank account that is associated with a given merchant. Used only in conjunction with a Consumer Reference.
                    minLength: 1
                    maxLength: 19
                    pattern: ^[0-9]+$
            required:
                - consumer_reference
        blik_request:
            type: object
            title: BLIK payment object
            description: Information needed to pay using BLIK.
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                email:
                    description: The email address of the account holder associated with this payment method.
                    $ref: '#/components/schemas/email_address'
                experience_context:
                    description: Customizes the payer experience during the approval process for the payment.
                    $ref: '#/components/schemas/blik_experience_context'
                level_0:
                    description: The level_0 integration flow object.
                    $ref: '#/components/schemas/blik_seamless'
                one_click:
                    description: The one-click integration flow object.
                    $ref: '#/components/schemas/blik_one_click'
            required:
                - name
                - country_code
        eps_request:
            type: object
            title: An eps payment object
            description: Information needed to pay using eps.
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                experience_context:
                    description: Customizes the payer experience during the approval process for the payment.
                    $ref: '#/components/schemas/experience_context_base'
            required:
                - name
                - country_code
        giropay_request:
            type: object
            title: A giropay payment object
            description: Information needed to pay using giropay.
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                experience_context:
                    description: Customizes the payer experience during the approval process for the payment.
                    $ref: '#/components/schemas/experience_context_base'
            required:
                - name
                - country_code
        bic:
            type: string
            title: BIC
            description: The business identification code (BIC). In payments systems, a BIC is used to identify a specific business, most commonly a bank.
            minLength: 8
            maxLength: 11
            pattern: ^[A-Z-a-z0-9]{4}[A-Z-a-z]{2}[A-Z-a-z0-9]{2}([A-Z-a-z0-9]{3})?$
        ideal_request:
            type: object
            title: The iDEAL payment object
            description: Information needed to pay using iDEAL.
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                bic:
                    description: The bank identification code (BIC).
                    $ref: '#/components/schemas/bic'
                experience_context:
                    description: Customizes the payer experience during the approval process for the payment.
                    $ref: '#/components/schemas/experience_context_base'
                attributes:
                    description: Attributes for altpay recurring.
                    $ref: '#/components/schemas/altpay_recurring_attributes_request'
            required:
                - name
                - country_code
        mybank_request:
            type: object
            title: MyBank payment object
            description: Information needed to pay using MyBank.
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                experience_context:
                    description: Customizes the payer experience during the approval process for the payment.
                    $ref: '#/components/schemas/experience_context_base'
            required:
                - name
                - country_code
        p24_request:
            type: object
            title: P24 payment object
            description: Information needed to pay using P24 (Przelewy24).
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                email:
                    description: The email address of the account holder associated with this payment method.
                    $ref: '#/components/schemas/email_address'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                experience_context:
                    description: Customizes the payer experience during the approval process for the payment.
                    $ref: '#/components/schemas/experience_context_base'
            required:
                - name
                - email
                - country_code
        sofort_request:
            type: object
            title: Sofort payment object
            description: Information needed to pay using Sofort.
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                experience_context:
                    description: Customizes the payer experience during the approval process for the payment.
                    $ref: '#/components/schemas/experience_context_base'
            required:
                - name
                - country_code
        trustly_request:
            type: object
            title: Trustly payment object
            description: Information needed to pay using Trustly.
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                experience_context:
                    description: Customizes the payer experience during the approval process for the payment.
                    $ref: '#/components/schemas/experience_context_base'
            required:
                - name
                - country_code
        currency_code-2:
            description: The [three-character ISO-4217 currency code](/docs/api/reference/currency-codes/) that identifies the currency.
            type: string
            format: ppaas_common_currency_code_v2
            minLength: 3
            maxLength: 3
        money-2:
            type: object
            title: Money
            description: The currency and amount for a financial transaction, such as a balance or payment due.
            properties:
                currency_code:
                    $ref: '#/components/schemas/currency_code-2'
                value:
                    type: string
                    description: The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency Codes](/api/rest/reference/currency-codes/).
                    maxLength: 32
                    pattern: ^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$
            required:
                - currency_code
                - value
        apple_pay_payment_data:
            type: object
            title: Decrypted Apple Pay Payment details data.
            description: Information about the decrypted apple pay payment data for the token like cryptogram, eci indicator.
            properties:
                cryptogram:
                    description: Online payment cryptogram, as defined by 3D Secure. The pattern is defined by an external party and supports Unicode.
                    type: string
                    minLength: 1
                    maxLength: 2000
                    pattern: ^.*$
                eci_indicator:
                    description: ECI indicator, as defined by 3- Secure. The pattern is defined by an external party and supports Unicode.
                    type: string
                    minLength: 1
                    maxLength: 256
                    pattern: ^.*$
                emv_data:
                    description: Encoded Apple Pay EMV Payment Structure used for payments in China. The pattern is defined by an external party and supports Unicode.
                    type: string
                    minLength: 1
                    maxLength: 2000
                    pattern: ^.*$
                pin:
                    description: Bank Key encrypted Apple Pay PIN. The pattern is defined by an external party and supports Unicode.
                    type: string
                    minLength: 1
                    maxLength: 2000
                    pattern: ^.*$
        apple_pay_decrypted_token_data:
            type: object
            title: Decrypted Apple Pay Token data.
            description: Information about the Payment data obtained by decrypting Apple Pay token.
            properties:
                transaction_amount:
                    description: The transaction amount for the payment that the payer has approved on apple platform.
                    $ref: '#/components/schemas/money-2'
                tokenized_card:
                    description: Apple Pay tokenized credit card used to pay.
                    $ref: '#/components/schemas/card'
                device_manufacturer_id:
                    description: Apple Pay Hex-encoded device manufacturer identifier. The pattern is defined by an external party and supports Unicode.
                    type: string
                    minLength: 1
                    maxLength: 2000
                    pattern: ^.*$
                payment_data_type:
                    description: Indicates the type of payment data passed, in case of Non China the payment data is 3DSECURE and for China it is EMV.
                    type: string
                    minLength: 1
                    maxLength: 16
                    pattern: ^[0-9A-Z_]+$
                    enum:
                        - 3DSECURE
                        - EMV
                payment_data:
                    description: Apple Pay payment data object which contains the cryptogram, eci_indicator and other data.
                    $ref: '#/components/schemas/apple_pay_payment_data'
            required:
                - tokenized_card
        apple_pay_attributes: {}
        apple_pay_request:
            type: object
            title: ApplePay payment request object
            description: Information needed to pay using ApplePay.
            properties:
                id:
                    description: ApplePay transaction identifier, this will be the unique identifier for this transaction provided by Apple. The pattern is defined by an external party and supports Unicode.
                    type: string
                    minLength: 1
                    maxLength: 250
                    pattern: ^.*$
                name:
                    description: Name on the account holder associated with apple pay.
                    $ref: '#/components/schemas/full_name'
                email_address:
                    description: The email address of the account holder associated with apple pay.
                    $ref: '#/components/schemas/email_address'
                phone_number:
                    description: The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). Supports only the `national_number` property.
                    $ref: '#/components/schemas/phone'
                decrypted_token:
                    description: The decrypted payload details for the apple pay token.
                    $ref: '#/components/schemas/apple_pay_decrypted_token_data'
                stored_credential:
                    $ref: '#/components/schemas/card_stored_credential'
                vault_id:
                    description: The PayPal-generated ID for the saved apple pay payment_source. This ID should be stored on the merchant's server so the saved payment source can be used for future transactions.
                    $ref: '#/components/schemas/vault_id'
                attributes:
                    $ref: '#/components/schemas/apple_pay_attributes'
        google_pay_request: {}
        venmo_wallet_experience_context:
            type: object
            title: Venmo Wallet Experience Context
            description: Customizes the buyer experience during the approval process for payment with Venmo.<blockquote><strong>Note:</strong> Partners and Marketplaces might configure <code>shipping_preference</code> during partner account setup, which overrides the request values.</blockquote>
            properties:
                brand_name:
                    type: string
                    description: The business name of the merchant. The pattern is defined by an external party and supports Unicode.
                    minLength: 1
                    maxLength: 127
                    pattern: ^.*$
                shipping_preference:
                    type: string
                    description: The location from which the shipping address is derived.
                    minLength: 1
                    maxLength: 24
                    pattern: ^[A-Z_]+$
                    default: GET_FROM_FILE
                    enum:
                        - GET_FROM_FILE
                        - NO_SHIPPING
                        - SET_PROVIDED_ADDRESS
        v3_vault_instruction_base:
            type: object
            title: Base Vault Instruction Parameters
            description: Base vaulting specification. The object can be extended for specific use cases within each payment_source that supports vaulting.
            properties:
                store_in_vault:
                    $ref: '#/components/schemas/store_in_vault_instruction'
            required:
                - store_in_vault
        vault_venmo_wallet_base:
            type: object
            title: Vaulted Venmo Wallet Common Attributes
            description: Resource consolidating common request and response attirbutes for vaulting Venmo Wallet.
            allOf:
                - $ref: '#/components/schemas/v3_vault_instruction_base'
                - properties:
                    description:
                        type: string
                        description: The description displayed to Venmo consumer on the approval flow for Venmo, as well as on the Venmo payment token management experience on Venmo.com.
                        minLength: 1
                        maxLength: 128
                        pattern: ^[a-zA-Z0-9_'\-., :;\!?"]*$
                    usage_pattern:
                        type: string
                        description: Expected business/pricing model for the billing agreement.
                        minLength: 1
                        maxLength: 30
                        pattern: ^[0-9A-Z_]+$
                        enum:
                            - IMMEDIATE
                            - DEFERRED
                            - RECURRING_PREPAID
                            - RECURRING_POSTPAID
                            - THRESHOLD_PREPAID
                            - THRESHOLD_POSTPAID
                    usage_type:
                        type: string
                        description: The usage type associated with the Venmo payment token.
                        minLength: 1
                        maxLength: 255
                        pattern: ^[0-9A-Z_]+$
                        enum:
                            - MERCHANT
                            - PLATFORM
                    customer_type:
                        type: string
                        description: The customer type associated with the Venmo payment token. This is to indicate whether the customer acting on the merchant / platform is either a business or a consumer.
                        minLength: 1
                        maxLength: 255
                        pattern: ^[0-9A-Z_]+$
                        default: CONSUMER
                        enum:
                            - CONSUMER
                            - BUSINESS
                    permit_multiple_payment_tokens:
                        type: boolean
                        description: Create multiple payment tokens for the same payer, merchant/platform combination. Use this when the customer has not logged in at merchant/platform. The payment token thus generated, can then also be used to create the customer account at merchant/platform. Use this also when multiple payment tokens are required for the same payer, different customer at merchant/platform. This helps to identify customers distinctly even though they may share the same Venmo account.
                        default: false
            required:
                - usage_type
        venmo_wallet_attributes:
            type: object
            title: Venmo Wallet Attributes
            description: Additional attributes associated with the use of this Venmo Wallet.
            properties:
                customer:
                    $ref: '#/components/schemas/customer'
                vault:
                    description: Attributes used to provide the instructions during vaulting of the Venmo Wallet.
                    $ref: '#/components/schemas/vault_venmo_wallet_base'
        venmo_wallet_request:
            type: object
            title: Venmo payment request object
            description: Information needed to pay using Venmo.
            properties:
                vault_id:
                    description: The PayPal-generated ID for the saved Venmo wallet payment_source. This ID should be stored on the merchant's server so the saved payment source can be used for future transactions.
                    $ref: '#/components/schemas/vault_id'
                email_address:
                    description: The email address of the payer.
                    $ref: '#/components/schemas/email'
                experience_context:
                    $ref: '#/components/schemas/venmo_wallet_experience_context'
                attributes:
                    description: Additional attributes associated with the use of this wallet.
                    $ref: '#/components/schemas/venmo_wallet_attributes'
        stored_payment_source:
            type: object
            title: Stored Payment Source
            description: Provides additional details to process a payment using a `payment_source` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).<br/>Parameter compatibility:<br/><ul><li>`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`.</li><li>Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request.</li></ul>
            properties:
                payment_initiator:
                    $ref: '#/components/schemas/payment_initiator'
                payment_type:
                    $ref: '#/components/schemas/stored_payment_source_payment_type'
                usage:
                    $ref: '#/components/schemas/stored_payment_source_usage_type'
                previous_network_transaction_reference:
                    $ref: '#/components/schemas/network_transaction_reference'
            required:
                - payment_initiator
                - payment_type
        order_application_context:
            type: object
            title: Application Context
            description: Customizes the payer experience during the approval process for the payment with PayPal.<blockquote><strong>Note:</strong> Partners and Marketplaces might configure <code>brand_name</code> and <code>shipping_preference</code> during partner account setup, which overrides the request values.</blockquote>
            properties:
                brand_name:
                    type: string
                    description: DEPRECATED. The label that overrides the business name in the PayPal account on the PayPal site. The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.brand_name`). Please specify this field in the `experience_context` object instead of the `application_context` object.
                    minLength: 1
                    maxLength: 127
                locale:
                    description: DEPRECATED. The BCP 47-formatted locale of pages that the PayPal payment experience shows. PayPal supports a five-character code. For example, `da-DK`, `he-IL`, `id-ID`, `ja-JP`, `no-NO`, `pt-BR`, `ru-RU`, `sv-SE`, `th-TH`, `zh-CN`, `zh-HK`, or `zh-TW`.  The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.locale`). Please specify this field in the `experience_context` object instead of the `application_context` object.
                    $ref: '#/components/schemas/language'
                landing_page:
                    type: string
                    description: DEPRECATED. DEPRECATED. The type of landing page to show on the PayPal site for customer checkout.  The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.landing_page`). Please specify this field in the `experience_context` object instead of the `application_context` object.
                    deprecated: true
                    default: NO_PREFERENCE
                    minLength: 1
                    maxLength: 13
                    pattern: ^[0-9A-Z_]+$
                    enum:
                        - LOGIN
                        - BILLING
                        - NO_PREFERENCE
                shipping_preference:
                    type: string
                    description: DEPRECATED. DEPRECATED. The shipping preference:<ul><li>Displays the shipping address to the customer.</li><li>Enables the customer to choose an address on the PayPal site.</li><li>Restricts the customer from changing the address during the payment-approval process.</li></ul>.  The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.shipping_preference`). Please specify this field in the `experience_context` object instead of the `application_context` object.
                    deprecated: true
                    default: GET_FROM_FILE
                    minLength: 1
                    maxLength: 20
                    pattern: ^[0-9A-Z_]+$
                    enum:
                        - GET_FROM_FILE
                        - NO_SHIPPING
                        - SET_PROVIDED_ADDRESS
                user_action:
                    type: string
                    description: DEPRECATED. Configures a <strong>Continue</strong> or <strong>Pay Now</strong> checkout flow.  The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.user_action`). Please specify this field in the `experience_context` object instead of the `application_context` object.
                    default: CONTINUE
                    minLength: 1
                    maxLength: 8
                    pattern: ^[0-9A-Z_]+$
                    enum:
                        - CONTINUE
                        - PAY_NOW
                payment_method:
                    description: DEPRECATED. The customer and merchant payment preferences. The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.payment_method_selected`). Please specify this field in the `experience_context` object instead of the `application_context` object..
                    $ref: '#/components/schemas/payment_method'
                return_url:
                    type: string
                    format: uri
                    description: DEPRECATED. The URL where the customer is redirected after the customer approves the payment. The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.return_url`). Please specify this field in the `experience_context` object instead of the `application_context` object.
                cancel_url:
                    type: string
                    format: uri
                    description: DEPRECATED. The URL where the customer is redirected after the customer cancels the payment. The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.cancel_url`). Please specify this field in the `experience_context` object instead of the `application_context` object.
                stored_payment_source:
                    $ref: '#/components/schemas/stored_payment_source'
                    description: DEPRECATED. Provides additional details to process a payment using a `payment_source` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).<br/>Parameter compatibility:<br/><ul><li>`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`.</li><li>Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request.</li></ul>.  The fields in `stored_payment_source` are now available in the `stored_credential` object under the `payment_source` which supports them (eg. `payment_source.card.stored_credential.payment_initiator`). Please specify this field in the `payment_source` object instead of the `application_context` object.
                    deprecated: true
        order_request:
            type: object
            title: Order Request
            description: The order request details.
            properties:
                intent:
                    $ref: '#/components/schemas/checkout_payment_intent'
                payer:
                    description: DEPRECATED. The customer is also known as the payer. The Payer object was intended to only be used with the `payment_source.paypal` object. In order to make this design more clear, the details in the `payer` object are now available under `payment_source.paypal`. Please use `payment_source.paypal`.
                    $ref: '#/components/schemas/payer'
                    deprecated: true
                purchase_units:
                    type: array
                    description: An array of purchase units. Each purchase unit establishes a contract between a payer and the payee. Each purchase unit represents either a full or partial order that the payer intends to purchase from the payee.
                    minItems: 1
                    maxItems: 10
                    items:
                        description: The purchase unit. Establishes a contract between a payer and the payee.
                        $ref: '#/components/schemas/purchase_unit_request'
                payment_source:
                    $ref: '#/components/schemas/payment_source'
                application_context:
                    description: Customize the payer experience during the approval process for the payment with PayPal.
                    $ref: '#/components/schemas/order_application_context'
            required:
                - intent
                - purchase_units
        activity_timestamps:
            type: object
            description: The date and time stamps that are common to authorized payment, captured payment, and refund transactions.
            title: Transaction Date and Time Stamps
            properties:
                create_time:
                    description: The date and time when the transaction occurred, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                update_time:
                    description: The date and time when the transaction was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
        authentication_flow: {}
        exemption_details: {}
        vault_response:
            type: object
            title: Saved Payment Source Response
            description: The details about a saved payment source.
            properties:
                id:
                    type: string
                    description: The PayPal-generated ID for the saved payment source.
                    minLength: 1
                    maxLength: 255
                status:
                    type: string
                    description: The vault status.
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    deprecated: true
                    enum:
                        - VAULTED
                        - CREATED
                        - APPROVED
                customer:
                    $ref: '#/components/schemas/customer'
                links:
                    type: array
                    description: An array of request-related HATEOAS links.
                    readOnly: true
                    minItems: 1
                    maxItems: 10
                    items:
                        description: A request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links).
                        $ref: '#/components/schemas/link_description'
        card_attributes_response:
            type: object
            title: Card Attributes Response
            description: Additional attributes associated with the use of this card.
            properties:
                vault:
                    $ref: '#/components/schemas/vault_response'
        card_from_request:
            type: object
            title: Response of Card from Request
            description: Representation of card details as received in the request.
            properties:
                expiry:
                    description: The card expiration year and month, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_year_month'
                last_digits:
                    type: string
                    description: The last digits of the payment card.
                    pattern: '[0-9]{2,}'
                    minLength: 2
                    maxLength: 4
                    readOnly: true
        bin_details:
            type: object
            title: Bin Details
            description: Bank Identification Number (BIN) details used to fund a payment.
            properties:
                bin:
                    type: string
                    description: The Bank Identification Number (BIN) signifies the number that is being used to identify the granular level details (except the PII information) of the card.
                    pattern: ^[0-9]+$
                    maxLength: 25
                    minLength: 1
                issuing_bank:
                    type: string
                    description: The issuer of the card instrument.
                    minLength: 1
                    maxLength: 64
                bin_country_code:
                    description: The [two-character ISO-3166-1 country code](/docs/integration/direct/rest/country-codes/) of the bank.
                    $ref: '#/components/schemas/country_code'
                products:
                    type: array
                    description: 'The type of card product assigned to the BIN by the issuer. These values are defined by the issuer and may change over time. Some examples include: PREPAID_GIFT, CONSUMER, CORPORATE.'
                    items:
                        type: string
                        description: This value provides the category of the BIN.
                        minLength: 1
                        maxLength: 255
                    minItems: 1
                    maxItems: 256
        account_id-2:
            type: string
            description: The PayPal payer ID, which is a masked version of the PayPal account number intended for use with third parties. The account number is reversibly encrypted and a proprietary variant of Base32 is used to encode the result.
            format: ppaas_payer_id_v3
            minLength: 13
            maxLength: 13
            pattern: ^[2-9A-HJ-NP-Z]{13}$
        phone_type-2:
            type: string
            title: Phone Type
            description: The phone type.
            enum:
                - FAX
                - HOME
                - MOBILE
                - OTHER
                - PAGER
                - WORK
        phone-2:
            type: object
            title: Phone
            description: The phone number in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).
            properties:
                national_number:
                    type: string
                    description: The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).
                    minLength: 1
                    maxLength: 14
                    pattern: ^[0-9]{1,14}?$
            required:
                - national_number
        paypal_wallet_vault_response:
            type: object
            title: Saved PayPal Wallet Payment Source Response
            description: The details about a saved PayPal Wallet payment source.
            allOf:
                - $ref: '#/components/schemas/vault_response'
                - properties:
                    customer:
                        $ref: '#/components/schemas/paypal_wallet_customer'
                    owner_id:
                        $ref: '#/components/schemas/vault_owner_id'
        cobranded_card:
            type: object
            title: cobranded card object
            description: Details about the merchant cobranded card used for order purchase.
            properties:
                labels:
                    type: array
                    description: Array of labels for the cobranded card.
                    minItems: 1
                    maxItems: 25
                    items:
                        type: string
                        description: Label for the cobranded card.
                        minLength: 1
                        maxLength: 256
                payee:
                    description: Merchant associated with the purchase.
                    $ref: '#/components/schemas/payee_base'
                amount:
                    description: Amount that was charged to the cobranded card.
                    $ref: '#/components/schemas/money'
        paypal_wallet_attributes_response:
            type: object
            title: PayPal Wallet Attributes Response
            description: Additional attributes associated with the use of a PayPal Wallet.
            properties:
                vault:
                    $ref: '#/components/schemas/paypal_wallet_vault_response'
                cobranded_cards:
                    type: array
                    description: An array of merchant cobranded cards used by buyer to complete an order. This array will be present if a merchant has onboarded their cobranded card with PayPal and provided corresponding label(s).
                    maxItems: 25
                    items:
                        $ref: '#/components/schemas/cobranded_card'
        paypal_wallet_response:
            title: PayPal Wallet Response
            description: Full representation of a PayPal Payment Token.
            type: object
            allOf:
                - $ref: '#/components/schemas/wallet_base'
                - readOnly: true
                  $ref: '#/components/schemas/payer'
                - properties:
                    account_id:
                        readOnly: true
                        description: The account identifier for a PayPal account.
                        $ref: '#/components/schemas/account_id'
                    phone_number:
                        readOnly: true
                        description: The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).
                        $ref: '#/components/schemas/phone'
        iban_last_chars:
            type: string
            description: The last characters of the IBAN used to pay.
            minLength: 4
            maxLength: 34
            pattern: '[a-zA-Z0-9]{4}'
        altpay_recurring_attributes: {}
        bancontact:
            type: object
            title: Bancontact payment object
            description: Information used to pay Bancontact.
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                bic:
                    description: The bank identification code (BIC).
                    $ref: '#/components/schemas/bic'
                iban_last_chars:
                    $ref: '#/components/schemas/iban_last_chars'
                card_last_digits:
                    type: string
                    minLength: 4
                    maxLength: 4
                    pattern: '[0-9]{4}'
                    description: The last digits of the card used to fund the Bancontact payment.
                attributes:
                    description: Attributes for SEPA direct debit object.
                    $ref: '#/components/schemas/altpay_recurring_attributes'
        blik_one_click_response:
            type: object
            title: BLIK one-click payment object
            description: Information used to pay using BLIK one-click flow.
            properties:
                consumer_reference:
                    type: string
                    description: The merchant generated, unique reference serving as a primary identifier for accounts connected between Blik and a merchant.
                    minLength: 3
                    maxLength: 64
                    pattern: ^[ -~]{3,64}$
        blik:
            type: object
            title: BLIK payment object
            description: Information used to pay using BLIK.
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                email:
                    description: The email address of the account holder associated with this payment method.
                    $ref: '#/components/schemas/email_address'
                one_click:
                    description: The one-click integration flow object.
                    $ref: '#/components/schemas/blik_one_click_response'
        eps:
            type: object
            title: An eps payment object
            description: Information used to pay using eps.
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                bic:
                    description: The bank identification code (BIC).
                    $ref: '#/components/schemas/bic'
        giropay:
            type: object
            title: A giropay payment object
            description: Information needed to pay using giropay.
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                bic:
                    description: The bank identification code (BIC).
                    $ref: '#/components/schemas/bic'
        ideal:
            type: object
            title: The iDEAL payment object
            description: Information used to pay using iDEAL.
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                bic:
                    description: The bank identification code (BIC).
                    $ref: '#/components/schemas/bic'
                iban_last_chars:
                    $ref: '#/components/schemas/iban_last_chars'
                attributes:
                    description: Attributes for SEPA direct debit object.
                    $ref: '#/components/schemas/altpay_recurring_attributes'
        mybank:
            type: object
            title: MyBank payment object
            description: Information used to pay using MyBank.
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                bic:
                    description: The bank identification code (BIC).
                    $ref: '#/components/schemas/bic'
                iban_last_chars:
                    $ref: '#/components/schemas/iban_last_chars'
        p24:
            type: object
            title: P24 payment object
            description: Information used to pay using P24(Przelewy24).
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                email:
                    description: The email address of the account holder associated with this payment method.
                    $ref: '#/components/schemas/email_address'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                payment_descriptor:
                    type: string
                    minLength: 1
                    maxLength: 2000
                    description: P24 generated payment description.
                method_id:
                    type: string
                    minLength: 1
                    maxLength: 300
                    description: Numeric identifier of the payment scheme or bank used for the payment.
                method_description:
                    type: string
                    minLength: 1
                    maxLength: 2000
                    description: Friendly name of the payment scheme or bank used for the payment.
        sofort:
            type: object
            title: Sofort payment object
            description: Information used to pay using Sofort.
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                bic:
                    description: The bank identification code (BIC).
                    $ref: '#/components/schemas/bic'
                iban_last_chars:
                    $ref: '#/components/schemas/iban_last_chars'
        trustly:
            type: object
            title: Trustly payment object
            description: Information needed to pay using Trustly.
            properties:
                name:
                    description: The name of the account holder associated with this payment method.
                    $ref: '#/components/schemas/full_name'
                country_code:
                    description: The two-character ISO 3166-1 country code.
                    $ref: '#/components/schemas/country_code'
                bic:
                    description: The bank identification code (BIC).
                    $ref: '#/components/schemas/bic'
                iban_last_chars:
                    $ref: '#/components/schemas/iban_last_chars'
        venmo_wallet_attributes_response:
            type: object
            title: Venmo Wallet Attributes Response
            description: Additional attributes associated with the use of a Venmo Wallet.
            properties:
                vault:
                    $ref: '#/components/schemas/vault_response'
        venmo_wallet_response:
            type: object
            title: Venmo Wallet Response Object
            description: Venmo wallet response.
            properties:
                email_address:
                    description: The email address of the payer.
                    $ref: '#/components/schemas/email'
                account_id:
                    description: This is an immutable system-generated id for a user's Venmo account.
                    readOnly: true
                    $ref: '#/components/schemas/account_id-2'
                user_name:
                    description: The Venmo user name chosen by the user, also know as a Venmo handle.
                    type: string
                    pattern: ^[-a-zA-Z0-9_]*$
                    minLength: 1
                    maxLength: 50
                name:
                    description: The name associated with the Venmo account. Supports only the `given_name` and `surname` properties.
                    $ref: '#/components/schemas/name-2'
                phone_number:
                    description: The phone number associated with the Venmo account, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). Supports only the `national_number` property.
                    $ref: '#/components/schemas/phone-2'
                address:
                    description: The address of the payer. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties. Also referred to as the billing address of the customer.
                    $ref: '#/components/schemas/address_portable-2'
                attributes:
                    $ref: '#/components/schemas/venmo_wallet_attributes_response'
        processing_instruction:
            type: string
            title: Processing Instruction
            description: The instruction to process an order.
            default: NO_INSTRUCTION
            minLength: 1
            maxLength: 36
            pattern: ^[0-9A-Z_]+$
            enum:
                - ORDER_COMPLETE_ON_PAYMENT_APPROVAL
                - NO_INSTRUCTION
        tracker_status: {}
        universal_product_code: {}
        tracker_item:
            type: object
            title: Tracker Item
            description: The details of the items in the shipment.
            properties:
                name:
                    type: string
                    description: The item name or title.
                    minLength: 1
                    maxLength: 127
                quantity:
                    type: string
                    description: The item quantity. Must be a whole number.
                    minLength: 1
                    maxLength: 10
                    pattern: ^[1-9][0-9]{0,9}$
                sku:
                    type: string
                    description: The stock keeping unit (SKU) for the item. This can contain unicode characters.
                    minLength: 1
                    maxLength: 127
                url:
                    type: string
                    format: uri
                    minLength: 1
                    maxLength: 2048
                    description: The URL to the item being purchased. Visible to buyer and used in buyer experiences.
                image_url:
                    type: string
                    format: uri
                    description: The URL of the item's image. File type and size restrictions apply. An image that violates these restrictions will not be honored.
                    minLength: 1
                    maxLength: 2048
                    pattern: ^(https:)([/|.|\w|\s|-])*\.(?:jpg|gif|png|jpeg|JPG|GIF|PNG|JPEG)
                upc:
                    description: The Universal Product Code of the item.
                    $ref: '#/components/schemas/universal_product_code'
        tracker:
            type: object
            title: Tracker
            description: The tracking information for a shipment.
            properties:
                transaction_id:
                    type: string
                    description: The PayPal transaction ID.
                    minLength: 1
                    maxLength: 50
                    pattern: ^[a-zA-Z0-9]*$
                tracking_number:
                    type: string
                    description: The tracking number for the shipment.
                    minLength: 1
                    maxLength: 64
                tracking_number_type:
                    description: The type of tracking number.
                    $ref: '#/components/schemas/tracking_number_type'
                status:
                    $ref: '#/components/schemas/tracking_status'
                shipment_date:
                    $ref: '#/components/schemas/date_no_time'
                    description: The date when the shipment occurred, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                carrier:
                    $ref: '#/components/schemas/carrier'
                carrier_name_other:
                    type: string
                    description: The name of the carrier for the shipment. Provide this value only if the carrier parameter is OTHER.
                    minLength: 1
                    maxLength: 64
                postage_payment_id:
                    type: string
                    description: The postage payment ID.
                    readOnly: true
                    minLength: 1
                    maxLength: 64
                notify_buyer:
                    type: boolean
                    description: If true , sends an email notification to the buyer of the PayPal transaction. The email contains the tracking information that was uploaded through the API.
                    default: false
                quantity:
                    type: integer
                    description: The quantity of items shipped.
                    readOnly: true
                    minimum: 1
                    maximum: 22
                tracking_number_validated:
                    type: boolean
                    description: Indicates whether the carrier validated the tracking number.
                    readOnly: true
                last_updated_time:
                    $ref: '#/components/schemas/date_time'
                    description: The date and time when the tracking information was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                shipment_direction:
                    type: string
                    description: To denote whether the shipment is sent forward to the receiver or returned back.
                    minLength: 1
                    maxLength: 50
                    enum:
                        - FORWARD
                        - RETURN
                shipment_uploader:
                    readOnly: true
                    type: string
                    description: To denote which party uploaded the shipment tracking info.
                    minLength: 1
                    maxLength: 50
                    enum:
                        - MERCHANT
                        - CONSUMER
                        - PARTNER
                account_id:
                    type: string
                    description: Encrypted PayPal Account ID of the buyer or seller.
                    readOnly: true
                    minLength: 13
                    maxLength: 13
                    pattern: ^[2-9A-HJ-NP-Z]{13}$
                tracking_url:
                    type: string
                    format: uri
                    minLength: 1
                    maxLength: 250
                    description: Tracking Link of the shipment.
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
            required:
                - transaction_id
                - status
        shipping_with_tracking_details:
            type: object
            title: Order Shipping Details
            description: The order shipping details.
            allOf:
                - $ref: '#/components/schemas/shipping_detail'
                - properties:
                    trackers:
                        type: array
                        description: An array of trackers for a transaction.
                        items:
                            $ref: '#/components/schemas/tracker'
        authorization_status_details:
            title: Auhorization Status Details
            description: The details of the authorized payment status.
            type: object
            properties:
                reason:
                    description: The reason why the authorized status is `PENDING`.
                    type: string
                    minLength: 1
                    maxLength: 24
                    pattern: ^[A-Z_]+$
                    enum:
                        - PENDING_REVIEW
        authorization_status:
            type: object
            title: Authorization Status
            description: The status fields for an authorized payment.
            properties:
                status:
                    description: The status for the authorized payment.
                    type: string
                    readOnly: true
                    enum:
                        - CREATED
                        - CAPTURED
                        - DENIED
                        - PARTIALLY_CAPTURED
                        - VOIDED
                        - PENDING
                status_details:
                    description: The details of the authorized order pending status.
                    readOnly: true
                    $ref: '#/components/schemas/authorization_status_details'
        seller_protection:
            type: object
            description: The level of protection offered as defined by [PayPal Seller Protection for Merchants](https://www.paypal.com/us/webapps/mpp/security/seller-protection).
            title: Seller Protection
            properties:
                status:
                    type: string
                    description: Indicates whether the transaction is eligible for seller protection. For information, see [PayPal Seller Protection for Merchants](https://www.paypal.com/us/webapps/mpp/security/seller-protection).
                    readOnly: true
                    enum:
                        - ELIGIBLE
                        - PARTIALLY_ELIGIBLE
                        - NOT_ELIGIBLE
                dispute_categories:
                    type: array
                    description: An array of conditions that are covered for the transaction.
                    items:
                        type: string
                        description: The condition that is covered for the transaction.
                        enum:
                            - ITEM_NOT_RECEIVED
                            - UNAUTHORIZED_TRANSACTION
                    readOnly: true
        authorization:
            type: object
            title: Authorization
            description: The authorized payment transaction.
            allOf:
                - $ref: '#/components/schemas/authorization_status'
                - properties:
                    id:
                        description: The PayPal-generated ID for the authorized payment.
                        type: string
                        readOnly: true
                    amount:
                        description: The amount for this authorized payment.
                        $ref: '#/components/schemas/money'
                        readOnly: true
                    invoice_id:
                        description: The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
                        type: string
                        readOnly: true
                    custom_id:
                        type: string
                        description: The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.
                        maxLength: 127
                    network_transaction_reference:
                        $ref: '#/components/schemas/network_transaction_reference'
                    seller_protection:
                        $ref: '#/components/schemas/seller_protection'
                        readOnly: true
                    expiration_time:
                        description: The date and time when the authorized payment expires, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                        $ref: '#/components/schemas/date_time'
                        readOnly: true
                    links:
                        description: An array of related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                        type: array
                        readOnly: true
                        items:
                            $ref: '#/components/schemas/link_description'
                - $ref: '#/components/schemas/activity_timestamps'
        processor_response:
            type: object
            title: Processor Response
            description: The processor information. Might be required for payment requests, such as direct credit card transactions.
            properties:
                avs_code:
                    description: The address verification code for Visa, Discover, Mastercard, or American Express transactions.
                    type: string
                    readOnly: true
                    enum:
                        - A
                        - B
                        - C
                        - D
                        - E
                        - F
                        - G
                        - I
                        - M
                        - N
                        - P
                        - R
                        - S
                        - U
                        - W
                        - X
                        - Y
                        - Z
                        - "Null"
                        - "0"
                        - "1"
                        - "2"
                        - "3"
                        - "4"
                cvv_code:
                    description: The card verification value code for for Visa, Discover, Mastercard, or American Express.
                    type: string
                    readOnly: true
                    enum:
                        - E
                        - I
                        - M
                        - N
                        - P
                        - S
                        - U
                        - X
                        - All others
                        - "0"
                        - "1"
                        - "2"
                        - "3"
                        - "4"
                response_code:
                    description: Processor response code for the non-PayPal payment processor errors.
                    type: string
                    readOnly: true
                    enum:
                        - "0000"
                        - 00N7
                        - "0100"
                        - "0390"
                        - "0500"
                        - "0580"
                        - "0800"
                        - "0880"
                        - 0R00
                        - "1000"
                        - 10BR
                        - "1300"
                        - "1310"
                        - "1312"
                        - "1317"
                        - "1320"
                        - "1330"
                        - "1335"
                        - "1340"
                        - "1350"
                        - "1360"
                        - "1370"
                        - "1380"
                        - "1382"
                        - "1384"
                        - "1390"
                        - "1393"
                        - "5100"
                        - "5110"
                        - "5120"
                        - "5130"
                        - "5135"
                        - "5140"
                        - "5150"
                        - "5160"
                        - "5170"
                        - "5180"
                        - "5190"
                        - "5200"
                        - "5210"
                        - "5400"
                        - "5500"
                        - "5650"
                        - "5700"
                        - "5710"
                        - "5800"
                        - "5900"
                        - "5910"
                        - "5920"
                        - "5930"
                        - "6300"
                        - "7600"
                        - "7700"
                        - "7710"
                        - "7800"
                        - "7900"
                        - "8000"
                        - "8010"
                        - "8020"
                        - "8030"
                        - "8100"
                        - "8110"
                        - "8220"
                        - "9100"
                        - "9500"
                        - "9510"
                        - "9520"
                        - "9530"
                        - "9540"
                        - "9600"
                        - PCNR
                        - PCVV
                        - PPAD
                        - PPAE
                        - PPAG
                        - PPAI
                        - PPAR
                        - PPAU
                        - PPAV
                        - PPAX
                        - PPBG
                        - PPC2
                        - PPCE
                        - PPCO
                        - PPCR
                        - PPCT
                        - PPCU
                        - PPD3
                        - PPDC
                        - PPDI
                        - PPDV
                        - PPEF
                        - PPEL
                        - PPER
                        - PPEX
                        - PPFE
                        - PPFI
                        - PPFR
                        - PPFV
                        - PPGR
                        - PPH1
                        - PPIF
                        - PPII
                        - PPIM
                        - PPIT
                        - PPLR
                        - PPLS
                        - PPMB
                        - PPMC
                        - PPMD
                        - PPNC
                        - PPNL
                        - PPNT
                        - PPPH
                        - PPPI
                        - PPPM
                        - PPQC
                        - PPRE
                        - PPRF
                        - PPRR
                        - PPS0
                        - PPS1
                        - PPS2
                        - PPS3
                        - PPS4
                        - PPS5
                        - PPS6
                        - PPSC
                        - PPSD
                        - PPSE
                        - PPTE
                        - PPTF
                        - PPTI
                        - PPTR
                        - PPTT
                        - PPTV
                        - PPUA
                        - PPUC
                        - PPUE
                        - PPUI
                        - PPUP
                        - PPUR
                        - PPVC
                        - PPVE
                        - PPVT
                payment_advice_code:
                    description: The declined payment transactions might have payment advice codes. The card networks, like Visa and Mastercard, return payment advice codes.
                    type: string
                    readOnly: true
                    enum:
                        - "01"
                        - "02"
                        - "03"
                        - "21"
        authorization_with_additional_data:
            type: object
            title: Authorization with Additional Data
            description: The authorization with additional payment details, such as risk assessment and processor response. These details are populated only for certain payment methods.
            allOf:
                - $ref: '#/components/schemas/authorization'
                - properties:
                    processor_response:
                        $ref: '#/components/schemas/processor_response'
                        description: The processor response for card transactions.
                        readOnly: true
        exchange_rate:
            description: The exchange rate that determines the amount to convert from one currency to another currency.
            type: object
            title: Exchange Rate
            properties:
                source_currency:
                    description: The source currency from which to convert an amount.
                    $ref: '#/components/schemas/currency_code'
                target_currency:
                    description: The target currency to which to convert an amount.
                    $ref: '#/components/schemas/currency_code'
                value:
                    description: The target currency amount. Equivalent to one unit of the source currency. Formatted as integer or decimal value with one to 15 digits to the right of the decimal point.
                    type: string
            readOnly: true
        seller_receivable_breakdown:
            type: object
            title: Seller Receivable Breakdown
            description: The detailed breakdown of the capture activity. This is not available for transactions that are in pending state.
            properties:
                gross_amount:
                    description: The amount for this captured payment in the currency of the transaction.
                    $ref: '#/components/schemas/money'
                paypal_fee:
                    description: The applicable fee for this captured payment in the currency of the transaction.
                    $ref: '#/components/schemas/money'
                paypal_fee_in_receivable_currency:
                    description: The applicable fee for this captured payment in the receivable currency. Returned only in cases the fee is charged in the receivable currency. Example 'CNY'.
                    $ref: '#/components/schemas/money'
                net_amount:
                    description: The net amount that the payee receives for this captured payment in their PayPal account. The net amount is computed as <code>gross_amount</code> minus the <code>paypal_fee</code> minus the <code>platform_fees</code>.
                    $ref: '#/components/schemas/money'
                receivable_amount:
                    description: The net amount that is credited to the payee's PayPal account. Returned only when the currency of the captured payment is different from the currency of the PayPal account where the payee wants to credit the funds. The amount is computed as <code>net_amount</code> times <code>exchange_rate</code>.
                    $ref: '#/components/schemas/money'
                exchange_rate:
                    description: The exchange rate that determines the amount that is credited to the payee's PayPal account. Returned when the currency of the captured payment is different from the currency of the PayPal account where the payee wants to credit the funds.
                    $ref: '#/components/schemas/exchange_rate'
                platform_fees:
                    type: array
                    description: An array of platform or partner fees, commissions, or brokerage fees that associated with the captured payment.
                    maxItems: 1
                    items:
                        $ref: '#/components/schemas/platform_fee'
            required:
                - gross_amount
        refund_status_details:
            title: Refund Status Details
            description: The details of the refund status.
            type: object
            properties:
                reason:
                    description: The reason why the refund has the `PENDING` or `FAILED` status.
                    type: string
                    enum:
                        - ECHECK
        refund_status:
            type: object
            description: The refund status.
            title: Refund Status
            properties:
                status:
                    description: The status of the refund.
                    type: string
                    readOnly: true
                    enum:
                        - CANCELLED
                        - FAILED
                        - PENDING
                        - COMPLETED
                status_details:
                    description: The details of the refund status.
                    readOnly: true
                    $ref: '#/components/schemas/refund_status_details'
        net_amount_breakdown_item:
            type: object
            title: Net Amount Breakdown Item
            description: The net amount. Returned when the currency of the refund is different from the currency of the PayPal account where the merchant holds their funds.
            properties:
                payable_amount:
                    description: The net amount debited from the merchant's PayPal account.
                    readOnly: true
                    $ref: '#/components/schemas/money'
                converted_amount:
                    description: The converted payable amount.
                    readOnly: true
                    $ref: '#/components/schemas/money'
                exchange_rate:
                    description: The exchange rate that determines the amount that was debited from the merchant's PayPal account.
                    readOnly: true
                    $ref: '#/components/schemas/exchange_rate'
        payment_collection:
            type: object
            title: Payment Collection
            description: The collection of payments, or transactions, for a purchase unit in an order. For example, authorized payments, captured payments, and refunds.
            properties:
                authorizations:
                    type: array
                    description: An array of authorized payments for a purchase unit. A purchase unit can have zero or more authorized payments.
                    items:
                        description: The authorized payment for a purchase unit.
                        $ref: '#/components/schemas/authorization_with_additional_data'
                captures:
                    type: array
                    description: An array of captured payments for a purchase unit. A purchase unit can have zero or more captured payments.
                    items:
                        description: The captured payment for a purchase unit.
                        $ref: '#/components/schemas/capture'
                refunds:
                    type: array
                    description: An array of refunds for a purchase unit. A purchase unit can have zero or more refunds.
                    items:
                        description: A refund for a purchase unit.
                        $ref: '#/components/schemas/refund'
        order_status:
            type: string
            description: The order status.
            title: Order Status
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            enum:
                - CREATED
                - SAVED
                - APPROVED
                - VOIDED
                - COMPLETED
                - PAYER_ACTION_REQUIRED
        orders.patch-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: FIELD_NOT_PATCHABLE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - FIELD_NOT_PATCHABLE
                                description:
                                    type: string
                                    enum:
                                        - Field cannot be patched.
                            - title: INVALID_ARRAY_MAX_ITEMS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_ARRAY_MAX_ITEMS
                                description:
                                    type: string
                                    enum:
                                        - The number of items in an array parameter is too large.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - The value of a field does not conform to the expected format.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is either too short or too long
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is invalid.
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - A required field / parameter is missing.
                            - title: AMOUNT_NOT_PATCHABLE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AMOUNT_NOT_PATCHABLE
                                description:
                                    type: string
                                    enum:
                                        - The amount cannot be updated as the 'payer' has chosen and approved a specific financing offer for a given amount. Please Create a new Order with the updated Order amount and have the 'payer' approve the new payment terms.
                            - title: INVALID_PATCH_OPERATION
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PATCH_OPERATION
                                description:
                                    type: string
                                    enum:
                                        - The operation cannot be honored. Cannot add a property that's already present, use replace. Cannot remove a property thats not present, use add. Cannot replace a property thats not present, use add.
                            - title: MALFORMED_REQUEST_JSON
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MALFORMED_REQUEST_JSON
                                description:
                                    type: string
                                    enum:
                                        - The request JSON is not well formed.
        orders.patch-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: AMOUNT_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AMOUNT_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - Should equal item_total + tax_total + shipping + handling + insurance - shipping_discount - discount.
                            - title: CANNOT_BE_NEGATIVE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_BE_NEGATIVE
                                description:
                                    type: string
                                    enum:
                                        - Must be greater than or equal to 0. If the currency supports decimals, only two decimal place precision is supported.
                            - title: CANNOT_BE_ZERO_OR_NEGATIVE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_BE_ZERO_OR_NEGATIVE
                                description:
                                    type: string
                                    enum:
                                        - Must be greater than zero. If the currency supports decimals, only two decimal place precision is supported.
                            - title: CITY_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CITY_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - The specified country requires a city (address.admin_area_2).
                            - title: DECIMAL_PRECISION
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DECIMAL_PRECISION
                                description:
                                    type: string
                                    enum:
                                        - If the currency supports decimals, only two decimal place precision is supported.
                            - title: DONATION_ITEMS_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DONATION_ITEMS_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - If 'purchase_unit' has "DONATION" as the 'items.category' then the Order can at most have one purchase_unit. Multiple purchase_units are not supported if either of them have at least one items with category as "DONATION".
                            - title: DUPLICATE_REFERENCE_ID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DUPLICATE_REFERENCE_ID
                                description:
                                    type: string
                                    enum:
                                        - '`reference_id` must be unique if multiple `purchase_unit` are provided.'
                            - title: INVALID_CURRENCY_CODE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_CURRENCY_CODE
                                description:
                                    type: string
                                    enum:
                                        - Currency code is invalid or is not currently supported. Please refer https://developer.paypal.com/api/rest/reference/currency-codes/ for list of supported currency codes.
                            - title: ITEM_TOTAL_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ITEM_TOTAL_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - Should equal sum of (unit_amount * quantity) across all items for a given purchase_unit.
                            - title: ITEM_TOTAL_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ITEM_TOTAL_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - If item details are specified (items.unit_amount and items.quantity) corresponding amount.breakdown.item_total is required.
                            - title: MAX_VALUE_EXCEEDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MAX_VALUE_EXCEEDED
                                description:
                                    type: string
                                    enum:
                                        - Should be less than or equal to 999999999999999.99.
                            - title: INVALID_JSON_POINTER_FORMAT
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_JSON_POINTER_FORMAT
                                description:
                                    type: string
                                    enum:
                                        - Path should be a valid JSON Pointer https://tools.ietf.org/html/rfc6901 that references a location within the request where the operation is performed.
                            - title: INVALID_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - Cannot be specified as part of the request.
                            - title: NOT_PATCHABLE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - NOT_PATCHABLE
                                description:
                                    type: string
                                    enum:
                                        - Cannot be patched.
                            - title: TAX_TOTAL_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TAX_TOTAL_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - Should equal sum of (tax * quantity) across all items for a given purchase_unit.
                            - title: TAX_TOTAL_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TAX_TOTAL_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - If item details are specified (items.tax_total and items.quantity) corresponding amount.breakdown.tax_total is required.
                            - title: UNSUPPORTED_INTENT
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - UNSUPPORTED_INTENT
                                description:
                                    type: string
                                    enum:
                                        - '`intent=AUTHORIZE` is not supported for multiple purchase units. Only `intent=CAPTURE` is supported.'
                            - title: UNSUPPORTED_PATCH_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - UNSUPPORTED_PATCH_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The value specified for this field is not currently supported.
                            - title: PATCH_VALUE_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PATCH_VALUE_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - Please specify a 'value' to for the field that is being patched.
                            - title: PATCH_PATH_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PATCH_PATH_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - Please specify a 'path' for the field for which the operation needs to be performed.
                            - title: PAYEE_ACCOUNT_LOCKED_OR_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYEE_ACCOUNT_LOCKED_OR_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - The merchant account is locked or closed.
                            - title: PAYEE_ACCOUNT_RESTRICTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYEE_ACCOUNT_RESTRICTED
                                description:
                                    type: string
                                    enum:
                                        - The merchant account is restricted.
                            - title: PAYEE_FX_RATE_ID_EXPIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYEE_FX_RATE_ID_EXPIRED
                                description:
                                    type: string
                                    enum:
                                        - The specified FX Rate ID has expired. Please specify a different FX Rate Id and try the request again. Alternately, remove the FX Rate ID to process the request using the default exchange rate.
                            - title: PAYEE_FX_RATE_ID_CURRENCY_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYEE_FX_RATE_ID_CURRENCY_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - The specified FX Rate ID is for a currency that does not match with the currency of this request. Please specify a different FX Rate ID and try the request again. Alternately, remove the FX Rate ID to process the request using the default exchange rate.
                            - title: INVALID_FX_RATE_ID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_FX_RATE_ID
                                description:
                                    type: string
                                    enum:
                                        - The specific FX Rate ID is not valid. This could be either because we are not able to look up the FX Rate based on this ID or it could be because the ID belongs to another API Caller.
                            - title: PLATFORM_FEES_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PLATFORM_FEES_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - The API Caller is not enabled to process transactions by specifying 'platform_fees'. Please work with your PayPal Account Manager to enable this option for your account.
                            - title: INVALID_PLATFORM_FEES_ACCOUNT
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PLATFORM_FEES_ACCOUNT
                                description:
                                    type: string
                                    enum:
                                        - The specified platform_fees payee account is either invalid or account setup is incomplete.Please work with your PayPal Account Manager to enable this option for your account.
                            - title: INVALID_PLATFORM_FEES_AMOUNT
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PLATFORM_FEES_AMOUNT
                                description:
                                    type: string
                                    enum:
                                        - The platform_fees amount cannot be greater than order amount.
                            - title: POSTAL_CODE_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - POSTAL_CODE_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - The specified country requires a postal code.
                            - title: REFERENCE_ID_NOT_FOUND
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REFERENCE_ID_NOT_FOUND
                                description:
                                    type: string
                                    enum:
                                        - Filter expression value is incorrect. Please check the value of the reference_id and try again.
                            - title: REFERENCE_ID_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REFERENCE_ID_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - '''reference_id'' is required for each ''purchase_unit'' if multiple ''purchase_unit'' are provided.'
                            - title: MULTI_CURRENCY_ORDER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MULTI_CURRENCY_ORDER
                                description:
                                    type: string
                                    enum:
                                        - Multiple differing values of currency_code are not supported. Entire Order request must have the same currency_code.
                            - title: SHIPPING_OPTION_NOT_SELECTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SHIPPING_OPTION_NOT_SELECTED
                                description:
                                    type: string
                                    enum:
                                        - At least one of the shipping.option should be set to 'selected = true'.
                            - title: SHIPPING_OPTIONS_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SHIPPING_OPTIONS_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - Shipping options are not supported when 'application_context.shipping_preference' is set as 'NO_SHIPPING' or 'SET_PROVIDED_ADDRESS'.
                            - title: MULTIPLE_SHIPPING_OPTION_SELECTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MULTIPLE_SHIPPING_OPTION_SELECTED
                                description:
                                    type: string
                                    enum:
                                        - Only one shipping.option can be set to 'selected = true'.
                            - title: ORDER_ALREADY_COMPLETED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ORDER_ALREADY_COMPLETED
                                description:
                                    type: string
                                    enum:
                                        - The order cannot be patched after it is completed.
                            - title: PREFERRED_SHIPPING_OPTION_AMOUNT_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PREFERRED_SHIPPING_OPTION_AMOUNT_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - The amount provided in the preferred shipping option should match the amount provided in amount breakdown
                            - title: AMOUNT_CHANGE_NOT_ALLOWED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AMOUNT_CHANGE_NOT_ALLOWED
                                description:
                                    type: string
                                    enum:
                                        - The amount specified is different from the amount authorized by payer.
        order_confirm_application_context:
            type: object
            title: Confirm Application Context
            description: Customizes the payer confirmation experience.
            properties:
                brand_name:
                    type: string
                    description: Label to present to your payer as part of the PayPal hosted web experience.
                    minLength: 1
                    maxLength: 127
                locale:
                    description: The BCP 47-formatted locale of pages that the PayPal payment experience shows. PayPal supports a five-character code. For example, `da-DK`, `he-IL`, `id-ID`, `ja-JP`, `no-NO`, `pt-BR`, `ru-RU`, `sv-SE`, `th-TH`, `zh-CN`, `zh-HK`, or `zh-TW`.
                    $ref: '#/components/schemas/language'
                return_url:
                    type: string
                    format: uri
                    minLength: 10
                    maxLength: 4000
                    description: The URL where the customer is redirected after the customer approves the payment.
                cancel_url:
                    type: string
                    format: uri
                    minLength: 10
                    maxLength: 4000
                    description: The URL where the customer is redirected after the customer cancels the payment.
                stored_payment_source:
                    $ref: '#/components/schemas/stored_payment_source'
        confirm_order_request:
            title: Confirm Order Request
            description: Payer confirms the intent to pay for the Order using the provided payment source.
            properties:
                payment_source:
                    $ref: '#/components/schemas/payment_source'
                processing_instruction:
                    $ref: '#/components/schemas/processing_instruction'
                application_context:
                    $ref: '#/components/schemas/order_confirm_application_context'
            required:
                - payment_source
        orders.confirm-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - The value of the field does not conform to the expected format.
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - A parameter value is not valid.
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - A required field / parameter is missing
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is either too short or too long
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is too long.
                            - title: MALFORMED_REQUEST_JSON
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MALFORMED_REQUEST_JSON
                                description:
                                    type: string
                                    enum:
                                        - The request JSON is not well formed.
        orders.confirm-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: ORDER_ALREADY_CAPTURED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ORDER_ALREADY_CAPTURED
                                description:
                                    type: string
                                    enum:
                                        - Order already captured. If 'intent=CAPTURE' only one capture per order is allowed.
                            - title: ORDER_ALREADY_AUTHORIZED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ORDER_ALREADY_AUTHORIZED
                                description:
                                    type: string
                                    enum:
                                        - Order already captured. If 'intent=CAPTURE' only one capture per order is allowed.
                            - title: ORDER_CANNOT_BE_CONFIRMED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ORDER_CANNOT_BE_CONFIRMED
                                description:
                                    type: string
                                    enum:
                                        - An order with status = 'COMPLETED' cannot be confirmed again.
                            - title: MISSING_PREVIOUS_REFERENCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_PREVIOUS_REFERENCE
                                description:
                                    type: string
                                    enum:
                                        - For Merchant initiated network token transactions, either the payment_source.card.stored_credential.previous_network_transaction_reference or payment_source.card.stored_credential.previous_transaction_reference must be included in the request.
                            - title: MISSING_CRYPTOGRAM
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_CRYPTOGRAM
                                description:
                                    type: string
                                    enum:
                                        - Cryptogram is mandatory for any customer initiated network token transactions.
                            - title: CURRENCY_NOT_SUPPORTED_FOR_COUNTRY
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CURRENCY_NOT_SUPPORTED_FOR_COUNTRY
                                description:
                                    type: string
                                    enum:
                                        - ' For the payment_source specified, the currency of the Order is restricted by the country in which the payee account is based. Please refer https://developer.paypal.com/api/rest/reference/currency-codes/ for list of supported currency codes.'
                            - title: CARD_EXPIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CARD_EXPIRED
                                description:
                                    type: string
                                    enum:
                                        - The card is expired
                            - title: CARD_TYPE_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CARD_TYPE_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - Processing of this card type is not supported. Use another card type.
                            - title: CURRENCY_NOT_SUPPORTED_FOR_CARD_TYPE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CURRENCY_NOT_SUPPORTED_FOR_CARD_TYPE
                                description:
                                    type: string
                                    enum:
                                        - The issued currency code of this card is not supported for direct card payments. Please refer https://developer.paypal.com/api/rest/reference/currency-codes/ for list of supported currency codes.
                            - title: ONLY_ONE_PAYMENT_SOURCE_ALLOWED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ONLY_ONE_PAYMENT_SOURCE_ALLOWED
                                description:
                                    type: string
                                    enum:
                                        - More than one payment method within the payment source is not supported.
                            - title: NO_PAYMENT_SOURCE_PROVIDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - NO_PAYMENT_SOURCE_PROVIDED
                                description:
                                    type: string
                                    enum:
                                        - At least one payment method is required within the payment source.
                            - title: PAYMENT_ALREADY_APPROVED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYMENT_ALREADY_APPROVED
                                description:
                                    type: string
                                    enum:
                                        - The payment has already been approved.  Please capture the order, or create and confirm a new order with this payment source.
                            - title: UNSUPPORTED_PROCESSING_INSTRUCTION
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - UNSUPPORTED_PROCESSING_INSTRUCTION
                                description:
                                    type: string
                                    enum:
                                        - The specified processing_instruction is not supported for the given payment_source. Please refer to https://developer.paypal.com/api/orders/v2/#definition-processing_instruction for the list of payment_source that can be specified with this value.
                            - title: ORDER_COMPLETE_ON_PAYMENT_APPROVAL
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ORDER_COMPLETE_ON_PAYMENT_APPROVAL
                                description:
                                    type: string
                                    enum:
                                        - A processing_instruction of `ORDER_COMPLETE_ON_PAYMENT_APPROVAL` is required for the specified payment_source.
                            - title: INVALID_EXPIRY_DATE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_EXPIRY_DATE
                                description:
                                    type: string
                                    enum:
                                        - Expiry date is invalid. Expiry date should be a date in future and within the threshold for the payment source.
                            - title: TOKEN_EXPIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TOKEN_EXPIRED
                                description:
                                    type: string
                                    enum:
                                        - The token is expired and cannot be used for payment.
                            - title: INVALID_GOOGLE_PAY_TOKEN
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_GOOGLE_PAY_TOKEN
                                description:
                                    type: string
                                    enum:
                                        - The google pay token is invalid. PayPal was not able to decrypt the googlepay token or PayPal was not able to find the necessary data in the token after decryption.
                            - title: GOOGLE_PAY_GATEWAY_MERCHANT_ID_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - GOOGLE_PAY_GATEWAY_MERCHANT_ID_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - The gateway merchant ID in Google Pay token is not valid. This could be because the gateway merchant Id that was authorized by payer/buyer on Google Pay does not match with the API caller of the order.
                            - title: CRYPTOGRAM_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CRYPTOGRAM_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - Cryptogram is required if authentication method is CRYPTOGRAM 3DS.
                            - title: ONE_OF_PARAMETERS_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ONE_OF_PARAMETERS_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - One or more field is required to continue with this request.
                            - title: RETURN_URL_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - RETURN_URL_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - The return url is required when attempting to vault this source.
                            - title: CANCEL_URL_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANCEL_URL_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - The cancel url is required when attempting to vault this source.
                            - title: COUNTRY_NOT_SUPPORTED_BY_PAYMENT_SOURCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - COUNTRY_NOT_SUPPORTED_BY_PAYMENT_SOURCE
                                description:
                                    type: string
                                    enum:
                                        - Country code provided is not supported by the provided payment source.
                            - title: REQUIRED_PARAMETER_FOR_PAYMENT_SOURCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REQUIRED_PARAMETER_FOR_PAYMENT_SOURCE
                                description:
                                    type: string
                                    enum:
                                        - The parameter is required for provided payment source.
                            - title: REQUIRED_PARAMETER_FOR_CUSTOMER_INITIATED_PAYMENT
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REQUIRED_PARAMETER_FOR_CUSTOMER_INITIATED_PAYMENT
                                description:
                                    type: string
                                    enum:
                                        - This parameter is required when the customer is present. If the customer is not present, indicate so by sending payment_initiator=`MERCHANT`. For details, see <a href="https://developer.paypal.com/docs/api/orders/v2/#definition-card_stored_credential">Stored Credential</a>.
                            - title: ITEM_CATEGORY_NOT_SUPPORTED_BY_PAYMENT_SOURCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ITEM_CATEGORY_NOT_SUPPORTED_BY_PAYMENT_SOURCE
                                description:
                                    type: string
                                    enum:
                                        - The provided payment source does not support provided item category.
                            - title: PAYMENT_SOURCE_INFO_CANNOT_BE_VERIFIED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYMENT_SOURCE_INFO_CANNOT_BE_VERIFIED
                                description:
                                    type: string
                                    enum:
                                        - The combination of the payment_source name, billing address, shipping name and shipping address could not be verified. Please correct this information and try again by creating a new order.
                            - title: PAYMENT_SOURCE_DECLINED_BY_PROCESSOR
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYMENT_SOURCE_DECLINED_BY_PROCESSOR
                                description:
                                    type: string
                                    enum:
                                        - The provided payment source is declined by the processor. Please try again with a different payment source by creating a new order.
                            - title: PAYMENT_SOURCE_CANNOT_BE_USED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYMENT_SOURCE_CANNOT_BE_USED
                                description:
                                    type: string
                                    enum:
                                        - The provided payment source cannot be used to pay for the order. Please try again with a different payment source by creating a new order.
                            - title: SETUP_ERROR_FOR_BANK
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SETUP_ERROR_FOR_BANK
                                description:
                                    type: string
                                    enum:
                                        - The API Caller account setup, for bank payments, is incomplete or incorrect. Please contact your PayPal account manager.
                            - title: BANK_NOT_SUPPORTED_FOR_VERIFICATION
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - BANK_NOT_SUPPORTED_FOR_VERIFICATION
                                description:
                                    type: string
                                    enum:
                                        - Verification for this bank account is not supported.
                            - title: APPLE_PAY_AMOUNT_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - APPLE_PAY_AMOUNT_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - The 'amount' specified in the Order should match the amount that was viewed and authorized by the payer/buyer on Apple Pay. If the amount has changed, please redirect the buyer to authorize the order again via Apple Pay.
                            - title: ONE_OF_THE_PARAMETERS_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ONE_OF_THE_PARAMETERS_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - One or more field is required to continue with this request.
                            - title: BILLING_ADDRESS_INVALID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - BILLING_ADDRESS_INVALID
                                description:
                                    type: string
                                    enum:
                                        - Provided billing address is invalid.
                            - title: SHIPPING_ADDRESS_INVALID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SHIPPING_ADDRESS_INVALID
                                description:
                                    type: string
                                    enum:
                                        - Provided shipping address is invalid.
                            - title: ORDER_IS_PENDING_APPROVAL
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ORDER_IS_PENDING_APPROVAL
                                description:
                                    type: string
                                    enum:
                                        - The order was confirmed and payer action completed but order approval processing from PayPal is pending. No action is needed from Payee or Payer. Please wait until order status changes to 'APPROVED'.
                            - title: DEVICE_DATA_NOT_AVAILABLE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DEVICE_DATA_NOT_AVAILABLE
                                description:
                                    type: string
                                    enum:
                                        - Device Data is not available for processing this order. The PayPal-Client-Metadata-Id header value sent during `Create Order` api call is either missing or incorrect or there was an error in collecting required data. Please verify if appropriate value for PayPal-Client-Metadata-Id header is being sent during 'Create Order' api call. Please note this error only applies to payment_source.pay_upon_invoice at the moment.
                            - title: CURRENCY_NOT_SUPPORTED_FOR_BANK
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CURRENCY_NOT_SUPPORTED_FOR_BANK
                                description:
                                    type: string
                                    enum:
                                        - The payment_source does not support the currency of the Order. For ACH debit, only USD is supported and for SEPA debit, only EUR is supported.
                            - title: ONLY_ONE_BANK_SOURCE_ALLOWED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ONLY_ONE_BANK_SOURCE_ALLOWED
                                description:
                                    type: string
                                    enum:
                                        - More than one payment method within the bank payment object is not supported.
                            - title: INVALID_IBAN
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_IBAN
                                description:
                                    type: string
                                    enum:
                                        - IBAN provided is not a valid bank account number.
                            - title: IBAN_COUNTRY_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - IBAN_COUNTRY_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - Country code of issuer bank for the provided IBAN is not supported for SEPA debit payments.
                            - title: PAYEE_COUNTRY_NOT_SUPPORTED_FOR_PAYMENT_SOURCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYEE_COUNTRY_NOT_SUPPORTED_FOR_PAYMENT_SOURCE
                                description:
                                    type: string
                                    enum:
                                        - Payee country code is not supported by the provided payment source.
                            - title: CARD_NUMBER_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CARD_NUMBER_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - The card number is required when attempting to process payment with card.
                            - title: CARD_EXPIRY_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CARD_EXPIRY_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - The card expiry is required when attempting to process payment with card.
                            - title: INCOMPATIBLE_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INCOMPATIBLE_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The value of the field is incompatible/redundant with other fields in the order.
                            - title: VAULT_INSTRUCTION_DUPLICATED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - VAULT_INSTRUCTION_DUPLICATED
                                description:
                                    type: string
                                    enum:
                                        - Only one vault instruction is allowed. Please use `vault.store_in_vault` to provide vault instruction.
                            - title: VAULT_INSTRUCTION_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - VAULT_INSTRUCTION_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - Vault instruction is required. Please use `vault.store_in_vault` to provide vault instruction.
                            - title: MISMATCHED_VAULT_ID_TO_PAYMENT_SOURCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISMATCHED_VAULT_ID_TO_PAYMENT_SOURCE
                                description:
                                    type: string
                                    enum:
                                        - The vault_id does not match the payment_source provided. Please verify that the vault_id token used refers to the matching payment_source and try again. For example, a PayPal token cannot be passed in the vault_id field in the payment_source.card object.
                            - title: NOT_ELIGIBLE_FOR_PNREF_PROCESSING
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - NOT_ELIGIBLE_FOR_PNREF_PROCESSING
                                description:
                                    type: string
                                    enum:
                                        - API caller is not enabled to process payments with the `pnref`. Please contact customer support to request permissions to process transactions with PNREF.
                            - title: NOT_ELIGIBLE_FOR_PAYPAL_TRANSACTION_ID_PROCESSING
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - NOT_ELIGIBLE_FOR_PAYPAL_TRANSACTION_ID_PROCESSING
                                description:
                                    type: string
                                    enum:
                                        - API caller is not enable to process payments using `paypal_transaction_id`. Please contact customer support to request permissions to process transactions with PayPal transaction ID.
                            - title: PAYPAL_TRANSACTION_ID_NOT_FOUND
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYPAL_TRANSACTION_ID_NOT_FOUND
                                description:
                                    type: string
                                    enum:
                                        - Specified `paypal_transaction_id` was not found. Verify the value and try the request again.
                            - title: PNREF_NOT_FOUND
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PNREF_NOT_FOUND
                                description:
                                    type: string
                                    enum:
                                        - Specified `pnref` was not found. Verify the value and try the request again.
                            - title: INVALID_SECURITY_CODE_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_SECURITY_CODE_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The security_code length is invalid for the specified card brand.
                            - title: NOT_ENABLED_TO_VAULT_PAYMENT_SOURCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - NOT_ENABLED_TO_VAULT_PAYMENT_SOURCE
                                description:
                                    type: string
                                    enum:
                                        - The API caller or the merchant on whose behalf the API call is initiated is not allowed to vault the given source. Please contact PayPal customer support for assistance.
                            - title: CRYPTOGRAM_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CRYPTOGRAM_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - Cryptogram is required if authentication method is CRYPTOGRAM 3DS.
                            - title: EMV_DATA_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - EMV_DATA_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - EMV Data is required if authentication method is EMV.
                            - title: ALIAS_DECLINED_BY_PROCESSOR
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ALIAS_DECLINED_BY_PROCESSOR
                                description:
                                    type: string
                                    enum:
                                        - The provided alias was declined by the processor. Please create a new order with a different alias_key and/or alias_label and try again.
                            - title: BLIK_ONE_CLICK_MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - BLIK_ONE_CLICK_MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - Blik's one_click flow requires one_click.auth_code and one_click.alias_label parameters for the buyer's first transaction. For all subsequent transactions,only the one_click.alias_key parameter is required.
                            - title: TRANSACTION_LIMIT_EXCEEDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TRANSACTION_LIMIT_EXCEEDED
                                description:
                                    type: string
                                    enum:
                                        - Total payment amount exceeded transaction limit.
        order_authorize_request:
            type: object
            title: Authorize Request
            description: The authorization of an order request.
            properties:
                payment_source:
                    description: The source of payment for the order, which can be a token or a card. Use this object only if you have not redirected the user after order creation to approve the payment. In such cases, the user-selected payment method in the PayPal flow is implicitly used.
                    $ref: '#/components/schemas/payment_source'
        order_authorize_response:
            type: object
            title: Order
            description: The order authorize response.
            allOf:
                - $ref: '#/components/schemas/activity_timestamps'
                - properties:
                    id:
                        type: string
                        description: The ID of the order.
                        readOnly: true
                    payment_source:
                        $ref: '#/components/schemas/payment_source_response'
                    intent:
                        $ref: '#/components/schemas/checkout_payment_intent'
                    processing_instruction:
                        $ref: '#/components/schemas/processing_instruction'
                    payer:
                        $ref: '#/components/schemas/payer'
                    purchase_units:
                        type: array
                        description: An array of purchase units. Each purchase unit establishes a contract between a customer and merchant. Each purchase unit represents either a full or partial order that the customer intends to purchase from the merchant.
                        minItems: 1
                        maxItems: 10
                        items:
                            $ref: '#/components/schemas/purchase_unit'
                            description: A purchase unit. Establishes a contract between a customer and merchant.
                    status:
                        $ref: '#/components/schemas/order_status'
                        readOnly: true
                    links:
                        type: array
                        description: An array of request-related HATEOAS links. To complete payer approval, use the `approve` link to redirect the payer. The API caller has 3 hours (default setting, this which can be changed by your account manager to 24/48/72 hours to accommodate your use case) from the time the order is created, to redirect your payer. Once redirected, the API caller has 3 hours for the payer to approve the order and either authorize or capture the order. If you are not using the PayPal JavaScript SDK to initiate PayPal Checkout (in context) ensure that you include `application_context.return_url` is specified or you will get "We're sorry, Things don't appear to be working at the moment" after the payer approves the payment.
                        readOnly: true
                        items:
                            $ref: '#/components/schemas/link_description'
                            description: A request-related [HATEOAS link](/api/rest/responses/#hateoas-links). To complete payer approval, use the `approve` link with the `GET` method.
        orders.authorize-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_COUNTRY_CODE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_COUNTRY_CODE
                                description:
                                    type: string
                                    enum:
                                        - Country code is invalid. Please refer to https://developer.paypal.com/api/rest/reference/country-codes/ for a list of supported country codes.
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - A parameter value is not valid.
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - A required field / parameter is missing
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is either too short or too long
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - The value of a field does not conform to the expected format.
                            - title: MALFORMED_REQUEST_JSON
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MALFORMED_REQUEST_JSON
                                description:
                                    type: string
                                    enum:
                                        - The request JSON is not well formed.
        orders.authorize-403:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: NOT_ELIGIBLE_FOR_TOKEN_PROCESSING
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - NOT_ELIGIBLE_FOR_TOKEN_PROCESSING
                                description:
                                    type: string
                                    enum:
                                        - API caller is not enabled to process payments with the specified type of token. Please contact customer support to request permissions to process transactions with this type of token.
                            - title: PERMISSION_DENIED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PERMISSION_DENIED
                                description:
                                    type: string
                                    enum:
                                        - You do not have permission to access or perform operations on this resource.
                            - title: PERMISSION_DENIED_FOR_DONATION_ITEMS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PERMISSION_DENIED_FOR_DONATION_ITEMS
                                description:
                                    type: string
                                    enum:
                                        - The API Caller or Payee have not been granted appropriate permissions to send 'items.category' as 'DONATION'. Please speak to your account manager if you want to process these type of items.
        orders.authorize-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: ACTION_DOES_NOT_MATCH_INTENT
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ACTION_DOES_NOT_MATCH_INTENT
                                description:
                                    type: string
                                    enum:
                                        - Order was created with an intent to 'CAPTURE'. Please use v2/checkout/orders/order_id/capture to complete the transaction or alternately Create an order with an intent of 'AUTHORIZE'.
                            - title: AGREEMENT_ALREADY_CANCELLED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AGREEMENT_ALREADY_CANCELLED
                                description:
                                    type: string
                                    enum:
                                        - The requested agreement is already canceled.
                            - title: BILLING_AGREEMENT_NOT_FOUND
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - BILLING_AGREEMENT_NOT_FOUND
                                description:
                                    type: string
                                    enum:
                                        - The requested Billing Agreement token was not found.
                            - title: MISSING_PREVIOUS_REFERENCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_PREVIOUS_REFERENCE
                                description:
                                    type: string
                                    enum:
                                        - For Merchant initiated network token transactions, either the payment_source.card.stored_credential.previous_network_transaction_reference or payment_source.card.stored_credential.previous_transaction_reference must be included in the request.
                            - title: MISSING_CRYPTOGRAM
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_CRYPTOGRAM
                                description:
                                    type: string
                                    enum:
                                        - Cryptogram is mandatory for any customer initiated network token transactions.
                            - title: CARD_BRAND_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CARD_BRAND_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - Processing of this card brand is not supported. Please use another card to continue with this transaction.
                            - title: DECLINED_DUE_TO_RELATED_TXN
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DECLINED_DUE_TO_RELATED_TXN
                                description:
                                    type: string
                                    enum:
                                        - One or more transactions in this Order did not succeed. Since this Order is being processed as an All or None Order, if one or more transactions in this Order do not succeed, then all purchase units are marked declined and will not be processed.
                            - title: DOMESTIC_TRANSACTION_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DOMESTIC_TRANSACTION_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - This transaction requires the payee and payer to be resident in the same country, a domestic transaction is required to create this payment.
                            - title: DUPLICATE_INVOICE_ID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DUPLICATE_INVOICE_ID
                                description:
                                    type: string
                                    enum:
                                        - Duplicate Invoice ID detected. To avoid a potential duplicate transaction your account setting requires that Invoice Id be unique for each transaction.
                            - title: ORDER_NOT_APPROVED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ORDER_NOT_APPROVED
                                description:
                                    type: string
                                    enum:
                                        - Payer has not yet approved the Order for payment. Please redirect the payer to the 'rel':'approve' url returned as part of the HATEOAS links within the Create Order call.
                            - title: MAX_NUMBER_OF_PAYMENT_ATTEMPTS_EXCEEDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MAX_NUMBER_OF_PAYMENT_ATTEMPTS_EXCEEDED
                                description:
                                    type: string
                                    enum:
                                        - You have exceeded the maximum number of payment attempts.
                            - title: PAYEE_BLOCKED_TRANSACTION
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYEE_BLOCKED_TRANSACTION
                                description:
                                    type: string
                                    enum:
                                        - The Fraud settings for this seller are such that this payment cannot be executed.
                            - title: PAYEE_FX_RATE_ID_EXPIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYEE_FX_RATE_ID_EXPIRED
                                description:
                                    type: string
                                    enum:
                                        - The specified FX Rate ID has expired. Please specify a different FX Rate Id and try the request again. Alternately, remove the FX Rate ID to process the request using the default exchange rate.
                            - title: UNSUPPORTED_INTENT_FOR_PAYMENT_SOURCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - UNSUPPORTED_INTENT_FOR_PAYMENT_SOURCE
                                description:
                                    type: string
                                    enum:
                                        - '`intent=AUTHORIZE` is not supported for the specified payment_source. Only `intent=CAPTURE` is supported.'
                            - title: PAYER_ACCOUNT_LOCKED_OR_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYER_ACCOUNT_LOCKED_OR_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - The payer account cannot be used for this transaction.
                            - title: PAYER_ACCOUNT_RESTRICTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYER_ACCOUNT_RESTRICTED
                                description:
                                    type: string
                                    enum:
                                        - PAYER_ACCOUNT_RESTRICTED
                            - title: PAYER_CANNOT_PAY
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYER_CANNOT_PAY
                                description:
                                    type: string
                                    enum:
                                        - Payer cannot pay for this transaction. Please contact the payer to find other ways to pay for this transaction.
                            - title: PAYPAL_TRANSACTION_ID_EXPIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYPAL_TRANSACTION_ID_EXPIRED
                                description:
                                    type: string
                                    enum:
                                        - Specified `paypal_transaction_id` has expired. PayPal transaction ID expires 4 years after the date of the initial transaction.
                            - title: PNREF_EXPIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PNREF_EXPIRED
                                description:
                                    type: string
                                    enum:
                                        - Specified `pnref` has expired. PNREF expires 15 months after the date of the initial transaction.
                            - title: REFERENCED_CARD_EXPIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REFERENCED_CARD_EXPIRED
                                description:
                                    type: string
                                    enum:
                                        - The card underlying the token has expired and hence cannot be used to process a payment.
                            - title: TOKEN_EXPIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TOKEN_EXPIRED
                                description:
                                    type: string
                                    enum:
                                        - The token is expired and cannot be used for payment.
                            - title: TOKEN_ID_NOT_FOUND
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TOKEN_ID_NOT_FOUND
                                description:
                                    type: string
                                    enum:
                                        - Specified token was not found. Verify the token and try the request again.
                            - title: TRANSACTION_LIMIT_EXCEEDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TRANSACTION_LIMIT_EXCEEDED
                                description:
                                    type: string
                                    enum:
                                        - Total payment amount exceeded transaction limit.
                            - title: TRANSACTION_RECEIVING_LIMIT_EXCEEDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TRANSACTION_RECEIVING_LIMIT_EXCEEDED
                                description:
                                    type: string
                                    enum:
                                        - The transaction exceeds the receiver's receiving limit.
                            - title: TRANSACTION_REFUSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TRANSACTION_REFUSED
                                description:
                                    type: string
                                    enum:
                                        - The request was refused.
                            - title: ORDER_ALREADY_AUTHORIZED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ORDER_ALREADY_AUTHORIZED
                                description:
                                    type: string
                                    enum:
                                        - Order already authorized.If 'intent=AUTHORIZE' only one authorization per order is allowed.
                            - title: AUTH_CAPTURE_NOT_ENABLED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AUTH_CAPTURE_NOT_ENABLED
                                description:
                                    type: string
                                    enum:
                                        - Authorization and Capture feature is not enabled for the merchant. Make sure that the recipient of the funds is a verified business account.
                            - title: AMOUNT_CANNOT_BE_SPECIFIED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AMOUNT_CANNOT_BE_SPECIFIED
                                description:
                                    type: string
                                    enum:
                                        - An authorization amount can only be specified if an Order has been saved by calling /v2/checkout/orders/{order_id}/save.  Please save the order and try again.
                            - title: AUTHORIZATION_AMOUNT_EXCEEDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AUTHORIZATION_AMOUNT_EXCEEDED
                                description:
                                    type: string
                                    enum:
                                        - Authorization amount specified exceeded allowable limit. Specify a different amount and try the request again. Alternately, contact Customer Support to increase your limits. Local regulations (e.g. in PSD2 countries) prohibit overages above the amount authorized by the payer.
                            - title: AUTHORIZATION_CURRENCY_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AUTHORIZATION_CURRENCY_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - The currency of the authorization should be same as that in which the Order was created and approved by the Payer. Please check the 'currency_code' and try again.
                            - title: MAX_AUTHORIZATION_COUNT_EXCEEDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MAX_AUTHORIZATION_COUNT_EXCEEDED
                                description:
                                    type: string
                                    enum:
                                        - Maximum number of authorization allowed for the order is reached. Please contact Customer Support if you need to increase your limit.
                            - title: ORDER_COMPLETED_OR_VOIDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ORDER_COMPLETED_OR_VOIDED
                                description:
                                    type: string
                                    enum:
                                        - Order is voided or completed and hence cannot be authorized.
                            - title: ORDER_EXPIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ORDER_EXPIRED
                                description:
                                    type: string
                                    enum:
                                        - Order is expired and hence cannot be authorized. Please contact Customer Support if you need to increase your order validity period.
                            - title: INVALID_PICKUP_ADDRESS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PICKUP_ADDRESS
                                description:
                                    type: string
                                    enum:
                                        - 'If the ''shipping_option.type'' is set as ''PICKUP'' then the ''shipping_detail.name.full_name'' should start with ''S2S'' meaning Ship To Store. Example: ''S2S My Store''.'
                            - title: SHIPPING_ADDRESS_INVALID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SHIPPING_ADDRESS_INVALID
                                description:
                                    type: string
                                    enum:
                                        - Provided shipping address is invalid.
                            - title: PAYMENT_TYPE_NOT_SUPPORTED_FOR_INTENT
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYMENT_TYPE_NOT_SUPPORTED_FOR_INTENT
                                description:
                                    type: string
                                    enum:
                                        - Provided payment type not supported for order intent. Payment authorizations are supported only for order with `intent=AUTHORIZE` and payment captures are supported only for order with `intent=CAPTURE`.
                            - title: BILLING_AGREEMENT_ID_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - BILLING_AGREEMENT_ID_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - Billing Agreement ID must exactly match the Billing Agreement ID that was provided during order creation.
                            - title: PREFERRED_PAYMENT_SOURCE_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PREFERRED_PAYMENT_SOURCE_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - Payment Source must exactly match the Preferred Payment Source that was provided during order creation.
                            - title: INCOMPATIBLE_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INCOMPATIBLE_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The value of the field is incompatible/redundant with other fields in the order.
                            - title: INVALID_PREVIOUS_TRANSACTION_REFERENCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PREVIOUS_TRANSACTION_REFERENCE
                                description:
                                    type: string
                                    enum:
                                        - The authorization or capture referenced by `previous_transaction_reference` is not valid. This could be either because the previous_transaction_reference is not found or doesn't belong to the payee. Please use a valid `previous_transaction_reference`.
                            - title: PREVIOUS_TRANSACTION_REFERENCE_HAS_CHARGEBACK
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PREVIOUS_TRANSACTION_REFERENCE_HAS_CHARGEBACK
                                description:
                                    type: string
                                    enum:
                                        - The capture referenced by `previous_transaction_reference` has a chargeback and hence cannot be used for this order. Please use a `previous_transaction_reference` which does not have a chargeback.
                            - title: PREVIOUS_TRANSACTION_REFERENCE_VOIDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PREVIOUS_TRANSACTION_REFERENCE_VOIDED
                                description:
                                    type: string
                                    enum:
                                        - The status of authorization referenced by `previous_transaction_reference` is `VOIDED` and hence cannot be used for this order. Please use a `previous_transaction_reference` whose status is not `VOIDED`.
                            - title: PAYMENT_SOURCE_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYMENT_SOURCE_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - The `payment_source` in the request must match the `payment_source` used for the authorization or capture referenced by `previous_transaction_reference`. Please use `previous_transaction_reference` whose `payment_source` matches with the `payment_source` specified in the order.
                            - title: MERCHANT_INITIATED_WITH_SECURITY_CODE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MERCHANT_INITIATED_WITH_SECURITY_CODE
                                description:
                                    type: string
                                    enum:
                                        - '`stored_payment_source.payment_initiator` = `MERCHANT` is not supported if `payment_source.card.security_code` is present in the order. `security_code` can be present in the order only when customer is the payment initiator. It is semantically incorrect to perform a merchant initiated payment with `security_code` is the order.'
                            - title: MERCHANT_INITIATED_WITH_AUTHENTICATION_RESULTS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MERCHANT_INITIATED_WITH_AUTHENTICATION_RESULTS
                                description:
                                    type: string
                                    enum:
                                        - '`stored_payment_source.payment_initiator` = `MERCHANT` is not supported if 3D-Secure authentication results are present in the order. 3D-Secure authentication results can be present in the order only when customer is the payment initiator. It is semantically incorrect to perform a merchant initiated payment with 3D-Secure authentication results is the order.'
                            - title: MERCHANT_INITIATED_WITH_MULTIPLE_PURCHASE_UNITS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MERCHANT_INITIATED_WITH_MULTIPLE_PURCHASE_UNITS
                                description:
                                    type: string
                                    enum:
                                        - '`stored_payment_source.payment_initiator` = `MERCHANT` is not supported if more than one purchase_unit is present in the Order. Merchant initiated payments are not supported from orders with more than one purchase_unit. Please retry the request with multiple Order requests (one for each purchase_unit).'
                            - title: RETURN_URL_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - RETURN_URL_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - The return url is required when attempting to vault this source.
                            - title: CANCEL_URL_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANCEL_URL_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - The cancel url is required when attempting to vault this source.
                            - title: PAYER_ACTION_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYER_ACTION_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - Transaction cannot complete successfully, instruct the buyer to return to PayPal.
                            - title: APPLE_PAY_AMOUNT_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - APPLE_PAY_AMOUNT_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - The 'amount' specified in the Order should match the amount that was viewed and authorized by the payer/buyer on Apple Pay. If the amount has changed, please redirect the buyer to authorize the order again via Apple Pay.
                            - title: CARD_NUMBER_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CARD_NUMBER_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - The card number is required when attempting to process payment with card.
                            - title: CARD_EXPIRY_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CARD_EXPIRY_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - The card expiry is required when attempting to process payment with card.
                            - title: VAULT_INSTRUCTION_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - VAULT_INSTRUCTION_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - Vault instruction is required. Please use `vault.store_in_vault` to provide vault instruction.
                            - title: MISMATCHED_VAULT_ID_TO_PAYMENT_SOURCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISMATCHED_VAULT_ID_TO_PAYMENT_SOURCE
                                description:
                                    type: string
                                    enum:
                                        - The vault_id does not match the payment_source provided. Please verify that the vault_id token used refers to the matching payment_source and try again. For example, a PayPal token cannot be passed in the vault_id field in the payment_source.card object.
                            - title: ORDER_CANNOT_BE_SAVED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ORDER_CANNOT_BE_SAVED
                                description:
                                    type: string
                                    enum:
                                        - The option to save an order is only available if the `intent` is AUTHORIZE and `processing_instruction` uses one of the `ORDER_SAVED` options. For example, `intent`=AUTHORIZE, `processing_instruction`=ORDER_SAVED_EXPLICITLY. Please change the intent and/or processing_instruction` and try again.
                            - title: SAVE_ORDER_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SAVE_ORDER_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - The API caller account is setup in a way that does not allow it to be used for saving the order. This functionality is not available for PayPal Commerce Platform for Platforms & Marketplaces.
                            - title: NOT_ELIGIBLE_FOR_PNREF_PROCESSING
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - NOT_ELIGIBLE_FOR_PNREF_PROCESSING
                                description:
                                    type: string
                                    enum:
                                        - API caller is not enabled to process payments with the `pnref`. Please contact customer support to request permissions to process transactions with PNREF.
                            - title: NOT_ELIGIBLE_FOR_PAYPAL_TRANSACTION_ID_PROCESSING
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - NOT_ELIGIBLE_FOR_PAYPAL_TRANSACTION_ID_PROCESSING
                                description:
                                    type: string
                                    enum:
                                        - API caller is not enable to process payments using `paypal_transaction_id`. Please contact customer support to request permissions to process transactions with PayPal transaction ID.
                            - title: PAYPAL_TRANSACTION_ID_NOT_FOUND
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYPAL_TRANSACTION_ID_NOT_FOUND
                                description:
                                    type: string
                                    enum:
                                        - Specified `paypal_transaction_id` was not found. Verify the value and try the request again.
                            - title: PNREF_NOT_FOUND
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PNREF_NOT_FOUND
                                description:
                                    type: string
                                    enum:
                                        - Specified `pnref` was not found. Verify the value and try the request again.
                            - title: INVALID_SECURITY_CODE_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_SECURITY_CODE_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The security_code length is invalid for the specified card brand.
                            - title: REQUIRED_PARAMETER_FOR_CUSTOMER_INITIATED_PAYMENT
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REQUIRED_PARAMETER_FOR_CUSTOMER_INITIATED_PAYMENT
                                description:
                                    type: string
                                    enum:
                                        - This parameter is required when the customer is present. If the customer is not present, indicate so by sending payment_initiator=`MERCHANT`. For details, see <a href="https://developer.paypal.com/docs/api/orders/v2/#definition-card_stored_credential">Stored Credential</a>.
        order_capture_request:
            type: object
            title: Order Capture Request
            description: Completes an capture payment for an order.
            properties:
                payment_source:
                    $ref: '#/components/schemas/payment_source'
        orders.capture-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - A parameter value is not valid.
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - A required field / parameter is missing
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is either too short or too long
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - The value of a field does not conform to the expected format.
                            - title: MALFORMED_REQUEST_JSON
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MALFORMED_REQUEST_JSON
                                description:
                                    type: string
                                    enum:
                                        - The request JSON is not well formed.
        orders.capture-403:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: CONSENT_NEEDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CONSENT_NEEDED
                                description:
                                    type: string
                                    enum:
                                        - CONSENT_NEEDED
                            - title: NOT_ELIGIBLE_FOR_TOKEN_PROCESSING
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - NOT_ELIGIBLE_FOR_TOKEN_PROCESSING
                                description:
                                    type: string
                                    enum:
                                        - API caller is not enabled to process payments with the specified type of token. Please contact customer support to request permissions to process transactions with this type of token.
                            - title: PERMISSION_DENIED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PERMISSION_DENIED
                                description:
                                    type: string
                                    enum:
                                        - You do not have permission to access or perform operations on this resource.
                            - title: PERMISSION_DENIED_FOR_DONATION_ITEMS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PERMISSION_DENIED_FOR_DONATION_ITEMS
                                description:
                                    type: string
                                    enum:
                                        - The API Caller or Payee have not been granted appropriate permissions to send 'items.category' as 'DONATION'. Please speak to your account manager if you want to process these type of items.
        orders.capture-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: AGREEMENT_ALREADY_CANCELLED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AGREEMENT_ALREADY_CANCELLED
                                description:
                                    type: string
                                    enum:
                                        - The requested agreement is already canceled.
                            - title: BILLING_AGREEMENT_NOT_FOUND
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - BILLING_AGREEMENT_NOT_FOUND
                                description:
                                    type: string
                                    enum:
                                        - The requested Billing Agreement token was not found.
                            - title: DECLINED_DUE_TO_RELATED_TXN
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DECLINED_DUE_TO_RELATED_TXN
                                description:
                                    type: string
                                    enum:
                                        - One or more transactions in this Order did not succeed. Since this Order is being processed as an All or None Order, if one or more transactions in this Order do not succeed, then all purchase units are marked declined and will not be processed.
                            - title: MISSING_PREVIOUS_REFERENCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_PREVIOUS_REFERENCE
                                description:
                                    type: string
                                    enum:
                                        - For Merchant initiated network token transactions, either the payment_source.card.stored_credential.previous_network_transaction_reference or payment_source.card.stored_credential.previous_transaction_reference must be included in the request.
                            - title: MISSING_CRYPTOGRAM
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_CRYPTOGRAM
                                description:
                                    type: string
                                    enum:
                                        - Cryptogram is mandatory for any customer initiated network token transactions.
                            - title: CARD_BRAND_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CARD_BRAND_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - Processing of this card brand is not supported. Please use another card to continue with this transaction.
                            - title: COMPLIANCE_VIOLATION
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - COMPLIANCE_VIOLATION
                                description:
                                    type: string
                                    enum:
                                        - Transaction is declined due to compliance violation.
                            - title: DOMESTIC_TRANSACTION_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DOMESTIC_TRANSACTION_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - This transaction requires the payee and payer to be resident in the same country, a domestic transaction is required to create this payment.
                            - title: DUPLICATE_INVOICE_ID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DUPLICATE_INVOICE_ID
                                description:
                                    type: string
                                    enum:
                                        - Duplicate Invoice ID detected. To avoid a potential duplicate transaction your account setting requires that Invoice Id be unique for each transaction.
                            - title: INSTRUMENT_DECLINED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INSTRUMENT_DECLINED
                                description:
                                    type: string
                                    enum:
                                        - The instrument presented  was either declined by the processor or bank, or it can't be used for this payment.
                            - title: ORDER_NOT_APPROVED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ORDER_NOT_APPROVED
                                description:
                                    type: string
                                    enum:
                                        - Payer has not yet approved the Order for payment. Please redirect the payer to the 'rel':'approve' url returned as part of the HATEOAS links within the Create Order call or provide a valid `payment_source` in the request.
                            - title: MAX_NUMBER_OF_PAYMENT_ATTEMPTS_EXCEEDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MAX_NUMBER_OF_PAYMENT_ATTEMPTS_EXCEEDED
                                description:
                                    type: string
                                    enum:
                                        - You have exceeded the maximum number of payment attempts.
                            - title: PAYEE_BLOCKED_TRANSACTION
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYEE_BLOCKED_TRANSACTION
                                description:
                                    type: string
                                    enum:
                                        - The Fraud settings for this seller are such that this payment cannot be executed.
                            - title: PAYEE_FX_RATE_ID_EXPIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYEE_FX_RATE_ID_EXPIRED
                                description:
                                    type: string
                                    enum:
                                        - The specified FX Rate ID has expired. Please specify a different FX Rate Id and try the request again. Alternately, remove the FX Rate ID to process the request using the default exchange rate.
                            - title: PAYER_ACCOUNT_LOCKED_OR_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYER_ACCOUNT_LOCKED_OR_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - The payer account cannot be used for this transaction.
                            - title: PAYER_ACCOUNT_RESTRICTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYER_ACCOUNT_RESTRICTED
                                description:
                                    type: string
                                    enum:
                                        - PAYER_ACCOUNT_RESTRICTED
                            - title: PAYER_CANNOT_PAY
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYER_CANNOT_PAY
                                description:
                                    type: string
                                    enum:
                                        - Payer cannot pay for this transaction. Please contact the payer to find other ways to pay for this transaction.
                            - title: PAYPAL_TRANSACTION_ID_EXPIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYPAL_TRANSACTION_ID_EXPIRED
                                description:
                                    type: string
                                    enum:
                                        - Specified `paypal_transaction_id` has expired. PayPal transaction ID expires 4 years after the date of the initial transaction.
                            - title: PNREF_EXPIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PNREF_EXPIRED
                                description:
                                    type: string
                                    enum:
                                        - Specified `pnref` has expired. PNREF expires 15 months after the date of the initial transaction.
                            - title: REFERENCED_CARD_EXPIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REFERENCED_CARD_EXPIRED
                                description:
                                    type: string
                                    enum:
                                        - The card underlying the token has expired and hence cannot be used to process a payment.
                            - title: TOKEN_ID_NOT_FOUND
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TOKEN_ID_NOT_FOUND
                                description:
                                    type: string
                                    enum:
                                        - Specified token was not found. Verify the token and try the request again.
                            - title: TRANSACTION_LIMIT_EXCEEDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TRANSACTION_LIMIT_EXCEEDED
                                description:
                                    type: string
                                    enum:
                                        - Total payment amount exceeded transaction limit.
                            - title: TRANSACTION_RECEIVING_LIMIT_EXCEEDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TRANSACTION_RECEIVING_LIMIT_EXCEEDED
                                description:
                                    type: string
                                    enum:
                                        - The transaction exceeds the receiver's receiving limit.
                            - title: TRANSACTION_REFUSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TRANSACTION_REFUSED
                                description:
                                    type: string
                                    enum:
                                        - The request was refused.
                            - title: REDIRECT_PAYER_FOR_ALTERNATE_FUNDING
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REDIRECT_PAYER_FOR_ALTERNATE_FUNDING
                                description:
                                    type: string
                                    enum:
                                        - Transaction failed. Redirect the payer to select another funding source.
                            - title: ORDER_ALREADY_CAPTURED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ORDER_ALREADY_CAPTURED
                                description:
                                    type: string
                                    enum:
                                        - Order already captured.If 'intent=CAPTURE' only one capture per order is allowed.
                            - title: TRANSACTION_BLOCKED_BY_PAYEE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TRANSACTION_BLOCKED_BY_PAYEE
                                description:
                                    type: string
                                    enum:
                                        - Transaction blocked by PayeeΓÇÖs Fraud Protection settings.
                            - title: AUTH_CAPTURE_NOT_ENABLED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AUTH_CAPTURE_NOT_ENABLED
                                description:
                                    type: string
                                    enum:
                                        - Authorization and Capture feature is not enabled for the merchant. Make sure that the recipient of the funds is a verified business account.
                            - title: NOT_ENABLED_FOR_BANK_PROCESSING
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - NOT_ENABLED_FOR_BANK_PROCESSING
                                description:
                                    type: string
                                    enum:
                                        - The API Caller account is not setup to be able to process bank payments. Please contact your PayPal account manager.
                            - title: NOT_ENABLED_FOR_CARD_PROCESSING
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - NOT_ENABLED_FOR_CARD_PROCESSING
                                description:
                                    type: string
                                    enum:
                                        - The API Caller account is not setup to be able to process card payments. Please contact PayPal customer support.
                            - title: PAYEE_NOT_ENABLED_FOR_BANK_PROCESSING
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYEE_NOT_ENABLED_FOR_BANK_PROCESSING
                                description:
                                    type: string
                                    enum:
                                        - Payee account is not setup to be able to process bank payments. Please contact your PayPal account manager.
                            - title: PAYEE_NOT_ENABLED_FOR_CARD_PROCESSING
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYEE_NOT_ENABLED_FOR_CARD_PROCESSING
                                description:
                                    type: string
                                    enum:
                                        - Payee account is not setup to be able to process card payments. Please contact PayPal customer support.
                            - title: INVALID_PICKUP_ADDRESS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PICKUP_ADDRESS
                                description:
                                    type: string
                                    enum:
                                        - 'If the ''shipping_option.type'' is set as ''PICKUP'' then the ''shipping_detail.name.full_name'' should start with ''S2S'' meaning Ship To Store. Example: ''S2S My Store''.'
                            - title: SHIPPING_ADDRESS_INVALID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SHIPPING_ADDRESS_INVALID
                                description:
                                    type: string
                                    enum:
                                        - Provided shipping address is invalid.
                            - title: PAYMENT_SOURCE_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYMENT_SOURCE_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - The payer selected method of payment is not supported when multiple purchase units are specified for an Order.
                            - title: ORDER_COMPLETION_IN_PROGRESS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ORDER_COMPLETION_IN_PROGRESS
                                description:
                                    type: string
                                    enum:
                                        - The order was created with processing_instruction of ORDER_COMPLETE_ON_PAYMENT_APPROVAL. The customer has approved the payment and PayPal is still in the process of capturing the order on your behalf as instructed. Please try your request again.
                            - title: BILLING_AGREEMENT_ID_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - BILLING_AGREEMENT_ID_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - Billing Agreement ID must exactly match the Billing Agreement ID that was provided during order creation.
                            - title: PREFERRED_PAYMENT_SOURCE_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PREFERRED_PAYMENT_SOURCE_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - Payment Source must exactly match the Preferred Payment Source that was provided during order creation.
                            - title: INCOMPATIBLE_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INCOMPATIBLE_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The value of the field is incompatible/redundant with other fields in the order.
                            - title: INVALID_PREVIOUS_TRANSACTION_REFERENCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PREVIOUS_TRANSACTION_REFERENCE
                                description:
                                    type: string
                                    enum:
                                        - The authorization or capture referenced by `previous_transaction_reference` is not valid. This could be either because the previous_transaction_reference is not found or doesn't belong to the payee. Please use a valid `previous_transaction_reference`.
                            - title: PREVIOUS_TRANSACTION_REFERENCE_HAS_CHARGEBACK
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PREVIOUS_TRANSACTION_REFERENCE_HAS_CHARGEBACK
                                description:
                                    type: string
                                    enum:
                                        - The capture referenced by `previous_transaction_reference` has a chargeback and hence cannot be used for this order. Please use a `previous_transaction_reference` which does not have a chargeback.
                            - title: PREVIOUS_TRANSACTION_REFERENCE_VOIDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PREVIOUS_TRANSACTION_REFERENCE_VOIDED
                                description:
                                    type: string
                                    enum:
                                        - The status of authorization referenced by `previous_transaction_reference` is `VOIDED` and hence cannot be used for this order. Please use a `previous_transaction_reference` whose status is not `VOIDED`.
                            - title: PAYMENT_SOURCE_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYMENT_SOURCE_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - The `payment_source` in the request must match the `payment_source` used for the authorization or capture referenced by `previous_transaction_reference`. Please use `previous_transaction_reference` whose `payment_source` matches with the `payment_source` specified in the order.
                            - title: MERCHANT_INITIATED_WITH_SECURITY_CODE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MERCHANT_INITIATED_WITH_SECURITY_CODE
                                description:
                                    type: string
                                    enum:
                                        - '`stored_payment_source.payment_initiator` = `MERCHANT` is not supported if `payment_source.card.security_code` is present in the order. `security_code` can be present in the order only when customer is the payment initiator. It is semantically incorrect to perform a merchant initiated payment with `security_code` is the order.'
                            - title: MERCHANT_INITIATED_WITH_AUTHENTICATION_RESULTS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MERCHANT_INITIATED_WITH_AUTHENTICATION_RESULTS
                                description:
                                    type: string
                                    enum:
                                        - '`stored_payment_source.payment_initiator` = `MERCHANT` is not supported if 3D-Secure authentication results are present in the order. 3D-Secure authentication results can be present in the order only when customer is the payment initiator. It is semantically incorrect to perform a merchant initiated payment with 3D-Secure authentication results is the order.'
                            - title: MERCHANT_INITIATED_WITH_MULTIPLE_PURCHASE_UNITS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MERCHANT_INITIATED_WITH_MULTIPLE_PURCHASE_UNITS
                                description:
                                    type: string
                                    enum:
                                        - '`stored_payment_source.payment_initiator` = `MERCHANT` is not supported if more than one purchase_unit is present in the Order. Merchant initiated payments are not supported from orders with more than one purchase_unit. Please retry the request with multiple Order requests (one for each purchase_unit).'
                            - title: RETURN_URL_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - RETURN_URL_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - The return url is required when attempting to vault this source.
                            - title: CANCEL_URL_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANCEL_URL_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - The cancel url is required when attempting to vault this source.
                            - title: SETUP_ERROR_FOR_BANK
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - SETUP_ERROR_FOR_BANK
                                description:
                                    type: string
                                    enum:
                                        - The API Caller account setup, for bank payments, is incomplete or incorrect. Please contact your PayPal account manager.
                            - title: BANK_NOT_SUPPORTED_FOR_VERIFICATION
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - BANK_NOT_SUPPORTED_FOR_VERIFICATION
                                description:
                                    type: string
                                    enum:
                                        - Verification for this bank account is not supported.
                            - title: PAYER_ACTION_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYER_ACTION_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - Transaction cannot complete successfully, instruct the buyer to return to PayPal.
                            - title: APPLE_PAY_AMOUNT_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - APPLE_PAY_AMOUNT_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - The 'amount' specified in the Order should match the amount that was viewed and authorized by the payer/buyer on Apple Pay. If the amount has changed, please redirect the buyer to authorize the order again via Apple Pay.
                            - title: CURRENCY_NOT_SUPPORTED_FOR_BANK
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CURRENCY_NOT_SUPPORTED_FOR_BANK
                                description:
                                    type: string
                                    enum:
                                        - The payment_source does not support the currency of the Order. For ACH debit, only USD is supported and for SEPA debit, only EUR is supported.
                            - title: ONLY_ONE_BANK_SOURCE_ALLOWED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ONLY_ONE_BANK_SOURCE_ALLOWED
                                description:
                                    type: string
                                    enum:
                                        - More than one payment method within the bank payment object is not supported.
                            - title: INVALID_IBAN
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_IBAN
                                description:
                                    type: string
                                    enum:
                                        - IBAN provided is not a valid bank account number.
                            - title: IBAN_COUNTRY_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - IBAN_COUNTRY_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - Country code of issuer bank for the provided IBAN is not supported for SEPA debit payments.
                            - title: CARD_NUMBER_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CARD_NUMBER_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - The card number is required when attempting to process payment with card.
                            - title: CARD_EXPIRY_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CARD_EXPIRY_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - The card expiry is required when attempting to process payment with card.
                            - title: VAULT_INSTRUCTION_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - VAULT_INSTRUCTION_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - Vault instruction is required. Please use `vault.store_in_vault` to provide vault instruction.
                            - title: MISMATCHED_VAULT_ID_TO_PAYMENT_SOURCE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISMATCHED_VAULT_ID_TO_PAYMENT_SOURCE
                                description:
                                    type: string
                                    enum:
                                        - The vault_id does not match the payment_source provided. Please verify that the vault_id token used refers to the matching payment_source and try again. For example, a PayPal token cannot be passed in the vault_id field in the payment_source.card object.
                            - title: NOT_ELIGIBLE_FOR_PNREF_PROCESSING
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - NOT_ELIGIBLE_FOR_PNREF_PROCESSING
                                description:
                                    type: string
                                    enum:
                                        - API caller is not enabled to process payments with the `pnref`. Please contact customer support to request permissions to process transactions with PNREF.
                            - title: NOT_ELIGIBLE_FOR_PAYPAL_TRANSACTION_ID_PROCESSING
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - NOT_ELIGIBLE_FOR_PAYPAL_TRANSACTION_ID_PROCESSING
                                description:
                                    type: string
                                    enum:
                                        - API caller is not enable to process payments using `paypal_transaction_id`. Please contact customer support to request permissions to process transactions with PayPal transaction ID.
                            - title: PAYPAL_TRANSACTION_ID_NOT_FOUND
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYPAL_TRANSACTION_ID_NOT_FOUND
                                description:
                                    type: string
                                    enum:
                                        - Specified `paypal_transaction_id` was not found. Verify the value and try the request again.
                            - title: PNREF_NOT_FOUND
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PNREF_NOT_FOUND
                                description:
                                    type: string
                                    enum:
                                        - Specified `pnref` was not found. Verify the value and try the request again.
                            - title: INVALID_SECURITY_CODE_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_SECURITY_CODE_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The security_code length is invalid for the specified card brand.
                            - title: PLATFORM_FEE_PAYEE_CANNOT_BE_SAME_AS_PAYER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PLATFORM_FEE_PAYEE_CANNOT_BE_SAME_AS_PAYER
                                description:
                                    type: string
                                    enum:
                                        - The payer cannot pay themselves. The recipient account of the platform fees must be different from the payer account.
                            - title: REQUIRED_PARAMETER_FOR_CUSTOMER_INITIATED_PAYMENT
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REQUIRED_PARAMETER_FOR_CUSTOMER_INITIATED_PAYMENT
                                description:
                                    type: string
                                    enum:
                                        - This parameter is required when the customer is present. If the customer is not present, indicate so by sending payment_initiator=`MERCHANT`. For details, see <a href="https://developer.paypal.com/docs/api/orders/v2/#definition-card_stored_credential">Stored Credential</a>.
                            - title: IDENTIFIER_NOT_FOUND
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - IDENTIFIER_NOT_FOUND
                                description:
                                    type: string
                                    enum:
                                        - Specified identifier was not found. Please verify the correct identifier was used and try the request again.
        shipment_tracking_number_type:
            type: string
            title: Shipment Tracking Number Type.
            description: The tracking number type.
            minLength: 1
            maxLength: 64
            pattern: ^[0-9A-Z_]+$
            enum:
                - CARRIER_PROVIDED
                - E2E_PARTNER_PROVIDED
        shipment_tracking_status:
            type: string
            title: Shipment Tracking Status.
            description: The status of the item shipment. For allowed values, see <a href="/docs/tracking/reference/shipping-status/">Shipping Statuses</a>.
            minLength: 1
            maxLength: 64
            pattern: ^[0-9A-Z_]+$
            enum:
                - CANCELLED
                - DELIVERED
                - LOCAL_PICKUP
                - ON_HOLD
                - SHIPPED
                - SHIPMENT_CREATED
                - DROPPED_OFF
                - IN_TRANSIT
                - RETURNED
                - LABEL_PRINTED
                - ERROR
                - UNCONFIRMED
                - PICKUP_FAILED
                - DELIVERY_DELAYED
                - DELIVERY_SCHEDULED
                - DELIVERY_FAILED
                - INRETURN
                - IN_PROCESS
                - NEW
                - VOID
                - PROCESSED
                - NOT_SHIPPED
                - COMPLETED
        shipment_carrier:
            type: string
            title: Carrier.
            description: The carrier for the shipment. Some carriers have a global version as well as local subsidiaries. The subsidiaries are repeated over many countries and might also have an entry in the global list. Choose the carrier for your country. If the carrier is not available for your country, choose the global version of the carrier. If your carrier name is not in the list, set `carrier` to `OTHER` and set carrier name in `carrier_name_other`. For allowed values, see <a href="/docs/tracking/reference/carriers/">Carriers</a>.
            minLength: 1
            maxLength: 64
            pattern: ^[0-9A-Z_]+$
            enum:
                - DPD_RU
                - BG_BULGARIAN_POST
                - KR_KOREA_POST
                - ZA_COURIERIT
                - FR_EXAPAQ
                - ARE_EMIRATES_POST
                - GAC
                - GEIS
                - SF_EX
                - PAGO
                - MYHERMES
                - DIAMOND_EUROGISTICS
                - CORPORATECOURIERS_WEBHOOK
                - BOND
                - OMNIPARCEL
                - SK_POSTA
                - PUROLATOR
                - FETCHR_WEBHOOK
                - THEDELIVERYGROUP
                - CELLO_SQUARE
                - TARRIVE
                - COLLIVERY
                - MAINFREIGHT
                - IND_FIRSTFLIGHT
                - ACSWORLDWIDE
                - AMSTAN
                - OKAYPARCEL
                - ENVIALIA_REFERENCE
                - SEUR_ES
                - CONTINENTAL
                - FDSEXPRESS
                - AMAZON_FBA_SWISHIP
                - WYNGS
                - DHL_ACTIVE_TRACING
                - ZYLLEM
                - RUSTON
                - XPOST
                - CORREOS_ES
                - DHL_FR
                - PAN_ASIA
                - BRT_IT
                - SRE_KOREA
                - SPEEDEE
                - TNT_UK
                - VENIPAK
                - SHREENANDANCOURIER
                - CROSHOT
                - NIPOST_NG
                - EPST_GLBL
                - NEWGISTICS
                - POST_SLOVENIA
                - JERSEY_POST
                - BOMBINOEXP
                - WMG
                - XQ_EXPRESS
                - FURDECO
                - LHT_EXPRESS
                - SOUTH_AFRICAN_POST_OFFICE
                - SPOTON
                - DIMERCO
                - CYPRUS_POST_CYP
                - ABCUSTOM
                - IND_DELIVREE
                - CN_BESTEXPRESS
                - DX_SFTP
                - PICKUPP_MYS
                - FMX
                - HELLMANN
                - SHIP_IT_ASIA
                - KERRY_ECOMMERCE
                - FRETERAPIDO
                - PITNEY_BOWES
                - XPRESSEN_DK
                - SEUR_SP_API
                - DELIVERYONTIME
                - JINSUNG
                - TRANS_KARGO
                - SWISHIP_DE
                - IVOY_WEBHOOK
                - AIRMEE_WEBHOOK
                - DHL_BENELUX
                - FIRSTMILE
                - FASTWAY_IR
                - HH_EXP
                - MYS_MYPOST_ONLINE
                - TNT_NL
                - TIPSA
                - TAQBIN_MY
                - KGMHUB
                - INTEXPRESS
                - OVERSE_EXP
                - ONECLICK
                - ROADRUNNER_FREIGHT
                - GLS_CROTIA
                - MRW_FTP
                - BLUEX
                - DYLT
                - DPD_IR
                - SIN_GLBL
                - TUFFNELLS_REFERENCE
                - CJPACKET
                - MILKMAN
                - ASIGNA
                - ONEWORLDEXPRESS
                - ROYAL_MAIL
                - VIA_EXPRESS
                - TIGFREIGHT
                - ZTO_EXPRESS
                - TWO_GO
                - IML
                - INTEL_VALLEY
                - EFS
                - UK_UK_MAIL
                - RAM
                - ALLIEDEXPRESS
                - APC_OVERNIGHT
                - SHIPPIT
                - TFM
                - M_XPRESS
                - HDB_BOX
                - CLEVY_LINKS
                - IBEONE
                - FIEGE_NL
                - KWE_GLOBAL
                - CTC_EXPRESS
                - LAO_POST
                - AMAZON
                - MORE_LINK
                - JX
                - EASY_MAIL
                - ADUIEPYLE
                - GB_PANTHER
                - EXPRESSSALE
                - SG_DETRACK
                - TRUNKRS_WEBHOOK
                - MATDESPATCH
                - DICOM
                - MBW
                - KHM_CAMBODIA_POST
                - SINOTRANS
                - BRT_IT_PARCELID
                - DHL_SUPPLY_CHAIN
                - DHL_PL
                - TOPYOU
                - PALEXPRESS
                - DHL_SG
                - CN_WEDO
                - FULFILLME
                - DPD_DELISTRACK
                - UPS_REFERENCE
                - CARIBOU
                - LOCUS_WEBHOOK
                - DSV
                - CN_GOFLY
                - P2P_TRC
                - DIRECTPARCELS
                - NOVA_POSHTA_INT
                - FEDEX_POLAND
                - CN_JCEX
                - FAR_INTERNATIONAL
                - IDEXPRESS
                - GANGBAO
                - NEWAY
                - POSTNL_INT_3_S
                - RPX_ID
                - DESIGNERTRANSPORT_WEBHOOK
                - GLS_SLOVEN
                - PARCELLED_IN
                - GSI_EXPRESS
                - CON_WAY
                - BROUWER_TRANSPORT
                - CPEX
                - ISRAEL_POST
                - DTDC_IN
                - PTT_POST
                - XDE_WEBHOOK
                - TOLOS
                - GIAO_HANG
                - GEODIS_ESPACE
                - MAGYAR_HU
                - DOORDASH_WEBHOOK
                - TIKI_ID
                - CJ_HK_INTERNATIONAL
                - STAR_TRACK_EXPRESS
                - HELTHJEM
                - SFB2C
                - FREIGHTQUOTE
                - LANDMARK_GLOBAL_REFERENCE
                - PARCEL2GO
                - DELNEXT
                - RCL
                - CGS_EXPRESS
                - HK_POST
                - SAP_EXPRESS
                - PARCELPOST_SG
                - HERMES
                - IND_SAFEEXPRESS
                - TOPHATTEREXPRESS
                - MGLOBAL
                - AVERITT
                - LEADER
                - _2EBOX
                - SG_SPEEDPOST
                - DBSCHENKER_SE
                - ISR_POST_DOMESTIC
                - BESTWAYPARCEL
                - ASENDIA_DE
                - NIGHTLINE_UK
                - TAQBIN_SG
                - TCK_EXPRESS
                - ENDEAVOUR_DELIVERY
                - NANJINGWOYUAN
                - HEPPNER_FR
                - EMPS_CN
                - FONSEN
                - PICKRR
                - APC_OVERNIGHT_CONNUM
                - STAR_TRACK_NEXT_FLIGHT
                - DAJIN
                - UPS_FREIGHT
                - POSTA_PLUS
                - CEVA
                - ANSERX
                - JS_EXPRESS
                - PADTF
                - UPS_MAIL_INNOVATIONS
                - EZSHIP
                - SYPOST
                - AMAZON_SHIP_MCF
                - YUSEN
                - BRING
                - SDA_IT
                - GBA
                - NEWEGGEXPRESS
                - SPEEDCOURIERS_GR
                - FORRUN
                - PICKUP
                - ECMS
                - INTELIPOST
                - FLASHEXPRESS
                - CN_STO
                - SEKO_SFTP
                - HOME_DELIVERY_SOLUTIONS
                - DPD_HGRY
                - KERRYTTC_VN
                - JOYING_BOX
                - TOTAL_EXPRESS
                - ZJS_EXPRESS
                - STARKEN
                - DEMANDSHIP
                - CN_DPEX
                - AUPOST_CN
                - LOGISTERS
                - GOGLOBALPOST
                - GLS_CZ
                - PAACK_WEBHOOK
                - GRAB_WEBHOOK
                - PARCELPOINT
                - ICUMULUS
                - DAIGLOBALTRACK
                - GLOBAL_IPARCEL
                - YURTICI_KARGO
                - CN_PAYPAL_PACKAGE
                - PARCEL_2_POST
                - GLS_IT
                - PIL_LOGISTICS
                - HEPPNER
                - GENERAL_OVERNIGHT
                - HAPPY2POINT
                - CHITCHATS
                - SMOOTH
                - CLE_LOGISTICS
                - FIEGE
                - MX_CARGO
                - ZIINGFINALMILE
                - DAYTON_FREIGHT
                - TCS
                - AEX
                - HERMES_DE
                - ROUTIFIC_WEBHOOK
                - GLOBAVEND
                - CJ_LOGISTICS
                - PALLET_NETWORK
                - RAF_PH
                - UK_XDP
                - PAPER_EXPRESS
                - LA_POSTE_SUIVI
                - PAQUETEXPRESS
                - LIEFERY
                - STRECK_TRANSPORT
                - PONY_EXPRESS
                - ALWAYS_EXPRESS
                - GBS_BROKER
                - CITYLINK_MY
                - ALLJOY
                - YODEL
                - YODEL_DIR
                - STONE3PL
                - PARCELPAL_WEBHOOK
                - DHL_ECOMERCE_ASA
                - SIMPLYPOST
                - KY_EXPRESS
                - SHENZHEN
                - US_LASERSHIP
                - UC_EXPRE
                - DIDADI
                - CJ_KR
                - DBSCHENKER_B2B
                - MXE
                - CAE_DELIVERS
                - PFCEXPRESS
                - WHISTL
                - WEPOST
                - DHL_PARCEL_ES
                - DDEXPRESS
                - ARAMEX_AU
                - BNEED
                - HK_TGX
                - LATVIJAS_PASTS
                - VIAEUROPE
                - CORREO_UY
                - CHRONOPOST_FR
                - J_NET
                - _6LS
                - BLR_BELPOST
                - BIRDSYSTEM
                - DOBROPOST
                - WAHANA_ID
                - WEASHIP
                - SONICTL
                - KWT
                - AFLLOG_FTP
                - SKYNET_WORLDWIDE
                - NOVA_POSHTA
                - SEINO
                - SZENDEX
                - BPOST_INT
                - DBSCHENKER_SV
                - AO_DEUTSCHLAND
                - EU_FLEET_SOLUTIONS
                - PCFCORP
                - LINKBRIDGE
                - PRIMAMULTICIPTA
                - COUREX
                - ZAJIL_EXPRESS
                - COLLECTCO
                - JTEXPRESS
                - FEDEX_UK
                - USHIP
                - PIXSELL
                - SHIPTOR
                - CDEK
                - VNM_VIETTELPOST
                - CJ_CENTURY
                - GSO
                - VIWO
                - SKYBOX
                - KERRYTJ
                - NTLOGISTICS_VN
                - SDH_SCM
                - ZINC
                - DPE_SOUTH_AFRC
                - CESKA_CZ
                - ACS_GR
                - DEALERSEND
                - JOCOM
                - CSE
                - TFORCE_FINALMILE
                - SHIP_GATE
                - SHIPTER
                - NATIONAL_SAMEDAY
                - YUNEXPRESS
                - CAINIAO
                - DMS_MATRIX
                - DIRECTLOG
                - ASENDIA_US
                - _3JMSLOGISTICS
                - LICCARDI_EXPRESS
                - SKY_POSTAL
                - CNWANGTONG
                - POSTNORD_LOGISTICS_DK
                - LOGISTIKA
                - CELERITAS
                - PRESSIODE
                - SHREE_MARUTI
                - LOGISTICSWORLDWIDE_HK
                - EFEX
                - LOTTE
                - LONESTAR
                - APRISAEXPRESS
                - BEL_RS
                - OSM_WORLDWIDE
                - WESTGATE_GL
                - FASTRACK
                - DTD_EXPR
                - ALFATREX
                - PROMEDDELIVERY
                - THABIT_LOGISTICS
                - HCT_LOGISTICS
                - CARRY_FLAP
                - US_OLD_DOMINION
                - ANICAM_BOX
                - WANBEXPRESS
                - AN_POST
                - DPD_LOCAL
                - STALLIONEXPRESS
                - RAIDEREX
                - SHOPFANS
                - KYUNGDONG_PARCEL
                - CHAMPION_LOGISTICS
                - PICKUPP_SGP
                - MORNING_EXPRESS
                - NACEX
                - THENILE_WEBHOOK
                - HOLISOL
                - LBCEXPRESS_FTP
                - KURASI
                - USF_REDDAWAY
                - APG
                - CN_BOXC
                - ECOSCOOTING
                - MAINWAY
                - PAPERFLY
                - HOUNDEXPRESS
                - BOX_BERRY
                - EP_BOX
                - PLUS_LOG_UK
                - FULFILLA
                - ASE
                - MAIL_PLUS
                - XPO_LOGISTICS
                - WNDIRECT
                - CLOUDWISH_ASIA
                - ZELERIS
                - GIO_EXPRESS
                - OCS_WORLDWIDE
                - ARK_LOGISTICS
                - AQUILINE
                - PILOT_FREIGHT
                - QWINTRY
                - DANSKE_FRAGT
                - CARRIERS
                - AIR_CANADA_GLOBAL
                - PRESIDENT_TRANS
                - STEPFORWARDFS
                - SKYNET_UK
                - PITTOHIO
                - CORREOS_EXPRESS
                - RL_US
                - MARA_XPRESS
                - DESTINY
                - UK_YODEL
                - COMET_TECH
                - DHL_PARCEL_RU
                - TNT_REFR
                - SHREE_ANJANI_COURIER
                - MIKROPAKKET_BE
                - ETS_EXPRESS
                - COLIS_PRIVE
                - CN_YUNDA
                - AAA_COOPER
                - ROCKET_PARCEL
                - _360LION
                - PANDU
                - PROFESSIONAL_COURIERS
                - FLYTEXPRESS
                - LOGISTICSWORLDWIDE_MY
                - CORREOS_DE_ESPANA
                - IMX
                - FOUR_PX_EXPRESS
                - XPRESSBEES
                - PICKUPP_VNM
                - STARTRACK_EXPRESS
                - FR_COLISSIMO
                - NACEX_SPAIN_REFERENCE
                - DHL_SUPPLY_CHAIN_AU
                - ESHIPPING
                - SHREETIRUPATI
                - HX_EXPRESS
                - INDOPAKET
                - CN_17POST
                - K1_EXPRESS
                - CJ_GLS
                - MYS_GDEX
                - NATIONEX
                - ANJUN
                - FARGOOD
                - SMG_EXPRESS
                - RZYEXPRESS
                - SEFL
                - TNT_CLICK_IT
                - HDB
                - HIPSHIPPER
                - RPXLOGISTICS
                - KUEHNE
                - IT_NEXIVE
                - PTS
                - SWISS_POST_FTP
                - FASTRK_SERV
                - _4_72
                - US_YRC
                - POSTNL_INTL_3S
                - ELIAN_POST
                - CUBYN
                - SAU_SAUDI_POST
                - ABXEXPRESS_MY
                - HUAHAN_EXPRESS
                - IND_JAYONEXPRESS
                - ZES_EXPRESS
                - ZEPTO_EXPRESS
                - SKYNET_ZA
                - ZEEK_2_DOOR
                - BLINKLASTMILE
                - POSTA_UKR
                - CHROBINSON
                - CN_POST56
                - COURANT_PLUS
                - SCUDEX_EXPRESS
                - SHIPENTEGRA
                - B_TWO_C_EUROPE
                - COPE
                - IND_GATI
                - CN_WISHPOST
                - NACEX_ES
                - TAQBIN_HK
                - GLOBALTRANZ
                - HKD
                - BJSHOMEDELIVERY
                - OMNIVA
                - SUTTON
                - PANTHER_REFERENCE
                - SFCSERVICE
                - LTL
                - PARKNPARCEL
                - SPRING_GDS
                - ECEXPRESS
                - INTERPARCEL_AU
                - AGILITY
                - XL_EXPRESS
                - ADERONLINE
                - DIRECTCOURIERS
                - PLANZER
                - SENDING
                - NINJAVAN_WB
                - NATIONWIDE_MY
                - SENDIT
                - GB_ARROW
                - IND_GOJAVAS
                - KPOST
                - DHL_FREIGHT
                - BLUECARE
                - JINDOUYUN
                - TRACKON
                - GB_TUFFNELLS
                - TRUMPCARD
                - ETOTAL
                - SFPLUS_WEBHOOK
                - SEKOLOGISTICS
                - HERMES_2MANN_HANDLING
                - DPD_LOCAL_REF
                - UDS
                - ZA_SPECIALISED_FREIGHT
                - THA_KERRY
                - PRT_INT_SEUR
                - BRA_CORREIOS
                - NZ_NZ_POST
                - CN_EQUICK
                - MYS_EMS
                - GB_NORSK
                - ESP_MRW
                - ESP_PACKLINK
                - KANGAROO_MY
                - RPX
                - XDP_UK_REFERENCE
                - NINJAVAN_MY
                - ADICIONAL
                - NINJAVAN_ID
                - ROADBULL
                - YAKIT
                - MAILAMERICAS
                - MIKROPAKKET
                - DYNALOGIC
                - DHL_ES
                - DHL_PARCEL_NL
                - DHL_GLOBAL_MAIL_ASIA
                - DAWN_WING
                - GENIKI_GR
                - HERMESWORLD_UK
                - ALPHAFAST
                - BUYLOGIC
                - EKART
                - MEX_SENDA
                - SFC_LOGISTICS
                - POST_SERBIA
                - IND_DELHIVERY
                - DE_DPD_DELISTRACK
                - RPD2MAN
                - CN_SF_EXPRESS
                - YANWEN
                - MYS_SKYNET
                - CORREOS_DE_MEXICO
                - CBL_LOGISTICA
                - MEX_ESTAFETA
                - AU_AUSTRIAN_POST
                - RINCOS
                - NLD_DHL
                - RUSSIAN_POST
                - COURIERS_PLEASE
                - POSTNORD_LOGISTICS
                - FEDEX
                - DPE_EXPRESS
                - DPD
                - ADSONE
                - IDN_JNE
                - THECOURIERGUY
                - CNEXPS
                - PRT_CHRONOPOST
                - LANDMARK_GLOBAL
                - IT_DHL_ECOMMERCE
                - ESP_NACEX
                - PRT_CTT
                - BE_KIALA
                - ASENDIA_UK
                - GLOBAL_TNT
                - POSTUR_IS
                - EPARCEL_KR
                - INPOST_PACZKOMATY
                - IT_POSTE_ITALIA
                - BE_BPOST
                - PL_POCZTA_POLSKA
                - MYS_MYS_POST
                - SG_SG_POST
                - THA_THAILAND_POST
                - LEXSHIP
                - FASTWAY_NZ
                - DHL_AU
                - COSTMETICSNOW
                - PFLOGISTICS
                - LOOMIS_EXPRESS
                - GLS_ITALY
                - LINE
                - GEL_EXPRESS
                - HUODULL
                - NINJAVAN_SG
                - JANIO
                - AO_COURIER
                - BRT_IT_SENDER_REF
                - SAILPOST
                - LALAMOVE
                - NEWZEALAND_COURIERS
                - ETOMARS
                - VIRTRANSPORT
                - WIZMO
                - PALLETWAYS
                - I_DIKA
                - CFL_LOGISTICS
                - GEMWORLDWIDE
                - GLOBAL_EXPRESS
                - LOGISTYX_TRANSGROUP
                - WESTBANK_COURIER
                - ARCO_SPEDIZIONI
                - YDH_EXPRESS
                - PARCELINKLOGISTICS
                - CNDEXPRESS
                - NOX_NIGHT_TIME_EXPRESS
                - AERONET
                - LTIANEXP
                - INTEGRA2_FTP
                - PARCELONE
                - NOX_NACHTEXPRESS
                - CN_CHINA_POST_EMS
                - CHUKOU1
                - GLS_SLOV
                - ORANGE_DS
                - JOOM_LOGIS
                - AUS_STARTRACK
                - DHL
                - GB_APC
                - BONDSCOURIERS
                - JPN_JAPAN_POST
                - USPS
                - WINIT
                - ARG_OCA
                - TW_TAIWAN_POST
                - DMM_NETWORK
                - TNT
                - BH_POSTA
                - SWE_POSTNORD
                - CA_CANADA_POST
                - WISELOADS
                - ASENDIA_HK
                - NLD_GLS
                - MEX_REDPACK
                - JET_SHIP
                - DE_DHL_EXPRESS
                - NINJAVAN_THAI
                - RABEN_GROUP
                - ESP_ASM
                - HRV_HRVATSKA
                - GLOBAL_ESTES
                - LTU_LIETUVOS
                - BEL_DHL
                - AU_AU_POST
                - SPEEDEXCOURIER
                - FR_COLIS
                - ARAMEX
                - DPEX
                - MYS_AIRPAK
                - CUCKOOEXPRESS
                - DPD_POLAND
                - NLD_POSTNL
                - NIM_EXPRESS
                - QUANTIUM
                - SENDLE
                - ESP_REDUR
                - MATKAHUOLTO
                - CPACKET
                - POSTI
                - HUNTER_EXPRESS
                - CHOIR_EXP
                - LEGION_EXPRESS
                - AUSTRIAN_POST_EXPRESS
                - GRUPO
                - POSTA_RO
                - INTERPARCEL_UK
                - GLOBAL_ABF
                - POSTEN_NORGE
                - XPERT_DELIVERY
                - DHL_REFR
                - DHL_HK
                - SKYNET_UAE
                - GOJEK
                - YODEL_INTNL
                - JANCO
                - YTO
                - WISE_EXPRESS
                - JTEXPRESS_VN
                - FEDEX_INTL_MLSERV
                - VAMOX
                - AMS_GRP
                - DHL_JP
                - HRPARCEL
                - GESWL
                - BLUESTAR
                - CDEK_TR
                - DESCARTES
                - DELTEC_UK
                - DTDC_EXPRESS
                - TOURLINE
                - BH_WORLDWIDE
                - OCS
                - YINGNUO_LOGISTICS
                - UPS
                - TOLL
                - PRT_SEUR
                - DTDC_AU
                - THA_DYNAMIC_LOGISTICS
                - UBI_LOGISTICS
                - FEDEX_CROSSBORDER
                - A1POST
                - TAZMANIAN_FREIGHT
                - CJ_INT_MY
                - SAIA_FREIGHT
                - SG_QXPRESS
                - NHANS_SOLUTIONS
                - DPD_FR
                - COORDINADORA
                - ANDREANI
                - DOORA
                - INTERPARCEL_NZ
                - PHL_JAMEXPRESS
                - BEL_BELGIUM_POST
                - US_APC
                - IDN_POS
                - FR_MONDIAL
                - DE_DHL
                - HK_RPX
                - DHL_PIECEID
                - VNPOST_EMS
                - RRDONNELLEY
                - DPD_DE
                - DELCART_IN
                - IMEXGLOBALSOLUTIONS
                - ACOMMERCE
                - EURODIS
                - CANPAR
                - GLS
                - IND_ECOM
                - ESP_ENVIALIA
                - DHL_UK
                - SMSA_EXPRESS
                - TNT_FR
                - DEX_I
                - BUDBEE_WEBHOOK
                - COPA_COURIER
                - VNM_VIETNAM_POST
                - DPD_HK
                - TOLL_NZ
                - ECHO
                - FEDEX_FR
                - BORDEREXPRESS
                - MAILPLUS_JPN
                - TNT_UK_REFR
                - KEC
                - DPD_RO
                - TNT_JP
                - TH_CJ
                - EC_CN
                - FASTWAY_UK
                - FASTWAY_US
                - GLS_DE
                - GLS_ES
                - GLS_FR
                - MONDIAL_BE
                - SGT_IT
                - TNT_CN
                - TNT_DE
                - TNT_ES
                - TNT_PL
                - PARCELFORCE
                - SWISS_POST
                - TOLL_IPEC
                - AIR_21
                - AIRSPEED
                - BERT
                - BLUEDART
                - COLLECTPLUS
                - COURIERPLUS
                - COURIER_POST
                - DHL_GLOBAL_MAIL
                - DPD_UK
                - DELTEC_DE
                - DEUTSCHE_DE
                - DOTZOT
                - ELTA_GR
                - EMS_CN
                - ECARGO
                - ENSENDA
                - FERCAM_IT
                - FASTWAY_ZA
                - FASTWAY_AU
                - FIRST_LOGISITCS
                - GEODIS
                - GLOBEGISTICS
                - GREYHOUND
                - JETSHIP_MY
                - LION_PARCEL
                - AEROFLASH
                - ONTRAC
                - SAGAWA
                - SIODEMKA
                - STARTRACK
                - TNT_AU
                - TNT_IT
                - TRANSMISSION
                - YAMATO
                - DHL_IT
                - DHL_AT
                - LOGISTICSWORLDWIDE_KR
                - GLS_SPAIN
                - AMAZON_UK_API
                - DPD_FR_REFERENCE
                - DHLPARCEL_UK
                - MEGASAVE
                - QUALITYPOST
                - IDS_LOGISTICS
                - JOYINGBOX
                - PANTHER_ORDER_NUMBER
                - WATKINS_SHEPARD
                - FASTTRACK
                - UP_EXPRESS
                - ELOGISTICA
                - ECOURIER
                - CJ_PHILIPPINES
                - SPEEDEX
                - ORANGECONNEX
                - TECOR
                - SAEE
                - GLS_ITALY_FTP
                - DELIVERE
                - YYCOM
                - ADICIONAL_PT
                - DKSH
                - NIPPON_EXPRESS_FTP
                - GOLS
                - FUJEXP
                - QTRACK
                - OMLOGISTICS_API
                - GDPHARM
                - MISUMI_CN
                - AIR_CANADA
                - CITY56_WEBHOOK
                - SAGAWA_API
                - KEDAEX
                - PGEON_API
                - WEWORLDEXPRESS
                - JT_LOGISTICS
                - TRUSK
                - VIAXPRESS
                - DHL_SUPPLYCHAIN_ID
                - ZUELLIGPHARMA_SFTP
                - MEEST
                - TOLL_PRIORITY
                - MOTHERSHIP_API
                - CAPITAL
                - EUROPAKET_API
                - HFD
                - TOURLINE_REFERENCE
                - GIO_ECOURIER
                - CN_LOGISTICS
                - PANDION
                - BPOST_API
                - PASSPORTSHIPPING
                - PAKAJO
                - DACHSER
                - YUSEN_SFTP
                - SHYPLITE
                - XYY
                - MWD
                - FAXECARGO
                - MAZET
                - FIRST_LOGISTICS_API
                - SPRINT_PACK
                - HERMES_DE_FTP
                - CONCISE
                - KERRY_EXPRESS_TW_API
                - EWE
                - FASTDESPATCH
                - ABCUSTOM_SFTP
                - CHAZKI
                - SHIPPIE
                - GEODIS_API
                - NAQEL_EXPRESS
                - PAPA_WEBHOOK
                - FORWARDAIR
                - DIALOGO_LOGISTICA_API
                - LALAMOVE_API
                - TOMYDOOR
                - KRONOS_WEBHOOK
                - JTCARGO
                - T_CAT
                - CONCISE_WEBHOOK
                - TELEPORT_WEBHOOK
                - CUSTOMCO_API
                - SPX_TH
                - BOLLORE_LOGISTICS
                - CLICKLINK_SFTP
                - M3LOGISTICS
                - VNPOST_API
                - AXLEHIRE_FTP
                - SHADOWFAX
                - MYHERMES_UK_API
                - DAIICHI
                - MENSAJEROSURBANOS_API
                - POLARSPEED
                - IDEXPRESS_ID
                - PAYO
                - WHISTL_SFTP
                - INTEX_DE
                - TRANS2U
                - PRODUCTCAREGROUP_SFTP
                - BIGSMART
                - EXPEDITORS_API_REF
                - AITWORLDWIDE_API
                - WORLDCOURIER
                - QUIQUP
                - AGEDISS_SFTP
                - ANDREANI_API
                - CRLEXPRESS
                - SMARTCAT
                - CROSSFLIGHT
                - PROCARRIER
                - DHL_REFERENCE_API
                - SEINO_API
                - WSPEXPRESS
                - KRONOS
                - TOTAL_EXPRESS_API
                - PARCLL
                - XPEDIGO
                - STAR_TRACK_WEBHOOK
                - GPOST
                - UCS
                - DMFGROUP
                - COORDINADORA_API
                - MARKEN
                - NTL
                - REDJEPAKKETJE
                - ALLIED_EXPRESS_FTP
                - MONDIALRELAY_ES
                - NAEKO_FTP
                - MHI
                - SHIPPIFY
                - MALCA_AMIT_API
                - JTEXPRESS_SG_API
                - DACHSER_WEB
                - FLIGHTLG
                - CAGO
                - COM1EXPRESS
                - TONAMI_FTP
                - PACKFLEET
                - PUROLATOR_INTERNATIONAL
                - WINESHIPPING_WEBHOOK
                - DHL_ES_SFTP
                - PCHOME_API
                - CESKAPOSTA_API
                - GORUSH
                - HOMERUNNER
                - AMAZON_ORDER
                - EFWNOW_API
                - CBL_LOGISTICA_API
                - NIMBUSPOST
                - LOGWIN_LOGISTICS
                - NOWLOG_API
                - DPD_NL
                - GODEPENDABLE
                - ESDEX
                - LOGISYSTEMS_SFTP
                - EXPEDITORS
                - SNTGLOBAL_API
                - SHIPX
                - QINTL_API
                - PACKS
                - POSTNL_INTERNATIONAL
                - AMAZON_EMAIL_PUSH
                - DHL_API
                - SPX
                - AXLEHIRE
                - ICSCOURIER
                - DIALOGO_LOGISTICA
                - SHUNBANG_EXPRESS
                - TCS_API
                - SF_EXPRESS_CN
                - PACKETA
                - SIC_TELIWAY
                - MONDIALRELAY_FR
                - INTIME_FTP
                - JD_EXPRESS
                - FASTBOX
                - PATHEON
                - INDIA_POST
                - TIPSA_REF
                - ECOFREIGHT
                - VOX
                - DIRECTFREIGHT_AU_REF
                - BESTTRANSPORT_SFTP
                - AUSTRALIA_POST_API
                - FRAGILEPAK_SFTP
                - FLIPXP
                - VALUE_WEBHOOK
                - DAESHIN
                - SHERPA
                - MWD_API
                - SMARTKARGO
                - DNJ_EXPRESS
                - GOPEOPLE
                - MYSENDLE_API
                - ARAMEX_API
                - PIDGE
                - THAIPARCELS
                - PANTHER_REFERENCE_API
                - POSTAPLUS
                - BUFFALO
                - U_ENVIOS
                - ELITE_CO
                - BARQEXP
                - ROCHE_INTERNAL_SFTP
                - DBSCHENKER_ICELAND
                - TNT_FR_REFERENCE
                - NEWGISTICSAPI
                - GLOVO
                - GWLOGIS_API
                - SPREETAIL_API
                - MOOVA
                - PLYCONGROUP
                - USPS_WEBHOOK
                - REIMAGINEDELIVERY
                - EDF_FTP
                - DAO365
                - BIOCAIR_FTP
                - RANSA_WEBHOOK
                - SHIPXPRES
                - COURANT_PLUS_API
                - SHIPA
                - HOMELOGISTICS
                - DX
                - POSTE_ITALIANE_PACCOCELERE
                - TOLL_WEBHOOK
                - LCTBR_API
                - DX_FREIGHT
                - DHL_SFTP
                - SHIPROCKET
                - UBER_WEBHOOK
                - STATOVERNIGHT
                - BURD
                - FASTSHIP
                - IBVENTURE_WEBHOOK
                - GATI_KWE_API
                - CRYOPDP_FTP
                - HUBBED
                - TIPSA_API
                - ARASKARGO
                - THIJS_NL
                - ATSHEALTHCARE_REFERENCE
                - 99MINUTOS
                - HELLENIC_POST
                - HSM_GLOBAL
                - MNX
                - NMTRANSFER
                - LOGYSTO
                - INDIA_POST_INT
                - AMAZON_FBA_SWISHIP_IN
                - SRT_TRANSPORT
                - BOMI
                - DELIVERR_SFTP
                - HSDEXPRESS
                - SIMPLETIRE_WEBHOOK
                - HUNTER_EXPRESS_SFTP
                - UPS_API
                - WOOYOUNG_LOGISTICS_SFTP
                - PHSE_API
                - WISH_EMAIL_PUSH
                - NORTHLINE
                - MEDAFRICA
                - DPD_AT_SFTP
                - ANTERAJA
                - DHL_GLOBAL_FORWARDING_API
                - LBCEXPRESS_API
                - SIMSGLOBAL
                - CDLDELIVERS
                - TYP
                - TESTING_COURIER_WEBHOOK
                - PANDAGO_API
                - ROYAL_MAIL_FTP
                - THUNDEREXPRESS
                - SECRETLAB_WEBHOOK
                - SETEL
                - JD_WORLDWIDE
                - DPD_RU_API
                - ARGENTS_WEBHOOK
                - POSTONE
                - TUSKLOGISTICS
                - RHENUS_UK_API
                - TAQBIN_SG_API
                - INNTRALOG_SFTP
                - DAYROSS
                - CORREOSEXPRESS_API
                - INTERNATIONAL_SEUR_API
                - YODEL_API
                - HEROEXPRESS
                - DHL_SUPPLYCHAIN_IN
                - URGENT_CARGUS
                - FRONTDOORCORP
                - JTEXPRESS_PH
                - PARCELSTARS_WEBHOOK
                - DPD_SK_SFTP
                - MOVIANTO
                - OZEPARTS_SHIPPING
                - KARGOMKOLAY
                - TRUNKRS
                - OMNIRPS_WEBHOOK
                - CHILEXPRESS
                - TESTING_COURIER
                - JNE_API
                - BJSHOMEDELIVERY_FTP
                - DEXPRESS_WEBHOOK
                - USPS_API
                - TRANSVIRTUAL
                - SOLISTICA_API
                - CHIENVENTURE_WEBHOOK
                - DPD_UK_SFTP
                - INPOST_UK
                - JAVIT
                - ZTO_DOMESTIC
                - DHL_GT_API
                - CEVA_TRACKING
                - KOMON_EXPRESS
                - EASTWESTCOURIER_FTP
                - DANNIAO
                - SPECTRAN
                - DELIVER_IT
                - RELAISCOLIS
                - GLS_SPAIN_API
                - POSTPLUS
                - AIRTERRA
                - GIO_ECOURIER_API
                - DPD_CH_SFTP
                - FEDEX_API
                - INTERSMARTTRANS
                - HERMES_UK_SFTP
                - EXELOT_FTP
                - DHL_PA_API
                - VIRTRANSPORT_SFTP
                - WORLDNET
                - INSTABOX_WEBHOOK
                - KNG
                - FLASHEXPRESS_WEBHOOK
                - MAGYAR_POSTA_API
                - WESHIP_API
                - OHI_WEBHOOK
                - MUDITA
                - BLUEDART_API
                - T_CAT_API
                - ADS
                - HERMES_IT
                - FITZMARK_API
                - POSTI_API
                - SMSA_EXPRESS_WEBHOOK
                - TAMERGROUP_WEBHOOK
                - LIVRAPIDE
                - NIPPON_EXPRESS
                - BETTERTRUCKS
                - FAN
                - PB_USPSFLATS_FTP
                - PARCELRIGHT
                - ITHINKLOGISTICS
                - KERRY_EXPRESS_TH_WEBHOOK
                - ECOUTIER
                - SHOWL
                - BRT_IT_API
                - RIXONHK_API
                - DBSCHENKER_API
                - ILYANGLOGIS
                - MAIL_BOX_ETC
                - WESHIP
                - DHL_GLOBAL_MAIL_API
                - ACTIVOS24_API
                - ATSHEALTHCARE
                - LUWJISTIK
                - GW_WORLD
                - FAIRSENDEN_API
                - SERVIP_WEBHOOK
                - SWISHIP
                - TANET
                - HOTSIN_CARGO
                - DIREX
                - HUANTONG
                - IMILE_API
                - BDMNET
                - AUEXPRESS
                - NYTLOGISTICS
                - DSV_REFERENCE
                - NOVOFARMA_WEBHOOK
                - AITWORLDWIDE_SFTP
                - SHOPOLIVE
                - FNF_ZA
                - DHL_ECOMMERCE_GC
                - FETCHR
                - STARLINKS_API
                - YYEXPRESS
                - SERVIENTREGA
                - HANJIN
                - SPANISH_SEUR_FTP
                - DX_B2B_CONNUM
                - HELTHJEM_API
                - INEXPOST
                - A2B_BA
                - RHENUS_GROUP
                - SBERLOGISTICS_RU
                - MALCA_AMIT
                - PPL
                - OSM_WORLDWIDE_SFTP
                - ACILOGISTIX
                - OPTIMACOURIER
                - NOVA_POSHTA_API
                - LOGGI
                - YIFAN
                - MYDYNALOGIC
                - MORNINGLOBAL
                - CONCISE_API
                - FXTRAN
                - DELIVERYOURPARCEL_ZA
                - UPARCEL
                - MOBI_BR
                - LOGINEXT_WEBHOOK
                - EMS
                - SPEEDY
        shipment_tracker:
            type: object
            title: Shipment Tracker.
            description: The tracking information for a shipment.
            properties:
                transaction_id:
                    type: string
                    description: The PayPal transaction ID.
                    minLength: 1
                    maxLength: 50
                    pattern: ^[a-zA-Z0-9]*$
                tracking_number:
                    type: string
                    description: The tracking number for the shipment. This property supports Unicode.
                    minLength: 1
                    maxLength: 64
                tracking_number_type:
                    description: The type of tracking number.
                    $ref: '#/components/schemas/shipment_tracking_number_type'
                status:
                    $ref: '#/components/schemas/shipment_tracking_status'
                shipment_date:
                    description: The date when the shipment occurred, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_no_time'
                carrier:
                    $ref: '#/components/schemas/shipment_carrier'
                carrier_name_other:
                    type: string
                    description: The name of the carrier for the shipment. Provide this value only if the carrier parameter is OTHER. This property supports Unicode.
                    minLength: 1
                    maxLength: 64
                postage_payment_id:
                    type: string
                    description: The postage payment ID. This property supports Unicode.
                    readOnly: true
                    minLength: 1
                    maxLength: 64
                notify_buyer:
                    type: boolean
                    description: If true, sends an email notification to the buyer of the PayPal transaction. The email contains the tracking information that was uploaded through the API.
                    default: false
                quantity:
                    type: integer
                    description: The quantity of items shipped.
                    readOnly: true
                    minimum: 1
                    maximum: 100
                tracking_number_validated:
                    type: boolean
                    description: Indicates whether the carrier validated the tracking number.
                    readOnly: true
                last_updated_time:
                    description: The date and time when the tracking information was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_time'
                shipment_direction:
                    type: string
                    description: To denote whether the shipment is sent forward to the receiver or returned back.
                    minLength: 1
                    maxLength: 50
                    pattern: ^[0-9A-Z_]+$
                    enum:
                        - FORWARD
                        - RETURN
                shipment_uploader:
                    readOnly: true
                    type: string
                    description: To denote which party uploaded the shipment tracking info.
                    minLength: 1
                    maxLength: 50
                    pattern: ^[0-9A-Z_]+$
                    enum:
                        - MERCHANT
                        - CONSUMER
                        - PARTNER
            required:
                - transaction_id
                - status
        order_tracker_request:
            type: object
            title: Order Tracker Request.
            description: The tracking details of an order.
            allOf:
                - $ref: '#/components/schemas/shipment_tracker'
                - properties:
                    capture_id:
                        type: string
                        description: The PayPal capture ID.
                        minLength: 1
                        maxLength: 50
                        pattern: ^[a-zA-Z0-9]*$
                    notify_payer:
                        type: boolean
                        description: If true, sends an email notification to the payer of the PayPal transaction. The email contains the tracking information that was uploaded through the API.
                        default: false
                    items:
                        type: array
                        description: An array of details of items in the shipment.
                        items:
                            description: Items in a shipment.
                            $ref: '#/components/schemas/tracker_item'
                  required:
                    - capture_id
        orders.track.create-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - A required field / parameter is missing.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is either too short or too long.
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - A parameter value is not valid.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - The value of a field does not conform to the expected format.
        orders.track.create-403:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: PERMISSION_DENIED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PERMISSION_DENIED
                                description:
                                    type: string
                                    enum:
                                        - You do not have permission to access or perform operations on this resource.
        orders.track.create-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: CAPTURE_STATUS_NOT_VALID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CAPTURE_STATUS_NOT_VALID
                                description:
                                    type: string
                                    enum:
                                        - Invalid capture status. Tracker information can only be added to captures in `COMPLETED` state.
                            - title: ITEM_SKU_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ITEM_SKU_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - Item sku must match one of the items sku that was provided during order creation.
                            - title: CAPTURE_ID_NOT_FOUND
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CAPTURE_ID_NOT_FOUND
                                description:
                                    type: string
                                    enum:
                                        - Specified capture ID does not exist. Check the capture ID and try again.
                            - title: MSP_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MSP_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - Multiple purchase units are not supported for this operation.
        orders.trackers.patch-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: FIELD_NOT_PATCHABLE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - FIELD_NOT_PATCHABLE
                                description:
                                    type: string
                                    enum:
                                        - Field cannot be patched.
                            - title: INVALID_PARAMETER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is invalid.
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - A required field or parameter is missing.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is either too short or too long.
                            - title: INVALID_PATCH_OPERATION
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PATCH_OPERATION
                                description:
                                    type: string
                                    enum:
                                        - The operation cannot be honored. Cannot add a property that's already present, use replace. Cannot remove a property thats not present, use add. Cannot replace a property thats not present, use add.
                            - title: MALFORMED_REQUEST_JSON
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MALFORMED_REQUEST_JSON
                                description:
                                    type: string
                                    enum:
                                        - The request JSON is not well formed.
        orders.trackers.patch-403:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: PERMISSION_DENIED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PERMISSION_DENIED
                                description:
                                    type: string
                                    enum:
                                        - You do not have permission to access or perform operations on this resource.
        orders.trackers.patch-404:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: TRACKER_ID_NOT_FOUND
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TRACKER_ID_NOT_FOUND
                                description:
                                    type: string
                                    enum:
                                        - Specified tracker ID does not exist. Check the tracker ID and try again.
        orders.trackers.patch-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_JSON_POINTER_FORMAT
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_JSON_POINTER_FORMAT
                                description:
                                    type: string
                                    enum:
                                        - Path should be a valid [JSON Pointer](https://tools.ietf.org/html/rfc6901) that references a location within the request where the operation is performed.
                            - title: NOT_PATCHABLE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - NOT_PATCHABLE
                                description:
                                    type: string
                                    enum:
                                        - Cannot be patched.
                            - title: PATCH_VALUE_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PATCH_VALUE_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - Specify a `value` for the field being patched.
                            - title: PATCH_PATH_REQUIRED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PATCH_PATH_REQUIRED
                                description:
                                    type: string
                                    enum:
                                        - Specify a `value` for the field in which the operation needs to be performed.
                            - title: ITEM_SKU_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - ITEM_SKU_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - Item sku must match one of the items sku that was provided during order creation.
        dispute_reason:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            title: Dispute Reason
            description: The reason for the item-level dispute. For information about the required information for each dispute reason and associated evidence type, see <a href="/docs/integration/direct/customer-disputes/integration-guide/#dispute-reasons">dispute reasons</a>.
            enum:
                - MERCHANDISE_OR_SERVICE_NOT_RECEIVED
                - MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED
                - UNAUTHORISED
                - CREDIT_NOT_PROCESSED
                - DUPLICATE_TRANSACTION
                - INCORRECT_AMOUNT
                - PAYMENT_BY_OTHER_MEANS
                - CANCELED_RECURRING_BILLING
                - PROBLEM_WITH_REMITTANCE
                - OTHER
        status:
            type: string
            minLength: 1
            maxLength: 255
            readOnly: true
            pattern: ^[0-9A-Z_]+$
            description: The overall status of the dispute, constant for all the parties involved at anytime during the dispute lifecycle.
            enum:
                - OPEN
                - WAITING_FOR_BUYER_RESPONSE
                - WAITING_FOR_SELLER_RESPONSE
                - UNDER_REVIEW
                - RESOLVED
                - OTHER
        dispute_state:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            title: Dispute State
            description: The user specific state of the dispute, could vary between parties during the dispute lifecycle.
            enum:
                - OPEN_INQUIRIES
                - REQUIRED_ACTION
                - REQUIRED_OTHER_PARTY_ACTION
                - UNDER_PAYPAL_REVIEW
                - APPEALABLE
                - RESOLVED
        cryptocurrency_symbol:
            description: The Cryptocurrency ticker symbol / code as assigned by liquidity providers (exchanges).
            type: string
            minLength: 1
            maxLength: 10
            pattern: ^[0-9A-Za-z]{1,10}$
            enum:
                - BTC
                - ETH
                - BCH
                - LTC
        cryptocurrency_quantity:
            type: string
            minLength: 1
            maxLength: 40
            pattern: ^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$
            description: Quantity of a cryptocurrency asset.<br/>This is a decimal number with scale defined for each Cryptocurrency by the founders. For example, <li>Bitcoin(BTC) has 8 as scale,</li><li>Ethereum (ETH) has 18 as scale.</li><br/>PayPal Cryptocurrency platform handles the scale to 8 digits for Bitcoin and its forks or offshoots and Ehereum.
        cryptocurrency:
            type: object
            title: Cryptocurrency
            description: Representation of a specific amount of Cryptocurrency, denoted by its symbol and quantity.
            properties:
                asset_symbol:
                    $ref: '#/components/schemas/cryptocurrency_symbol'
                quantity:
                    $ref: '#/components/schemas/cryptocurrency_quantity'
            required:
                - asset_symbol
                - quantity
        dispute_lifecycle_stage:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            readOnly: true
            description: The stage in the dispute lifecycle.
            enum:
                - INQUIRY
                - CHARGEBACK
                - PRE_ARBITRATION
                - ARBITRATION
        dispute_channel:
            readOnly: true
            type: string
            minLength: 1
            maxLength: 255
            description: The channel where the customer created the dispute.
            enum:
                - INTERNAL
                - EXTERNAL
                - ALERT
        dispute_info:
            type: object
            title: Dispute Summary Information
            description: The dispute summary information.
            properties:
                dispute_id:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[A-Za-z0-9-]+$
                    readOnly: true
                    description: The ID of the dispute.
                create_time:
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                    description: The date and time when the dispute was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.
                update_time:
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                    description: The date and time when the dispute was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.
                reason:
                    $ref: '#/components/schemas/dispute_reason'
                status:
                    readOnly: true
                    $ref: '#/components/schemas/status'
                dispute_state:
                    readOnly: true
                    $ref: '#/components/schemas/dispute_state'
                dispute_amount:
                    $ref: '#/components/schemas/money'
                    description: The amount in the transaction that the customer originally disputed. Because customers can sometimes dispute only part of the payment, the disputed amount might be different from the total gross or net amount of the original transaction.
                dispute_asset:
                    description: The asset in the transaction that the customer disputed.
                    $ref: '#/components/schemas/cryptocurrency'
                dispute_life_cycle_stage:
                    readOnly: true
                    $ref: '#/components/schemas/dispute_lifecycle_stage'
                dispute_channel:
                    readOnly: true
                    $ref: '#/components/schemas/dispute_channel'
                buyer_response_due_date:
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                    description: The date and time by when the customer must respond to the dispute, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). If the customer does not respond by this date and time, the dispute is closed in the merchant's favor. For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.
                seller_response_due_date:
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                    description: The date and time by when the merchant must respond to the dispute, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). If the merchant does not respond by this date and time, the dispute is closed in the customer's favor. For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.
                links:
                    type: array
                    minItems: 1
                    maxItems: 10
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
        dispute_search:
            type: object
            title: Dispute Search Response
            description: An array of disputes. Includes links that enable you to navigate through the response.
            properties:
                items:
                    type: array
                    minItems: 1
                    maxItems: 100
                    description: An array of disputes that match the filter criteria. Sorted in latest to earliest creation time order.
                    items:
                        $ref: '#/components/schemas/dispute_info'
                links:
                    type: array
                    minItems: 1
                    maxItems: 10
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
        buyer:
            type: object
            title: Customer
            description: The details for the customer who funds the payment. For example, the customer's first name, last name, and email address.
            properties:
                name:
                    type: string
                    minLength: 1
                    maxLength: 2000
                    pattern: ^[^~!@#$%^*()_{}:|\t\n/]+$
                    description: The customer's name.
        seller:
            type: object
            title: Merchant
            description: The details for the merchant who receives the funds and fulfills the order. For example, merchant ID, and contact email address.
            properties:
                email:
                    $ref: '#/components/schemas/email_address'
                    description: The email address for the merchant's PayPal account.
                merchant_id:
                    type: string
                    minLength: 1
                    maxLength: 255
                    description: The PayPal account ID for the merchant.
                    pattern: ^[0-9A-Za-z]+$
                name:
                    type: string
                    minLength: 1
                    maxLength: 2000
                    pattern: ^[^~!@#$%^*()_{}:|\t\n/]+$
                    description: The name of the merchant.
        item_type:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            title: Item Type
            description: The type of the item which has the issue.
            enum:
                - PRODUCT
                - SERVICE
                - BOOKING
                - DIGITAL_DOWNLOAD
        item_product_details: {}
        item_service_details: {}
        item_booking_details: {}
        item_digital_download_details: {}
        item_cancellation_details: {}
        item_agreed_refund_details: {}
        item_info:
            type: object
            title: Item Information
            description: The information for a purchased item in a disputed transaction.
            properties:
                item_id:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[A-Za-z0-9]+$
                    description: The item ID. If the merchant provides multiple pieces of evidence and the transaction has multiple item IDs, the merchant can use this value to associate a piece of evidence with an item ID.
                item_name:
                    type: string
                    minLength: 1
                    maxLength: 2000
                    description: The item name.
                item_description:
                    type: string
                    minLength: 1
                    maxLength: 2000
                    description: The item description.
                item_quantity:
                    type: string
                    description: The count of the item in the dispute. Must be a whole number.
                    minLength: 1
                    maxLength: 10
                    pattern: ^[1-9][0-9]{0,9}$
                partner_transaction_id:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[A-Za-z0-9]+$
                    description: The ID of the transaction in the partner system. The partner transaction ID is returned at an item level because the partner might show different transactions for different items in the cart.
                reason:
                    $ref: '#/components/schemas/dispute_reason'
                dispute_amount:
                    $ref: '#/components/schemas/money'
                    description: The amount of the item in the dispute.
                    readOnly: true
                notes:
                    type: string
                    minLength: 1
                    maxLength: 2000
                    description: Any notes provided with the item.
                item_type:
                    $ref: '#/components/schemas/item_type'
                product_details:
                    $ref: '#/components/schemas/item_product_details'
                service_details:
                    $ref: '#/components/schemas/item_service_details'
                booking_details:
                    $ref: '#/components/schemas/item_booking_details'
                digital_download_details:
                    $ref: '#/components/schemas/item_digital_download_details'
                cancellation_details:
                    $ref: '#/components/schemas/item_cancellation_details'
                agreed_refund_details:
                    $ref: '#/components/schemas/item_agreed_refund_details'
        payment_processor: {}
        transaction_info:
            type: object
            title: Transaction Information
            description: The transaction information.
            properties:
                paypal_account_id:
                    type: string
                    description: The ID of the PayPal account of the counterparty.
                    minLength: 1
                    maxLength: 24
                    pattern: ^[a-zA-Z0-9]*$
                transaction_id:
                    type: string
                    description: The PayPal-generated transaction ID.
                    readOnly: true
                    minLength: 1
                    maxLength: 24
                    pattern: ^[a-zA-Z0-9]*$
                paypal_reference_id:
                    type: string
                    description: The PayPal-generated base ID. PayPal exclusive. Cannot be altered. Defined as a related, pre-existing transaction or event.
                    minLength: 1
                    maxLength: 24
                    pattern: ^[a-zA-Z0-9]*$
                paypal_reference_id_type:
                    type: string
                    description: The PayPal reference ID type.
                    minLength: 3
                    maxLength: 3
                    pattern: ^[a-zA-Z0-9]*$
                    enum:
                        - ODR
                        - TXN
                        - SUB
                        - PAP
                transaction_event_code:
                    type: string
                    minLength: 1
                    maxLength: 5
                    pattern: ^[a-zA-Z0-9]*$
                    description: A five-digit transaction event code that classifies the transaction type based on money movement and debit or credit. For example, <code>T0001</code>. See [Transaction event codes](/docs/integration/direct/transaction-search/transaction-event-codes/).
                transaction_initiation_date:
                    description: The date and time when work on a transaction began in the PayPal system, as expressed in the time zone of the account on this side of the payment. Specify the value in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_time'
                transaction_updated_date:
                    description: The date and time when the transaction was last changed, as expressed in the time zone of the account on this side of the payment. Specify the value in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_time'
                transaction_amount:
                    $ref: '#/components/schemas/money'
                    description: The all-inclusive gross transaction amount that was transferred between the sender and receiver through PayPal.
                fee_amount:
                    $ref: '#/components/schemas/money'
                    description: The PayPal fee amount. All transaction fees are included in this amount, which is the record of fee associated with the transaction.<blockquote><strong>Note:</strong> This field contains a value only when a transaction fee is applied and processed for this transaction.</blockquote>
                discount_amount:
                    $ref: '#/components/schemas/money'
                    description: The reduction in price offered for goods or services purchased.<blockquote><strong>Note:</strong> This discount is for a price reduction that is offered for other than that at a individual item level.</blockquote>
                insurance_amount:
                    $ref: '#/components/schemas/money'
                    description: An insurance charge. Guarantees the quality or delivery of a product.
                sales_tax_amount:
                    $ref: '#/components/schemas/money'
                    description: The PayPal- or merchant-reported sales tax amount for the transaction.
                shipping_amount:
                    $ref: '#/components/schemas/money'
                    description: The PayPal- or merchant-reported shipping amount for the transaction.
                shipping_discount_amount:
                    $ref: '#/components/schemas/money'
                    description: The discount on the shipping amount.
                shipping_tax_amount:
                    $ref: '#/components/schemas/money'
                    description: The tax on the shipping service.
                other_amount:
                    $ref: '#/components/schemas/money'
                    description: The special amount that is added to the transaction.
                tip_amount:
                    $ref: '#/components/schemas/money'
                    description: The tip.
                transaction_status:
                    type: string
                    description: A code that indicates the transaction status. Value is:<table><thead><tr><th>Status&nbsp;code</th><th>Description</th></tr></thead><tbody><tr><td><code>D</code></td><td>PayPal or merchant rules denied the transaction.</td></tr><tr><td><code>P</code></td><td>The transaction is pending. The transaction was created but waits for another payment process to complete, such as an ACH transaction, before the status changes to <code>S</code>.</td></tr><tr><td><code>S</code></td><td>The transaction successfully completed without a denial and after any pending statuses.</td></tr><tr><td><code>V</code></td><td>A successful transaction was fully reversed and funds were refunded to the original sender.</td></tr></tbody></table>
                    minLength: 1
                    maxLength: 1
                    pattern: ^[a-zA-Z0-9]*$
                transaction_subject:
                    type: string
                    description: The subject of payment. The payer passes this value to the payee. The payer controls this data through the interface through which he or she sends the data.
                    minLength: 1
                    maxLength: 256
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                transaction_note:
                    type: string
                    description: A special note that the payer passes to the payee. Might contain special customer requests, such as shipping instructions.
                    minLength: 1
                    maxLength: 4000
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                payment_tracking_id:
                    type: string
                    description: The payment tracking ID, which is a unique ID that partners specify to either get information about a payment or request a refund.
                    minLength: 1
                    maxLength: 127
                    pattern: ^[a-zA-Z0-9]*$
                bank_reference_id:
                    type: string
                    description: The bank reference ID. The bank provides this value for an ACH transaction.
                    minLength: 1
                    maxLength: 127
                    pattern: ^[a-zA-Z0-9]*$
                ending_balance:
                    $ref: '#/components/schemas/money'
                    description: The ending balance.<blockquote><strong>Note:</strong> If you specify one or more optional query parameters, the <code>ending_balance</code> response field is empty.</blockquote>
                available_balance:
                    $ref: '#/components/schemas/money'
                    description: The available amount of transaction currency during the completion of this transaction.
                invoice_id:
                    type: string
                    description: The invoice ID that is sent by the merchant with the transaction.<blockquote><strong>Note:</strong> If an invoice ID was sent with the capture request, the value is reported. Otherwise, the invoice ID of the authorizing transaction is reported.</blockquote>
                    minLength: 1
                    maxLength: 127
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                custom_field:
                    type: string
                    description: The merchant-provided custom text.<blockquote><strong>Note:</strong> Usually, this field includes the unique ID for payments made with MassPay type transaction.</blockquote>
                    minLength: 1
                    maxLength: 127
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                protection_eligibility:
                    type: string
                    description: Indicates whether the transaction is eligible for protection. Value is:<ul><li><code>01</code>. Eligible.</li><li><code>02</code>. Not eligible</li><li><code>03</code>. Partially eligible.</li></ul>
                    minLength: 1
                    maxLength: 2
                    pattern: ^[a-zA-Z0-9]*$
                credit_term:
                    type: string
                    description: The credit term. The time span covered by the installment payments as expressed in the term length plus the length time unit code.
                    minLength: 1
                    maxLength: 25
                    pattern: ^[a-zA-Z0-9.]*$
                credit_transactional_fee:
                    $ref: '#/components/schemas/money'
                    description: The overall amount of the credit transaction fee.
                credit_promotional_fee:
                    $ref: '#/components/schemas/money'
                    description: The overall amount of the credit promotional fee.
                annual_percentage_rate:
                    $ref: '#/components/schemas/percentage'
                    description: The annual percentage rate (APR). Determines the amount of interest a consumer pays to finance a purchase at a merchant.
                payment_method_type:
                    type: string
                    minLength: 1
                    maxLength: 20
                    pattern: ^[a-zA-Z0-9-]*$
                    description: The payment method that was used for a transaction. Value is <code>PUI</code>, <code>installment</code>, or <code>mEFT</code>.<blockquote><strong>Note:</strong> Appears only for pay upon invoice (PUI), installment, and mEFT transactions. Merchants and partners in the EMEA region can use this attribute to note transactions that attract turn-over tax.</blockquote>
                instrument_type:
                    type: string
                    minLength: 1
                    maxLength: 64
                    description: A high-level classification of the type of financial instrument that was used to fund a payment. The pattern is not provided because the value is defined by an external party. E.g. PAYPAL, CREDIT_CARD, DEBIT_CARD, APPLE_PAY, BANK , VENMO ,Pay Upon Invoice, Pay Later  or <a href="https://developer.paypal.com/docs/checkout/integration-features/alternative-payment-methods/" title="Link to available APM list">Alternative Payment Methods (APM)</a>.
                instrument_sub_type:
                    type: string
                    minLength: 1
                    maxLength: 64
                    description: A finer-grained classification of the financial instrument that was used to fund a payment. For example, `Visa card` or a `Mastercard` for a credit card, BANKCARD ,DISCOVER etc. The pattern is not provided because the value is defined by an external party.
        fee_policy:
            type: object
            title: Fee Policy
            description: Policy that determines whether the fee needs to be charged, retained or returned while moving the money as part of dispute process.
        dispute_outcome:
            type: object
            title: Dispute Outcome
            description: The outcome of a dispute.
            properties:
                outcome_code:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    description: The outcome of a resolved dispute.
                    enum:
                        - RESOLVED_BUYER_FAVOUR
                        - RESOLVED_SELLER_FAVOUR
                        - RESOLVED_WITH_PAYOUT
                        - CANCELED_BY_BUYER
                        - ACCEPTED
                        - DENIED
                        - NONE
                amount_refunded:
                    $ref: '#/components/schemas/money'
                    description: The amount that either the merchant or PayPal refunds the customer.
                asset_refunded:
                    description: The asset that either the merchant or PayPal refunds the customer.
                    $ref: '#/components/schemas/cryptocurrency'
        adjudication_type:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            description: The type of adjudication.
            enum:
                - DENY_BUYER
                - PAYOUT_TO_BUYER
                - PAYOUT_TO_SELLER
                - RECOVER_FROM_SELLER
        adjudication_reason:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            description: The reason for the adjudication type.
            enum:
                - AMOUNT_DIFFERENCE_EXPECTED_DUE_TO_FEES
                - BILLING_AGREEMENT_CHANGE_DISCLOSED
                - BILLING_AGREEMENT_CHANGE_NOT_DISCLOSED
                - BILLING_AGREEMENT_DATE_CHANGE_DISCLOSED
                - BILLING_AGREEMENT_DATE_CHANGE_NOT_DISCLOSED
                - BUYER_ATTEMPTED_RETURN
                - BUYER_BILLED_ONLY_ONCE
                - BUYER_CANCELLED_CASE
                - BUYER_CANCELLED_SERVICE
                - BUYER_FAILED_TO_DESCRIBE_ISSUE
                - BUYER_HAS_POSSESSION_OF_THE_MERCHANDISE_OR_SERVICE
                - BUYER_MADE_NO_ATTEMPT_TO_RESOLVE_WITH_SELLER
                - BUYER_NOT_IN_POSSESSION_OF_ITEM_TO_RETURN
                - BUYER_PROVIDED_CREDIT_RECEIPT
                - BUYER_RECEIVED_DUPLICATE_REFUND
                - CANCELLED_PER_TERMS_OF_BILLING_AGREEMENT
                - CARD_NOT_STOLEN
                - CARD_NOT_STOLEN_BEFORE_AUTH
                - CUSTOMER_RECOGNIZES_TRANSACTION
                - DECISION_BASED_ON_AVAILABLE_INFORMATION
                - DELIVERY_AFTER_EXPECTED_DELIVERY_DATE
                - DELIVERY_DUE_WITHIN_EXPECTED_DELIVERY_DATE
                - DELIVERY_OR_SERVICE_REFUSED
                - DOCUMENTATION_MATCHES_AMOUNT_CHARGED
                - DOCUMENTATION_MATCHES_AMOUNT_IN_PAYPAL_ACCOUNT
                - DUPLICATE_ADD_FUNDS
                - EFFORTLESS_SELLER_PROTECTION
                - IN_PERSON_DELIVERY
                - INELIGIBLE_BUYER_PROTECTION_POLICY
                - INELIGIBLE_SELLER_PROTECTION_POLICY
                - INQUIRY_OFFER_ITEM_REPLACED
                - INQUIRY_OFFER_PARTIAL_REFUND
                - INQUIRY_OFFER_REFUND_WITH_ITEM_RETURN
                - INQUIRY_OFFER_REFUND_WITH_REPLACEMENT
                - INVALID_APPEAL_REASON
                - INVALID_CHARGEBACK_SELLER_FAVOUR
                - INVALID_DELIVERY_PROOF
                - INVALID_DELIVERY_PROOF_SIGNATURE
                - INVALID_DOCUMENTATION
                - INVALID_PROOF_OF_SHIPMENT
                - INVALID_REFUND_PROOF
                - INVALID_RETURN_DELIVERY_NO_SIGNATURE_PROOF
                - INVALID_RETURN_DELIVERY_PROOF
                - INVALID_TRACKING
                - ITEM_ALTERED_REPAIRED
                - ITEM_NOT_AS_ADVERTISED
                - ITEM_NOT_AS_DESCRIBED
                - ITEM_NOT_DAMAGED
                - ITEM_NOT_DELIVERED
                - ITEM_NOT_RETURNED_TO_SELLER
                - ITEM_NOT_SHIPPED
                - ITEM_OF_DIFFERENT_QUALITY_OR_QUANTITY
                - ITEM_OUT_OF_STOCK_AND_NOT_DELIVERED
                - ITEM_RETURNED_TO_SELLER
                - ITEM_SERVICE_MISREPRESENTED
                - ITEM_SERVICE_NOT_MISREPRESENTED
                - ITEM_SERVICE_RECEIVED_BY_BUYER
                - ITEM_SOLD_AS_DESCRIBED
                - ITEM_VALUE_UNAFFECTED
                - MULTIPLE_APPEALS_WITH_SAME_REASON
                - NO_DOCUMENTATION_FROM_BUYER
                - NO_DOCUMENTATION_SUPPORTING_DUE_OF_CREDIT
                - NO_PROOF_OF_DELIVERY
                - NO_PROOF_OF_DELIVERY_INTANGIBLE
                - NO_PROTECTION_FOR_DIGITAL_GOODS_SERVICE
                - NO_RESPONSE_FROM_BUYER
                - NO_RESPONSE_FROM_BUYER_FOR_ADDITIONAL_INFO_REQUEST
                - NO_SELLER_RESPONSE
                - NO_SELLER_RESPONSE_FOR_ADDITIONAL_INFO_REQUEST
                - NO_VALID_SHIPMENT_PROOF
                - NOT_A_BILLING_ERROR
                - NOT_AN_UNAUTHORIZED_TRANSACTION
                - NOT_DUPLICATE_FUNDS_ADDED_ONCE
                - NOT_DUPLICATE_FUNDS_WITHDRAWN_ONCE
                - NOT_SHIPPED_TO_CORRECT_ADDRESS
                - PARTIAL_REFUND_ISSUED_FOR_MISSING_ITEMS
                - PARTIAL_REFUND_OFFER_ACCEPTED
                - PAYMENT_REVERSED_ALREADY
                - POS_SUBMITTED_INSTEAD_OF_POD
                - PREAUTH_INSTALLMENT_DUE
                - PROOF_OF_BILLING_AFTER_CANCELLATION_ACCEPTED
                - PROOF_OF_DUPLICATE_DENIED_OR_INSUFFICIENT
                - PROOF_OF_INCORRECT_TRANSACTION_AMOUNT_ACCEPTED
                - PROOF_OF_PAID_BY_OTHER_MEANS_NOT_SUBMITTED
                - PROOF_OF_TRACKING_NOT_SUBMITTED
                - PROTECTED_BY_PAYPAL
                - REPRESENTED_BY_PAYPAL
                - SELLER_ACCEPTED_MULTIPLE_PAYMENTS
                - SELLER_AGREED_REFUND_WITHOUT_RETURN
                - SELLER_AGREED_TO_ISSUE_CREDIT
                - SELLER_ISSUED_CREDIT_TO_BUYER
                - SELLER_ISSUED_REFUND
                - SELLER_NOT_REACHABLE
                - SELLER_RECEIVED_PAYMENT_TWICE_OR_FOR_REPLACEMENT
                - SELLER_REFUSED_REFUND
                - SELLER_REFUSED_RETURN
                - SELLER_SURCHARGED_BUYER
                - SERVICE_NOT_COMPLETED_AS_AGREED
                - SHIPPING_COMPANY_WONT_SHIP
                - TRACKING_PROOF_NOT_ENOUGH
                - TRANSACTION_AUTHORIZED_BY_CARDHOLDER
                - TRANSACTION_CANCELLED_AFTER_AUTHORIZATION_DATE
                - TRANSACTION_CANCELLED_BEFORE_SHIPMENT_SERVICE_DATE
                - TRANSACTION_MATCHES_BUYER_SPENDING_PATTERN
                - TRANSACTION_PROCESSED_CORRECTLY
                - TRUSTED_BUYER_PAYOUT
                - UNUSED_SHIPPING_LABEL
                - VALID_PROOF_OF_DELIVERY
                - VALID_PROOF_OF_DELIVERY_WITH_SIGNATURE
                - VALID_PROOF_OF_REFUND
                - VALID_PROOF_SUPPORTING_CLAIM
                - VALID_RETURN_DELIVERY_PROOF
                - VALID_RETURN_DELIVERY_PROOF_WITH_SIGNATURE
                - VALID_SHIPMENT_PROOF
                - VALUE_AFFECTED_SIGNIFICANTLY
                - PROTECTION_POLICY_APPLIES
        adjudication:
            type: object
            title: Adjudication
            description: The Adjudication details for the dispute.
            properties:
                type:
                    description: The type of adjudication.
                    $ref: '#/components/schemas/adjudication_type'
                adjudication_time:
                    description: The date and time when the adjudication was done, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_time'
                reason:
                    description: The reason for the adjudication type.
                    $ref: '#/components/schemas/adjudication_reason'
                dispute_life_cycle_stage:
                    description: The dispute life cycle stage during the adjudication.
                    $ref: '#/components/schemas/dispute_lifecycle_stage'
            required:
                - type
                - adjudication_time
        money_movement_reason:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            description: The reason for the money movement.
            enum:
                - DISPUTE_SETTLEMENT_FEE
                - DISPUTE_SETTLEMENT
                - DISPUTE_FEE
                - CHARGEBACK_FEE
        money_movement:
            type: object
            title: Money movement
            description: The Money movement details with party.
            properties:
                affected_party:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    description: The affected party in the money movement.
                    enum:
                        - SELLER
                        - BUYER
                        - PAYMENT_PROCESSOR
                amount:
                    description: The amount transferred as part of the money movement.
                    $ref: '#/components/schemas/money'
                asset:
                    description: The asset transferred as part of the money movement.
                    $ref: '#/components/schemas/cryptocurrency'
                initiated_time:
                    description: The date and time when the money movement was initiated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_time'
                type:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    description: The type of the money movement.
                    enum:
                        - DEBIT
                        - CREDIT
                reason:
                    description: The reason for the money movement.
                    $ref: '#/components/schemas/money_movement_reason'
        document:
            type: object
            title: Document
            description: The document object.
            properties:
                id:
                    type: string
                    description: The encrypted identifier for the document.
                    readOnly: true
                    minLength: 1
                    maxLength: 20
                    pattern: ^[0-9A-Z]+$
                labels:
                    type: array
                    items:
                        type: string
                        description: A document label.
                    minItems: 1
                    maxItems: 50
                    description: The document labels. A document could be classfied to multiple categories. For example, a bill document can be classfified as `BILL DOCUMENT` and `UTILITY DOCUMENT`.
                name:
                    type: string
                    minLength: 1
                    maxLength: 100
                    pattern: ^[0-9A-Za-z_-]+$
                    description: The file name.
                identification_number:
                    type: string
                    minLength: 1
                    maxLength: 100
                    pattern: ^[a-zA-Z0-9-]+$
                    description: The number for the document. It is the ID number if the document is `ID CARD`, the passport number if the document is `PASSPORT`, etc.
                issue_date:
                    $ref: '#/components/schemas/date_no_time'
                    description: The issue date of the document.
                expiry_date:
                    $ref: '#/components/schemas/date_no_time'
                    description: The expire data of the document.
                issuing_country_code:
                    $ref: '#/components/schemas/country_code'
                    description: The country code of the document.
                files:
                    type: array
                    items:
                        $ref: '#/components/schemas/file_reference'
                    minItems: 1
                    maxItems: 50
                    description: The files contained in the document. For example, a document could be represented by a front page file and a back page file, etc.
                links:
                    type: array
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
                    readOnly: true
                    minItems: 1
                    maxItems: 10
                    description: The HATEOAS links.
        message:
            type: object
            title: Message
            description: The user- and seller-provided messages.
            properties:
                message:
                    type: string
                    description: The message text.
                    maxLength: 255
                language_code:
                    type: string
                    description: The [locale code](/docs/api/reference/locale-codes/) for the language of the message, such as `en_US`.
        merchant_contacted_outcome:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            title: Merchant Contacted Outcome
            description: The outcome when the customer has contacted the merchant.
            enum:
                - NO_RESPONSE
                - FIXED
                - NOT_FIXED
        merchant_contacted_mode:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            title: Merchant Contacted Method
            description: The method used to contact the merchant.
            enum:
                - WEBSITE
                - PHONE
                - EMAIL
                - WRITTEN
                - IN_PERSON
        duplicate_transaction:
            type: object
            title: Duplicate Transaction
            description: The duplicate transaction details.
            properties:
                received_duplicate:
                    type: boolean
                    description: If `true`, indicates that a duplicate transaction was received.
                original_transaction:
                    $ref: '#/components/schemas/transaction_info'
                    description: The transaction details for the original transaction, when the dispute reason is `DUPLICATE_TRANSACTION`. Currently, contains only the date and amount.
        incorrect_transaction_amount:
            type: object
            title: Incorrect Transaction Amount
            description: The incorrect transaction amount details.
            properties:
                correct_transaction_amount:
                    $ref: '#/components/schemas/money'
                correct_transaction_asset:
                    description: The correct asset quantity of the transaction.
                    $ref: '#/components/schemas/cryptocurrency'
                correct_transaction_time:
                    $ref: '#/components/schemas/date_time'
                    description: The date and time when the customer created the transaction, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        payment_by_other_means:
            type: object
            title: Payment by Other Means
            description: The payment by other means details.
            properties:
                charge_different_from_original:
                    type: boolean
                    description: If `true`, indicates that a charge was made that is different from the original charge.
                received_duplicate:
                    type: boolean
                    description: If `true`, indicates that a duplicate transaction was received.
                payment_method:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    description: The payment method.
                    enum:
                        - CASH
                        - CREDIT_CARD
                        - CHECK
                        - PAYPAL
                        - DEBIT_CARD
                        - GIFT_CARD
                        - BANK_TRANSFER
                payment_instrument_suffix:
                    type: string
                    minLength: 2
                    maxLength: 4
                    description: Last 2-4 characters of the payment instrument. For payment_method CHECK, payment_instrument_suffix entered must be of minimum length 2-4 characters. For payment_method CREDIT_CARD, DEBIT_CARD, GIFT_CARD, BANK_TRANSFER, payment_instrument_suffix entered must be of length 4.
        cancellation_details:
            type: object
            title: Cancellation Details
            description: The cancellation details.
            properties:
                cancellation_date:
                    description: The date and time of the cancellation, in [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_time'
                cancellation_number:
                    description: The cancellation number.
                    type: string
                    minLength: 1
                    maxLength: 127
                    pattern: ^[A-Za-z0-9]+$
                cancelled:
                    type: boolean
                    description: Indicates whether the dispute was canceled.
                cancellation_mode:
                    description: Indicates the mode used for order cancellation.
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    enum:
                        - CANCELLED_PAYPAL_BILLING_AGREEMENT
                        - WEBSITE
                        - PHONE
                        - EMAIL
                        - WRITTEN
                        - IN_PERSON
        return_details:
            type: object
            title: Return Details
            description: The return details for the product.
            properties:
                return_time:
                    $ref: '#/components/schemas/date_time'
                    description: The date and time when the product was returned, [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6).
                mode:
                    description: The method that the customer used to return the product.
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[A-Z_]+$
                    enum:
                        - SHIPPED
                        - IN_PERSON
                receipt:
                    type: boolean
                    description: Indicates whether customer has the return receipt.
                return_confirmation_number:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[A-Za-z0-9:\-]+$
                    description: The confirmation number for the item return.
                returned:
                    description: If `true`, indicates that the item was returned but the seller refused to accept the return and if `false`, indicates the item was not attempted to return.
                    type: boolean
        product_details:
            type: object
            title: Product Details
            description: The product information.
            properties:
                description:
                    description: The product description.
                    type: string
                    minLength: 1
                    maxLength: 2000
                product_received:
                    description: Indicates whether the product was, or was not, received or returned.
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    enum:
                        - YES
                        - NO
                        - RETURNED
                product_received_time:
                    description: The date and time when product was delivered.
                    $ref: '#/components/schemas/date_time'
                expected_delivery_date:
                    description: The expected delivery date and time of the product.
                    $ref: '#/components/schemas/date_time'
                sub_reasons:
                    description: An array of sub-reasons for the product issue.
                    type: array
                    items:
                        type: string
                        minLength: 1
                        maxLength: 255
                        pattern: ^[0-9A-Z_]+$
                        description: The sub-reason for the product issue.
                        enum:
                            - DAMAGED
                            - DIFFERENT
                            - MISSING_PARTS
                            - OTHER
                purchase_url:
                    type: string
                    format: uri
                    description: The URL where the customer purchased the product.
                return_details:
                    $ref: '#/components/schemas/return_details'
        service_details:
            type: object
            title: Service Details
            description: The service details.
            properties:
                description:
                    description: The service description.
                    type: string
                    minLength: 1
                    maxLength: 2000
                service_started:
                    description: Indicates whether the service was started or cancelled.
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    enum:
                        - YES
                        - NO
                        - CANCELLED
                note:
                    description: The customer specified note about the service usage.
                    type: string
                    minLength: 1
                    maxLength: 2000
                sub_reasons:
                    description: An array of sub-reasons for the service issue.
                    type: array
                    items:
                        description: The sub-reason for the service issue.
                        type: string
                        minLength: 1
                        maxLength: 255
                        pattern: ^[0-9A-Z_]+$
                        enum:
                            - DAMAGED
                            - DIFFERENT
                            - INCOMPLETE
                            - OTHER
                purchase_url:
                    type: string
                    format: uri
                    description: The URL of the merchant or marketplace site where the customer purchased the service.
        agreed_refund_details:
            type: object
            title: Agreed Refund Details
            description: Details of Agreed Refund between customer and merchant.
            properties:
                merchant_agreed_refund:
                    type: boolean
                    description: Indicates whether merchant has agreed to refund the buyer or not.
                merchant_agreed_refund_time:
                    $ref: '#/components/schemas/date_time'
                    description: The date and time proposed by merchant to provide the refund, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        credit_not_processed:
            type: object
            title: Credit Not Processed
            description: The credit not processed details.
            properties:
                issue_type:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    description: The issue type.
                    enum:
                        - PRODUCT
                        - SERVICE
                expected_refund:
                    $ref: '#/components/schemas/money'
                cancellation_details:
                    $ref: '#/components/schemas/cancellation_details'
                product_details:
                    $ref: '#/components/schemas/product_details'
                service_details:
                    $ref: '#/components/schemas/service_details'
                agreed_refund_details:
                    $ref: '#/components/schemas/agreed_refund_details'
        canceled_recurring_billing:
            type: object
            title: Canceled Recurring Billing
            description: The recurring billing canceled details.
            properties:
                expected_refund:
                    $ref: '#/components/schemas/money'
                cancellation_details:
                    $ref: '#/components/schemas/cancellation_details'
        billing_disputes_properties:
            type: object
            title: Billing Disputes Properties
            description: The billing issue details.
            properties:
                duplicate_transaction:
                    $ref: '#/components/schemas/duplicate_transaction'
                incorrect_transaction_amount:
                    $ref: '#/components/schemas/incorrect_transaction_amount'
                payment_by_other_means:
                    $ref: '#/components/schemas/payment_by_other_means'
                credit_not_processed:
                    $ref: '#/components/schemas/credit_not_processed'
                canceled_recurring_billing:
                    $ref: '#/components/schemas/canceled_recurring_billing'
        merchandize_dispute_properties:
            type: object
            title: Merchandise Dispute Properties
            description: The customer-provided merchandise issue details for the dispute.
            properties:
                issue_type:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    description: The issue type.
                    enum:
                        - PRODUCT
                        - SERVICE
                product_details:
                    $ref: '#/components/schemas/product_details'
                service_details:
                    $ref: '#/components/schemas/service_details'
                cancellation_details:
                    $ref: '#/components/schemas/cancellation_details'
                return_shipping_address:
                    description: The return address for the item. Required when the customer must return an item to the merchant for the <a href="/docs/integration/direct/customer-disputes/integration-guide/#merchandise_or_service_not_as_described"><code>MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED</code></a> dispute reason.
                    $ref: '#/components/schemas/address_portable'
        extensions:
            type: object
            title: Extensions
            description: The extended properties for the dispute. Includes additional information for a dispute category, such as billing disputes, the original transaction ID, and the correct amount.
            properties:
                merchant_contacted:
                    type: boolean
                    description: Indicates that the merchant was contacted.
                merchant_contacted_outcome:
                    $ref: '#/components/schemas/merchant_contacted_outcome'
                merchant_contacted_time:
                    description: The date and time when merchant was contacted.
                    $ref: '#/components/schemas/date_time'
                merchant_contacted_mode:
                    description: The method used to contact the merchant.
                    $ref: '#/components/schemas/merchant_contacted_mode'
                buyer_contacted_time:
                    description: The date and time when the buyer contacted the partner to file a dispute, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.
                    $ref: '#/components/schemas/date_time'
                buyer_contacted_channel:
                    type: string
                    minLength: 1
                    maxLength: 255
                    description: The channel through which the buyer contacted the partner to file a dispute. Partners that allow buyers to create dispute from multiple channels can use this field to help identify which channel was used for each individual dispute.
                billing_dispute_properties:
                    $ref: '#/components/schemas/billing_disputes_properties'
                merchandize_dispute_properties:
                    $ref: '#/components/schemas/merchandize_dispute_properties'
        tracking_info:
            type: object
            title: Tracking Information
            description: The tracking information.
            properties:
                carrier_name:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    description: The name of the shipment carrier for the transaction for this dispute.
                    enum:
                        - UPS
                        - USPS
                        - FEDEX
                        - AIRBORNE_EXPRESS
                        - DHL
                        - AIRSURE
                        - ROYAL_MAIL
                        - PARCELFORCE
                        - SWIFTAIR
                        - OTHER
                        - UK_PARCELFORCE
                        - UK_ROYALMAIL_SPECIAL
                        - UK_ROYALMAIL_RECORDED
                        - UK_ROYALMAIL_INT_SIGNED
                        - UK_ROYALMAIL_AIRSURE
                        - UK_UPS
                        - UK_FEDEX
                        - UK_AIRBORNE_EXPRESS
                        - UK_DHL
                        - UK_OTHER
                        - UK_CANNOT_PROV_TRACK
                        - UK_CANNOT_PROVIDE_TRACKING
                        - CA_CANADA_POST
                        - CA_PUROLATOR
                        - CA_CANPAR
                        - CA_LOOMIS
                        - CA_TNT
                        - TNT
                        - CA_OTHER
                        - CA_CANNOT_PROV_TRACK
                        - DE_DP_DHL_WITHIN_EUROPE
                        - DE_DP_DHL_T_AND_T_EXPRESS
                        - DE_DHL_DP_INTL_SHIPMENTS
                        - CA_CANNOT_PROVIDE_TRACKING
                        - DE_GLS
                        - ' DE_DPD_DELISTACK'
                        - DE_HERMES
                        - DE_UPS
                        - DE_FEDEX
                        - DE_TNT
                        - DE_OTHER
                        - FR_CHRONOPOST
                        - FR_COLIPOSTE
                        - FR_DHL
                        - FR_UPS
                        - FR_FEDEX
                        - FR_TNT
                        - FR_GLS
                        - FR_OTHER
                        - IT_POSTE_ITALIA
                        - IT_DHL
                        - IT_UPS
                        - IT_FEDEX
                        - IT_TNT
                        - IT_GLS
                        - IT_OTHER
                        - AU_AUSTRALIA_POST_EP_PLAT
                        - AU_AUSTRALIA_POST_EPARCEL
                        - AU_AUSTRALIA_POST_EMS
                        - AU_DHL
                        - AU_STAR_TRACK_EXPRESS
                        - AU_UPS
                        - AU_FEDEX
                        - AU_TNT
                        - AU_TOLL_IPEC
                        - AU_OTHER
                        - FR_SUIVI
                        - IT_EBOOST_SDA
                        - ES_CORREOS_DE_ESPANA
                        - ES_DHL
                        - ES_UPS
                        - ES_FEDEX
                        - ES_TNT
                        - ES_OTHER
                        - AT_AUSTRIAN_POST_EMS
                        - AT_AUSTRIAN_POST_PPRIME
                        - BE_CHRONOPOST
                        - BE_TAXIPOST
                        - CH_SWISS_POST_EXPRES
                        - CH_SWISS_POST_PRIORITY
                        - CN_CHINA_POST
                        - HK_HONGKONG_POST
                        - IE_AN_POST_SDS_EMS
                        - IE_AN_POST_SDS_PRIORITY
                        - IE_AN_POST_REGISTERED
                        - IE_AN_POST_SWIFTPOST
                        - IN_INDIAPOST
                        - JP_JAPANPOST
                        - KR_KOREA_POST
                        - NL_TPG
                        - SG_SINGPOST
                        - TW_CHUNGHWA_POST
                        - CN_CHINA_POST_EMS
                        - CN_FEDEX
                        - CN_TNT
                        - CN_UPS
                        - CN_OTHER
                        - NL_TNT
                        - NL_DHL
                        - NL_UPS
                        - NL_FEDEX
                        - NL_KIALA
                        - BE_KIALA
                        - PL_POCZTA_POLSKA
                        - PL_POCZTEX
                        - PL_GLS
                        - PL_MASTERLINK
                        - PL_TNT
                        - PL_DHL
                        - PL_UPS
                        - PL_FEDEX
                        - JP_SAGAWA_KYUU_BIN
                        - JP_NITTSU_PELICAN_BIN
                        - JP_KURO_NEKO_YAMATO_UNYUU
                        - JP_TNT
                        - JP_DHL
                        - JP_UPS
                        - JP_FEDEX
                        - NL_PICKUP
                        - NL_INTANGIBLE
                        - NL_ABC_MAIL
                        - HK_FOUR_PX_EXPRESS
                        - HK_FLYT_EXPRESS
                        - US_ASCENDIA
                        - US_ENSENDA
                        - US_GLOBEGISTICS
                        - US_ONTRAC
                        - RRDONNELLEY
                        - ASENDIA_UK
                        - UK_COLLECTPLUS
                        - UK_DPD
                        - UK_HERMESWORLD
                        - UK_INTERLINK_EXPRESS
                        - UK_TNT
                        - UK_UK_MAIL
                        - UK_YODEL
                        - BUYLOGIC
                        - CN_EMS
                        - CHINA_POST
                        - CNEXPS
                        - CPACKET
                        - CUCKOOEXPRESS
                        - CN_EC
                        - CN_EMPS
                        - DE_ASENDIA
                        - UK_DELTEC
                        - DE_DEUTSCHE
                        - DE_DPD
                        - RABEN_GROUP
                        - GLOBAL_TNT
                        - ADSONE
                        - AU_AU_POST
                        - BONDSCOURIERS
                        - COURIERS_PLEASE
                        - DTDC_AU
                        - AU_FASTWAY
                        - HUNTER_EXPRESS
                        - SENDLE
                        - AUS_TOLL
                        - TOLL
                        - UBI_LOGISTICS
                        - OMNIPARCEL
                        - QUANTIUM
                        - CN_SF_EXPRESS
                        - SEKOLOGISTICS
                        - HK_TAQBIN
                        - GB_APC
                        - CA_CANPAR_COURIER
                        - GLOBAL_ESTES
                        - CA_GREYHOUND
                        - PUROLATOR
                        - US_RL
                        - IT_BRT
                        - DMM_NETWORK
                        - IT_FERCAM
                        - HERMES_IT
                        - IT_POSTE_ITALIANE
                        - IT_SDA
                        - IT_SGT
                        - GLOBAL_SKYNET
                        - FR_BERT
                        - FR_COLIS
                        - FR_GEODIS
                        - FR_LAPOSTE
                        - FR_TELIWAY
                        - DPD_POLAND
                        - INPOST_PACZKOMATY
                        - POL_POCZTA
                        - POL_SIODEMKA
                        - ESP_CORREOS
                        - ES_CORREOS
                        - ESP_NACEX
                        - ESP_ASM
                        - ESP_REDUR
                        - CBL_LOGISTICA
                        - EKART
                        - IND_DELHIVERY
                        - IND_BLUEDART
                        - IND_DTDC
                        - IND_PROFESSIONAL_COURIERS
                        - IND_REDEXPRESS
                        - IND_XPRESSBEES
                        - IND_DOTZOT
                        - THA_KERRY
                        - SENDIT
                        - ACOMMERCE
                        - NINJAVAN_THAI
                        - NIM_EXPRESS
                        - THA_THAILAND_POST
                        - THA_DYNAMIC_LOGISTICS
                        - ALPHAFAST
                        - FASTRAK_TH
                        - EPARCEL_KR
                        - CJ_KOREA_THAI
                        - RINCOS
                        - KOR_KOREA_POST
                        - KOR_CJ
                        - KOR_ECARGO
                        - SREKOREA
                        - ROCKETPARCEL
                        - BG_BULGARIAN_POST
                        - JPN_JAPAN_POST
                        - JPN_YAMATO
                        - JPN_SAGAWA
                        - TUR_PTT
                        - AUT_AUSTRIAN_POST
                        - AU_AUSTRIAN_POST
                        - RUSSIAN_POST
                        - BEL_DHL
                        - FR_MONDIAL
                        - EU_BPOST
                        - LANDMARK_GLOBAL
                        - IDN_POS
                        - IDN_POS_INT
                        - IDN_JNE
                        - IDN_PANDU
                        - RPX
                        - IDN_TIKI
                        - IDN_LION_PARCEL
                        - NINJAVAN_ID
                        - IDN_WAHANA
                        - IDN_FIRST_LOGISTICS
                        - UK_AN_POST
                        - DPD
                        - UK_FASTWAY
                        - UK_NIGHTLINE
                        - WISELOADS
                        - GR_ELTA
                        - GRC_ACS
                        - GR_GENIKI
                        - NINJAVAN_PHILIPPINES
                        - PHL_XEND_EXPRESS
                        - PHL_LBC
                        - PHL_JAMEXPRESS
                        - PHL_AIRSPEED
                        - PHL_RAF
                        - DIRECTLOG
                        - BRA_CORREIOS
                        - NLD_DHL
                        - NLD_POSTNL
                        - NLD_GLS
                        - NLD_TRANSMISSION
                        - CORREOS_DE_MEXICO
                        - MEX_ESTAFETA
                        - MEX_SENDA
                        - MEX_REDPACK
                        - MEX_AEROFLASH
                        - NATIONWIDE_MY
                        - MYS_MYS_POST
                        - MYS_TAQBIN
                        - MYS_SKYNET
                        - MYS_CITYLINK
                        - MYS_AIRPAK
                        - NINJAVAN_MY
                        - KANGAROO_MY
                        - VNM_VIETNAM_POST
                        - VNPOST_EMS
                        - PRT_INT_SEUR
                        - PRT_CTT
                        - PRT_CHRONOPOST
                        - PRT_SEUR
                        - ADICIONAL
                        - LTU_LIETUVOS
                        - DPEX
                        - LWE_HK
                        - SG_SG_POST
                        - SG_TAQBIN
                        - SG_NINJAVAN
                        - SG_ZALORA
                        - JET_SHIP
                        - SG_PARCELPOST
                        - CHE_SWISS_POST
                        - ASENDIA_HK
                        - HUN_MAGYAR
                        - POSTNORD_LOGISTICS
                        - SWE_DIRECTLINK
                        - SWE_POSTNORD
                        - SWE_DB
                        - CZE_CESKA
                        - NZ_NZ_POST
                        - NZ_COURIER_POST
                        - FASTWAY_NZ
                        - TW_TAIWAN_POST
                        - SPREADEL
                        - ARE_EMIRATES_POST
                        - AXL
                        - CYP_CYPRUS_POST
                        - HRV_HRVATSKA
                        - NOR_POSTEN
                        - RAM
                        - THECOURIERGUY
                        - ZA_FASTWAY
                        - DPE_EXPRESS
                        - POSTI
                        - MATKAHUOLTO
                        - GLOBAL_DHL
                        - ARG_CORREO
                        - ARG_OCA
                        - POST_SERBIA
                        - BH_POSTA
                        - CORREOS_CHILE
                        - APR_72
                        - CORREOS_DE_COSTA_RICA
                        - POSTUR_IS
                        - SPEEDEXCOURIER
                        - ROU_POSTA
                        - UKR_NOVA
                        - UKR_POSHTA
                        - NGA_NIPOST
                        - NG_COURIERPLUS
                        - ESHOPWORLD
                        - WEBINTERPRET
                        - HERMES
                        - ABC_MAIL
                        - ARAMEX
                        - YANWEN
                        - INTERNATIONAL_BRIDGE
                        - SFC_LOGISTICS
                        - BQC_EXPRESS
                        - ONE_WORLD
                        - IT_REGISTER_MAIL
                        - WINIT
                        - CONTINENTAL
                        - EFS
                        - PANTOS
                        - RELAIS_COLIS
                        - US_DHL_EXPRESS
                        - US_DHL_PARCEL
                        - US_DHL_ECOMMERCE
                        - US_DHL_GLOBALFORWARDING
                        - UK_DHL_EXPRESS
                        - UK_DHL_PARCEL
                        - UK_DHL_GLOBALFORWARDING
                        - CN_DHL_EXPRESS
                        - CN_DHL_ECOMMERCE
                        - CN_DHL_GLOBALFORWARDING
                        - DE_DHL_EXPRESS
                        - DE_DHL_PARCEL
                        - DE_DHL_PACKET
                        - DE_DHL_ECOMMERCE
                        - DE_DHL_GLOBALFORWARDING
                        - DE_DHL_DEUTSCHEPOST
                        - AU_DHL_EXPRESS
                        - AU_DHL_ECOMMERCE
                        - AU_DHL_GLOBALFORWARDING
                        - HK_DHL_EXPRESS
                        - HK_DHL_ECOMMERCE
                        - HK_DHL_GLOBALFORWARDING
                        - CA_DHL_EXPRESS
                        - CA_DHL_ECOMMERCE
                        - CA_DHL_GLOBALFORWARDING
                        - IT_DHL_EXPRESS
                        - IT_DHL_ECOMMERCE
                        - IT_DHL_GLOBALFORWARDING
                        - FR_DHL_EXPRESS
                        - FR_DHL_PARCEL
                        - FR_DHL_GLOBALFORWARDING
                        - PL_DHL_EXPRESS
                        - PL_DHL_PARCEL
                        - PL_DHL_GLOBALFORWARDING
                        - ABC_PACKAGE
                        - AN_POST
                        - APC_OVERNIGHT
                        - ASM_ES
                        - AUPOST_CN
                        - ACOMMMERCE
                        - ADICIONAL_PT
                        - AIR_21
                        - AIRBORNE_EXPRESS_UK
                        - AIRPAK_MY
                        - AIRSPEED
                        - ASENDIA_DE
                        - ASENDIA_US
                        - AUSTRALIA_POST
                        - TOLL_AU
                        - AUSTRIAN_POST_EXPRESS
                        - AUSTRIAN_POST
                        - B_TWO_C_EUROPE
                        - BERT
                        - BPOST
                        - BRT_IT
                        - BLUEDART
                        - BONDS_COURIERS
                        - BPOST_INT
                        - BULGARIAN_POST
                        - CJ_LOGISTICS
                        - CJ_INT_MY
                        - CJ_MY
                        - CJ_TH
                        - CANADA_POST
                        - CANPAR
                        - CESKA_CZ
                        - CHRONOPOST_FR
                        - CHRONOPOST_PT
                        - CHUNGHWA_POST
                        - CITYLINK_MY
                        - COLIPOSTE
                        - COLIS
                        - COLLECTPLUS
                        - CORREOS_AG
                        - CORREOS_BR
                        - CORREOS_CL
                        - CORREOS_CR
                        - CORREOS_MX
                        - CORREOS_ES
                        - CORREOS_EXPRESS
                        - COURIERPLUS
                        - COURIER_POST
                        - CYPRUS_POST_CYP
                        - DBSCHENKER_SE
                        - DHL_ES
                        - DHL_ACTIVE_TRACING
                        - DHL_AU
                        - DHL_BENELUX
                        - DHL_DEUTSCHE_POST
                        - DHL_FR
                        - DHL_GLOBAL_ECOMMERCE
                        - DHL_IT
                        - DHL_JP
                        - DHL_NL
                        - DHL_PACKET
                        - DHL_PARCEL_NL
                        - DHL_PARCEL_ES
                        - DHL_PL
                        - DHL_SG
                        - DHL_UK
                        - DHL_GLOBAL_MAIL_ASIA
                        - DHL_GLOBAL_MAIL
                        - DHL_AT
                        - DPD_DELISTRACK
                        - DPD_FR
                        - DPD_DE
                        - DPD_HK
                        - DPD_IR
                        - DPD_LOCAL_REF
                        - DPD_LOCAL
                        - DPD_PL
                        - DPD_RO
                        - DPD_RU
                        - DPD_UK
                        - DTDC_EXPRESS
                        - DTDC_IN
                        - DAWN_WING
                        - DELHIVERY_IN
                        - DELTEC_DE
                        - DELTEC_UK
                        - DEUTSCHE_DE
                        - DIRECTLINK_SE
                        - DIRECTLOG_BR
                        - DOTZOT
                        - EC_CN
                        - ELTA_GR
                        - EMPS_CN
                        - EMS_CN
                        - ECARGO
                        - EMIRATES_POST
                        - ENSENDA
                        - ESTAFETA
                        - ESTES
                        - FERCAM_IT
                        - FLYT_EXPRESS
                        - FASTRACK
                        - FASTWAY_US
                        - FASTWAY_ZA
                        - FASTWAY_UK
                        - FASTWAY_AU
                        - FIRST_LOGISITCS
                        - FOUR_PX_EXPRESS
                        - GEODIS
                        - GLS_CZ
                        - GLS_FR
                        - GLS_DE
                        - GLS_IT
                        - GLS_NL
                        - GLS_ES
                        - GLS
                        - ACS_GR
                        - GENIKI_GR
                        - GLOBEGISTICS
                        - GREYHOUND
                        - HERMES_DE
                        - HERMESWORLD_UK
                        - HK_POST
                        - HRVATSKA_HR
                        - HUAHAN_EXPRESS
                        - IMX
                        - ITIS
                        - INDIA_POST
                        - INTERLINK
                        - INT_SEUR
                        - INT_SUER
                        - ISRAEL_POST
                        - JNE_IDN
                        - JAMEXPRESS_PH
                        - JAPAN_POST
                        - JP_POST
                        - JETSHIP_MY
                        - JETSHIP_SG
                        - KERRY_EXPRESS_VN
                        - KERRY_EXPRESS_HK
                        - KERRY_EXPRESS_TH
                        - KIALA
                        - KOREA_POST
                        - CJ_KR
                        - LAPOSTE
                        - LBC_PH
                        - LIETUVOS_LT
                        - LION_PARCEL
                        - LOGISTICSWORLDWIDE_HK
                        - LOGISTICSWORLDWIDE_KR
                        - LOGISTICSWORLDWIDE_MY
                        - LOOMIS
                        - MONDIAL
                        - MAGYAR_HU
                        - MALAYSIA_POST
                        - MASTERLINK
                        - AEROFLASH
                        - REDPACK
                        - SENDA_MX
                        - MONDIAL_BE
                        - MYHERMES
                        - NACEX_ES
                        - NATIONWIDE
                        - NZ_POST
                        - NIPOST_NG
                        - NIGHTLINE_UK
                        - NINJAVAN_PH
                        - NINJAVAN_SG
                        - NOVA_POSHTA_INT
                        - NOVA_POSHTA
                        - OCA_AR
                        - ONTRAC
                        - PTT_POST
                        - PANDU
                        - PARCELPOST_SG
                        - POCZTA_POLSKA
                        - POCZTEX
                        - CTT_PT
                        - SEUR_PT
                        - POS_ID
                        - POS_INT
                        - POSTNL_INT_3_S
                        - POSTNL
                        - POSTNL_INT
                        - POSTNORD_LOGISTICS_DK
                        - POSTNORD_LOGISTICS_SE
                        - POSTNORD_LOGISTICS_GLOBAL
                        - POSTA_RO
                        - POSTE_ITALIANE
                        - POSTEN_NORGE
                        - PROFESSIONAL_COURIERS
                        - RAF_PH
                        - RL_US
                        - RPD_2_MAN
                        - RPX_ID
                        - REDEXPRESS
                        - REDUR_ES
                        - REGISTER_MAIL_IT
                        - RELAIS_COLIS_FR
                        - ROCKET_PARCEL
                        - SDA_IT
                        - SF_EXPRESS
                        - SFC_EXPRESS
                        - SGT_IT
                        - SRE_KOREA
                        - SAGAWA
                        - SAGAWA_JP
                        - POST_SERBIA_CS
                        - SINGPOST
                        - SIODEMKA
                        - SKYNET_WORLDWIDE
                        - SKYNET_MY
                        - SKYNET_UAE
                        - SKYNET_UK
                        - SEUR_ES
                        - STARTRACK_EXPRESS
                        - STARTRACK
                        - SWISS_POST
                        - TNT_AU
                        - TNT_CN
                        - TNT_CLICK_IT
                        - TNT_FR
                        - TNT_DE
                        - TNT_IT
                        - TNT_JP
                        - TNT_NL
                        - TNT_PL
                        - TNT_ES
                        - TNT_UK
                        - TPG
                        - TAIWAN_POST_TW
                        - TAQBIN_HK
                        - TAQBIN_MY
                        - TAQBIN_SG
                        - TAXIPOST
                        - TELIWAY
                        - THAILAND_POST
                        - THE_COURIER_GUY
                        - TIKI_ID
                        - TOLL_IPEC
                        - TWO_GO
                        - TRANSMISSION
                        - UK_MAIL
                        - UPS_MI
                        - VIETNAM_POST
                        - WAHANA_ID
                        - XEND_EXPRESS_PH
                        - XPRESSBEES
                        - YAMATO
                        - YANWEN_CN
                        - YODEL
                        - UPS_CANADA
                        - UPS_MAIL_INNOVATIONS
                        - DE_DELTEC
                        - DE_INTERNATIONALSEUR
                        - FR_DPD
                        - FR_IMX
                        - IT_IMX
                        - AU_DTDC
                        - AU_SENDLE
                        - AU_SKYNET
                        - ES_GLS
                        - ES_INTERNATIONALSEUR
                        - ES_IMX
                        - CN_HUAHANEXPRESS
                        - LOCAL_PICKUP
                        - HK_DPEX
                        - HK_KERRYEXPRESS
                        - HK_LOGISTICSWORLDWIDEEXPRESS
                        - HK_RPX
                        - HK_SPREADEL
                        - IN_SPREADEL
                        - TH_CJ
                        - KR_LOGISTICSWORLDWIDE
                        - AT_DHL
                        - BE_IMX
                        - MY_LOGISTICSWORLDWIDE
                        - MY_JETSHIP
                        - SG_DHL
                        - SG_SPREADEL
                        - POSTAROMANA
                        - US_PUROLATOR
                        - US_FASTWAY
                        - CHRONOPOST
                        - CORREOS_DE_ESPANA
                        - DEUTSCHE_POST_DHL
                        - EBOOST_SDA
                        - HONGKONG_POST
                        - INTANGIBLE_DIGITAL_SERVICES
                        - LA_POSTE
                        - LA_POSTE_SUIVI
                        - NEKO_YAMATO_UNYUU
                        - NITTSU_PELICAN_BIN
                        - POSTE_ITALIA
                        - SAGAWA_KYUU_BIN
                        - STAR_TRACK_EXPRESS
                        - US_DTDC
                        - US_STARTRACK
                        - ISR_ISRAEL_POST
                        - BE_MONDIAL
                        - B_2_CEUROPE
                        - PHL_2_GO
                        - PHL_AIR_21
                        - PT_SPANISH_SEUR
                        - ES_SPANISH_SEUR
                        - SG_DPEX
                        - CH_IMX
                        - DHLG
                        - RUSTON
                        - MIKROPAKKET
                        - XPOST
                        - PAN_ASIA
                        - PARCELONE
                        - SPEEDEE
                        - VENIPAK
                        - CROSHOT
                        - SHREENANDANCOURIER
                        - EPST_GLBL
                        - NEWGISTICS
                        - POST_SLOVENIA
                        - JERSEY_POST
                        - WMG
                        - BOMBINOEXP
                        - XQ_EXPRESS
                        - FURDECO
                        - LEGION_EXPRESS
                        - YDH_EXPRESS
                        - LHT_EXPRESS
                        - SOUTH_AFRICAN_POST_OFFICE
                        - GRUPO
                        - SPOTON
                        - DIMERCO
                        - INTERPARCEL_UK
                        - ABCUSTOM
                        - IND_DELIVREE
                        - GLOBAL_ABF
                        - CN_BESTEXPRESS
                        - DX_SFTP
                        - PICKUPP_MYS
                        - XPERT_DELIVERY
                        - FMX
                        - HELLMANN
                        - DHL_REFR
                        - DHL_HK
                        - SHIP_IT_ASIA
                        - KERRY_ECOMMERCE
                        - GOJEK
                        - FRETERAPIDO
                        - YODEL_INTNL
                        - CFL_LOGISTICS
                        - PITNEY_BOWES
                        - ZA_SPECIALISED_FREIGHT
                        - JANCO
                        - XPRESSEN_DK
                        - YTO
                        - SEUR_SP_API
                        - DELIVERYONTIME
                        - WISE_EXPRESS
                        - JINSUNG
                        - JTEXPRESS_VN
                        - CHUKOU1
                        - TRANS_KARGO
                        - FEDEX_INTL_MLSERV
                        - SWISHIP_DE
                        - IVOY_WEBHOOK
                        - AIRMEE_WEBHOOK
                        - VAMOX
                        - FIRSTMILE
                        - AMS_GRP
                        - FASTWAY_IR
                        - HH_EXP
                        - HRPARCEL
                        - MYS_MYPOST_ONLINE
                        - GESWL
                        - BLUESTAR
                        - TIPSA
                        - CDEK_TR
                        - KGMHUB
                        - INTEXPRESS
                        - DESCARTES
                        - OVERSE_EXP
                        - ONECLICK
                        - ROADRUNNER_FREIGHT
                        - GLS_CROTIA
                        - TOURLINE
                        - MRW_FTP
                        - BH_WORLDWIDE
                        - BLUEX
                        - DYLT
                        - OCS
                        - YINGNUO_LOGISTICS
                        - SIN_GLBL
                        - TUFFNELLS_REFERENCE
                        - CJPACKET
                        - MILKMAN
                        - FIEGE_NL
                        - ASIGNA
                        - ONEWORLDEXPRESS
                        - LTIANEXP
                        - KWE_GLOBAL
                        - CTC_EXPRESS
                        - LAO_POST
                        - EU_IMX
                        - GLS_SLOV
                        - AMAZON
                        - MORE_LINK
                        - JX
                        - MYS_EMS
                        - EASY_MAIL
                        - ADUIEPYLE
                        - GB_PANTHER
                        - SG_DETRACK
                        - EXPRESSSALE
                        - DICOM
                        - MATDESPATCH
                        - TRUNKRS_WEBHOOK
                        - WESTBANK_COURIER
                        - MBW
                        - KHM_CAMBODIA_POST
                        - FEDEX_CROSSBORDER
                        - JANIO
                        - SINOTRANS
                        - BRT_IT_PARCELID
                        - A1POST
                        - DHL_SUPPLY_CHAIN
                        - TAZMANIAN_FREIGHT
                        - TOPYOU
                        - PALEXPRESS
                        - SAIA_FREIGHT
                        - CN_WEDO
                        - FULFILLME
                        - SG_QXPRESS
                        - UPS_REFERENCE
                        - NHANS_SOLUTIONS
                        - CARIBOU
                        - LOCUS_WEBHOOK
                        - DSV
                        - CN_GOFLY
                        - COORDINADORA
                        - P2P_TRC
                        - ANDREANI
                        - DIRECTPARCELS
                        - DOORA
                        - FEDEX_POLAND
                        - INTERPARCEL_NZ
                        - XDP_UK_REFERENCE
                        - ETOMARS
                        - CN_JCEX
                        - IND_ECOM
                        - FAR_INTERNATIONAL
                        - ESP_ENVIALIA
                        - IDEXPRESS
                        - GANGBAO
                        - SMSA_EXPRESS
                        - NEWAY
                        - DEX_I
                        - DESIGNERTRANSPORT_WEBHOOK
                        - BUDBEE_WEBHOOK
                        - GLS_SLOVEN
                        - PARCELLED_IN
                        - COPA_COURIER
                        - GSI_EXPRESS
                        - CON_WAY
                        - BROUWER_TRANSPORT
                        - TOLL_NZ
                        - CPEX
                        - ECHO
                        - FEDEX_FR
                        - XDE_WEBHOOK
                        - TOLOS
                        - BORDEREXPRESS
                        - GIAO_HANG
                        - MAILPLUS_JPN
                        - GEODIS_ESPACE
                        - TNT_UK_REFR
                        - DOORDASH_WEBHOOK
                        - KEC
                        - CJ_HK_INTERNATIONAL
                        - HELTHJEM
                        - ZA_COURIERIT
                        - SFB2C
                        - FREIGHTQUOTE
                        - FR_EXAPAQ
                        - LANDMARK_GLOBAL_REFERENCE
                        - PARCEL2GO
                        - DELNEXT
                        - TCK_EXPRESS
                        - ENDEAVOUR_DELIVERY
                        - NANJINGWOYUAN
                        - HEPPNER_FR
                        - PICKRR
                        - FONSEN
                        - APC_OVERNIGHT_CONNUM
                        - STAR_TRACK_NEXT_FLIGHT
                        - UPS_FREIGHT
                        - DAJIN
                        - POSTA_PLUS
                        - CEVA
                        - ORANGE_DS
                        - ANSERX
                        - JS_EXPRESS
                        - PADTF
                        - GAC
                        - EZSHIP
                        - GEIS
                        - SYPOST
                        - AMAZON_SHIP_MCF
                        - SF_EX
                        - YUSEN
                        - ESP_MRW
                        - BRING
                        - PAGO
                        - AO_COURIER
                        - GBA
                        - DIAMOND_EUROGISTICS
                        - NEWEGGEXPRESS
                        - LALAMOVE
                        - SPEEDCOURIERS_GR
                        - CORPORATECOURIERS_WEBHOOK
                        - FORRUN
                        - PICKUP
                        - BOND
                        - ECMS
                        - INTELIPOST
                        - SK_POSTA
                        - FLASHEXPRESS
                        - FETCHR_WEBHOOK
                        - CN_STO
                        - SEKO_SFTP
                        - THEDELIVERYGROUP
                        - CELLO_SQUARE
                        - HOME_DELIVERY_SOLUTIONS
                        - DPD_HGRY
                        - KERRYTTC_VN
                        - TARRIVE
                        - JOYING_BOX
                        - COLLIVERY
                        - TOTAL_EXPRESS
                        - ZJS_EXPRESS
                        - STARKEN
                        - MAINFREIGHT
                        - IND_FIRSTFLIGHT
                        - BE_BPOST
                        - DEMANDSHIP
                        - CN_DPEX
                        - ACSWORLDWIDE
                        - LOGISTERS
                        - GOGLOBALPOST
                        - AMSTAN
                        - OKAYPARCEL
                        - I_DIKA
                        - ENVIALIA_REFERENCE
                        - PAACK_WEBHOOK
                        - GRAB_WEBHOOK
                        - PARCELPOINT
                        - ICUMULUS
                        - FDSEXPRESS
                        - DAIGLOBALTRACK
                        - CNDEXPRESS
                        - GLOBAL_IPARCEL
                        - AMAZON_FBA_SWISHIP
                        - WYNGS
                        - YURTICI_KARGO
                        - CN_PAYPAL_PACKAGE
                        - PARCEL_2_POST
                        - ZYLLEM
                        - VIA_EXPRESS
                        - WIZMO
                        - TIGFREIGHT
                        - PIL_LOGISTICS
                        - ZTO_EXPRESS
                        - HEPPNER
                        - GENERAL_OVERNIGHT
                        - HAPPY2POINT
                        - ARCO_SPEDIZIONI
                        - CHITCHATS
                        - IML
                        - SMOOTH
                        - INTEL_VALLEY
                        - CLE_LOGISTICS
                        - FIEGE
                        - MX_CARGO
                        - ZIINGFINALMILE
                        - TCS
                        - DAYTON_FREIGHT
                        - ROADBULL
                        - YODEL_DIR
                        - STONE3PL
                        - PARCELPAL_WEBHOOK
                        - DHL_ECOMERCE_ASA
                        - SIMPLYPOST
                        - KY_EXPRESS
                        - SHENZHEN
                        - UC_EXPRE
                        - US_LASERSHIP
                        - DIDADI
                        - DYNALOGIC
                        - DBSCHENKER_B2B
                        - MXE
                        - PFCEXPRESS
                        - WHISTL
                        - CAE_DELIVERS
                        - WEPOST
                        - ALLIEDEXPRESS
                        - SHIPPIT
                        - DDEXPRESS
                        - ARAMEX_AU
                        - TFM
                        - BNEED
                        - M_XPRESS
                        - HK_TGX
                        - LATVIJAS_PASTS
                        - HDB_BOX
                        - VIAEUROPE
                        - CORREO_UY
                        - CLEVY_LINKS
                        - IBEONE
                        - J_NET
                        - RCL
                        - 6LS
                        - CGS_EXPRESS
                        - BLR_BELPOST
                        - BIRDSYSTEM
                        - DOBROPOST
                        - SAP_EXPRESS
                        - WEASHIP
                        - SONICTL
                        - KWT
                        - AFLLOG_FTP
                        - IND_SAFEEXPRESS
                        - TOPHATTEREXPRESS
                        - SEINO
                        - MGLOBAL
                        - SZENDEX
                        - AVERITT
                        - DBSCHENKER_SV
                        - LEADER
                        - AO_DEUTSCHLAND
                        - 2EBOX
                        - EU_FLEET_SOLUTIONS
                        - SG_SPEEDPOST
                        - PCFCORP
                        - AERONET
                        - LINKBRIDGE
                        - DE_DEUTSCHE_POST_DHL_WITHIN_EUROPE_TRACKNET
                        - PRIMAMULTICIPTA
                        - ISR_POST_DOMESTIC
                        - COUREX
                        - ZAJIL_EXPRESS
                        - BESTWAYPARCEL
                        - COLLECTCO
                        - AEX
                        - JTEXPRESS
                        - FEDEX_UK
                        - USHIP
                        - ROUTIFIC_WEBHOOK
                        - GLOBAL_EXPRESS
                        - BRT_IT_SENDER_REF
                        - GLOBAVEND
                        - PIXSELL
                        - SHIPTOR
                        - CDEK
                        - VNM_VIETTELPOST
                        - PALLET_NETWORK
                        - CJ_CENTURY
                        - UK_XDP
                        - GSO
                        - VIWO
                        - SKYBOX
                        - PAPER_EXPRESS
                        - KERRYTJ
                        - NTLOGISTICS_VN
                        - SDH_SCM
                        - PALLETWAYS
                        - NOX_NACHTEXPRESS
                        - ZINC
                        - DPE_SOUTH_AFRC
                        - LOGISTIKA
                        - CELERITAS
                        - PRESSIODE
                        - SHREE_MARUTI
                        - PARCELINKLOGISTICS
                        - EFEX
                        - LOTTE
                        - LONESTAR
                        - GB_NORSK
                        - APRISAEXPRESS
                        - BEL_RS
                        - OSM_WORLDWIDE
                        - SAILPOST
                        - MAILAMERICAS
                        - WESTGATE_GL
                        - DTD_EXPR
                        - ALFATREX
                        - THABIT_LOGISTICS
                        - PROMEDDELIVERY
                        - PAQUETEXPRESS
                        - NEWZEALAND_COURIERS
                        - LIEFERY
                        - JOOM_LOGIS
                        - STRECK_TRANSPORT
                        - HCT_LOGISTICS
                        - CARRY_FLAP
                        - PONY_EXPRESS
                        - US_OLD_DOMINION
                        - ANICAM_BOX
                        - ALWAYS_EXPRESS
                        - WANBEXPRESS
                        - AUS_STARTRACK
                        - GBS_BROKER
                        - STALLIONEXPRESS
                        - RAIDEREX
                        - ALLJOY
                        - SHOPFANS
                        - KYUNGDONG_PARCEL
                        - CHAMPION_LOGISTICS
                        - PICKUPP_SGP
                        - DEALERSEND
                        - MORNING_EXPRESS
                        - NACEX
                        - THENILE_WEBHOOK
                        - JOCOM
                        - HOLISOL
                        - LBCEXPRESS_FTP
                        - CSE
                        - TFORCE_FINALMILE
                        - KURASI
                        - GEMWORLDWIDE
                        - SHIP_GATE
                        - USF_REDDAWAY
                        - SHIPTER
                        - NATIONAL_SAMEDAY
                        - APG
                        - CN_BOXC
                        - YUNEXPRESS
                        - INTEGRA2_FTP
                        - CAINIAO
                        - ECOSCOOTING
                        - DMS_MATRIX
                        - MAINWAY
                        - ASENDIA_USA
                        - PAPERFLY
                        - HOUNDEXPRESS
                        - 3JMSLOGISTICS
                        - EP_BOX
                        - BOX_BERRY
                        - LICCARDI_EXPRESS
                        - PLUS_LOG_UK
                        - FULFILLA
                        - SKY_POSTAL
                        - ASE
                        - CNWANGTONG
                        - PITTOHIO
                        - MAIL_PLUS
                        - XPO_LOGISTICS
                        - WNDIRECT
                        - CLOUDWISH_ASIA
                        - ZELERIS
                        - MARA_XPRESS
                        - GIO_EXPRESS
                        - OCS_WORLDWIDE
                        - DESTINY
                        - ARK_LOGISTICS
                        - DE_DPD_DELISTRACK
                        - COMET_TECH
                        - DHL_PARCEL_RU
                        - AQUILINE
                        - PILOT_FREIGHT
                        - TNT_REFR
                        - QWINTRY
                        - DANSKE_FRAGT
                        - SHREE_ANJANI_COURIER
                        - CARRIERS
                        - AIR_CANADA_GLOBAL
                        - PRESIDENT_TRANS
                        - STEPFORWARDFS
                        - ESHIPPING
                        - SHREETIRUPATI
                        - HX_EXPRESS
                        - INDOPAKET
                        - CN_17POST
                        - K1_EXPRESS
                        - CJ_GLS
                        - MYS_GDEX
                        - NATIONEX
                        - CN_EQUICK
                        - ANJUN
                        - VIRTRANSPORT
                        - FARGOOD
                        - SMG_EXPRESS
                        - RZYEXPRESS
                        - SEFL
                        - HIPSHIPPER
                        - HDB
                        - RPXLOGISTICS
                        - MIKROPAKKET_BE
                        - KUEHNE
                        - IT_NEXIVE
                        - PTS
                        - ETS_EXPRESS
                        - SWISS_POST_FTP
                        - COLIS_PRIVE
                        - FASTRK_SERV
                        - "4_72"
                        - US_YRC
                        - CN_YUNDA
                        - POSTNL_INTL_3S
                        - AAA_COOPER
                        - ELIAN_POST
                        - CUBYN
                        - SAU_SAUDI_POST
                        - 360LION
                        - ABXEXPRESS_MY
                        - NINJAVAN_WB
                        - ESP_PACKLINK
                        - IND_JAYONEXPRESS
                        - GB_ARROW
                        - ZES_EXPRESS
                        - IND_GOJAVAS
                        - ZEPTO_EXPRESS
                        - SKYNET_ZA
                        - KPOST
                        - ZEEK_2_DOOR
                        - DHL_FREIGHT
                        - BLUECARE
                        - BLINKLASTMILE
                        - POSTA_UKR
                        - LOGISTYX_TRANSGROUP
                        - JINDOUYUN
                        - CHROBINSON
                        - TRACKON
                        - CN_POST56
                        - GB_TUFFNELLS
                        - COURANT_PLUS
                        - SCUDEX_EXPRESS
                        - SHIPENTEGRA
                        - TRUMPCARD
                        - CHOIR_EXP
                        - ETOTAL
                        - COPE
                        - SFPLUS_WEBHOOK
                        - IND_GATI
                        - HERMES_2MANN_HANDLING
                        - CN_WISHPOST
                        - GLOBALTRANZ
                        - HKD
                        - UDS
                        - BJSHOMEDELIVERY
                        - YAKIT
                        - LEXSHIP
                        - OMNIVA
                        - SUTTON
                        - COSTMETICSNOW
                        - PANTHER_REFERENCE
                        - SFCSERVICE
                        - PFLOGISTICS
                        - LTL
                        - LOOMIS_EXPRESS
                        - PARKNPARCEL
                        - SPRING_GDS
                        - GLS_ITALY
                        - ECEXPRESS
                        - LINE
                        - INTERPARCEL_AU
                        - GEL_EXPRESS
                        - AGILITY
                        - XL_EXPRESS
                        - ADERONLINE
                        - DIRECTCOURIERS
                        - PLANZER
                        - NOX_NIGHT_TIME_EXPRESS
                        - SENDING
                        - HUODULL
                carrier_name_other:
                    type: string
                    minLength: 1
                    maxLength: 2000
                    description: The name of carrier in free-form text for unavailable carriers. This field is mandatory when <code>carrier_name</code> is <code>OTHER</code>.
                tracking_url:
                    type: string
                    format: uri
                    description: The URL to track the dispute-related transaction shipment.
                tracking_number:
                    type: string
                    minLength: 1
                    maxLength: 255
                    description: The number to track the dispute-related transaction shipment.
            required:
                - carrier_name
                - tracking_number
        evidence_info:
            type: object
            title: Evidence Information
            description: The evidence-related information.
            properties:
                tracking_info:
                    type: array
                    minItems: 1
                    maxItems: 10
                    description: An array of relevant tracking information for the transaction involved in this dispute.
                    items:
                        $ref: '#/components/schemas/tracking_info'
                refund_ids:
                    type: array
                    minItems: 1
                    maxItems: 100
                    description: An array of refund IDs for the transaction involved in this dispute.
                    items:
                        type: string
                        minLength: 1
                        maxLength: 255
                        description: The ID of the refunded transaction.
        action_info:
            type: object
            title: Evidence Extensions
            description: The extended properties for a evidence. Includes additional information such as the action for which the evidence was requested/submitted, and whether the evidence is mandatory.
            properties:
                action:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[A-Z_]+$
                    description: The action for which the evidence was requested or submitted.
                    enum:
                        - ACKNOWLEDGE_RETURN_ITEM
                        - ACCEPT_CLAIM
                        - PROVIDE_EVIDENCE
                        - APPEAL
                        - CANCEL
                        - CHANGE_REASON
                        - ESCALATE
                response_option:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[A-Z_]+$
                    description: The response option for the corresponding action. Possible values:<ul><li><a href="/docs/api/customer-disputes/v1/#definition-acknowledgement_type">Acknowledgement Types</a></li><li><a href="/docs/api/customer-disputes/v1/#definition-response-accept_claim_type">Accept Claim types</a></li></ul>.
                mandatory:
                    type: boolean
                    description: Indicates whether the evidence is mandatory for the corresponding action and response option.
        evidence:
            type: object
            title: Evidence
            description: A merchant- or customer-submitted evidence document. evidence_info is expected for PROOF_OF_FULFILLMENT,PROOF_OF_REFUND and PROOF_OF_RETURN evidence types. documents and notes can be given for rest of the evidence types.
            properties:
                evidence_type:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    description: The evidence type.
                    enum:
                        - PROOF_OF_FULFILLMENT
                        - PROOF_OF_REFUND
                        - PROOF_OF_DELIVERY_SIGNATURE
                        - PROOF_OF_RECEIPT_COPY
                        - RETURN_POLICY
                        - BILLING_AGREEMENT
                        - PROOF_OF_RESHIPMENT
                        - ITEM_DESCRIPTION
                        - POLICE_REPORT
                        - AFFIDAVIT
                        - PAID_WITH_OTHER_METHOD
                        - COPY_OF_CONTRACT
                        - TERMINAL_ATM_RECEIPT
                        - PRICE_DIFFERENCE_REASON
                        - SOURCE_CONVERSION_RATE
                        - BANK_STATEMENT
                        - CREDIT_DUE_REASON
                        - REQUEST_CREDIT_RECEIPT
                        - PROOF_OF_RETURN
                        - CREATE
                        - CHANGE_REASON
                        - PROOF_OF_REFUND_OUTSIDE_PAYPAL
                        - RECEIPT_OF_MERCHANDISE
                        - CUSTOMS_DOCUMENT
                        - CUSTOMS_FEE_RECEIPT
                        - INFORMATION_ON_RESOLUTION
                        - ADDITIONAL_INFORMATION_OF_ITEM
                        - DETAILS_OF_PURCHASE
                        - PROOF_OF_SIGNIFICANT_DIFFERENCE
                        - PROOF_OF_SOFTWARE_OR_SERVICE_NOT_AS_DESCRIBED
                        - PROOF_OF_CONFISCATION
                        - PROOF_OF_DAMAGE
                        - COPY_OF_LAW_ENFORCEMENT_AGENCY_REPORT
                        - ADDITIONAL_PROOF_OF_SHIPMENT
                        - PROOF_OF_DENIAL_BY_CARRIER
                        - THIRDPARTY_PROOF_FOR_DAMAGE_OR_SIGNIFICANT_DIFFERENCE
                        - VALID_SUPPORTING_DOCUMENT
                        - LEGIBLE_SUPPORTING_DOCUMENT
                        - RETURN_TRACKING_INFORMATION
                        - DELIVERY_RECEIPT
                        - PROOF_OF_INSTORE_RECEIPT
                        - ADDITIONAL_TRACKING_INFORMATION
                        - PROOF_OF_SHIPMENT_POSTAGE
                        - ONLINE_TRACKING_INFORMATION
                        - PROOF_OF_INSTORE_REFUND
                        - PROOF_FOR_SOFTWARE_OR_SERVICE_DELIVERED
                        - RETURN_ADDRESS_FOR_SHIPPING
                        - COPY_OF_THE_EPARCEL_MANIFEST
                        - COPY_OF_SHIPPING_MANIFEST
                        - APPEAL_AFFIDAVIT
                        - RECEIPT_OF_REPLACEMENT
                        - COPY_OF_DRIVERS_LICENSE
                        - ACCOUNT_CHANGE_INFORMATION
                        - DELIVERY_ADDRESS
                        - CONFIRMATION_OF_RESOLUTION
                        - MERCHANT_RESPONSE
                        - PERMISSION_DESCRIPTION
                        - STATUS_OF_MERCHANDISE
                        - LOST_CARD_DETAILS
                        - LAST_VALID_TRANSACTION_DETAILS
                        - ADDITIONAL_PROOF_OF_RETURN
                        - DECLARATION
                        - PROOF_OF_MISSING_ITEMS
                        - PROOF_OF_EMPTY_PACKAGE_OR_DIFFERENT_ITEM
                        - PROOF_OF_ITEM_NOT_RECEIVED
                        - ORDER_DETAILS
                        - LISTING_URL
                        - SHIPPING_INSURANCE
                        - BUYER_RESPONSE
                        - PHOTOS_OF_SHIPPED_ITEM
                        - OTHER
                evidence_info:
                    $ref: '#/components/schemas/evidence_info'
                documents:
                    type: array
                    minItems: 1
                    maxItems: 100
                    description: An array of evidence documents.
                    items:
                        $ref: '#/components/schemas/document'
                notes:
                    type: string
                    description: Any evidence-related notes.
                    minLength: 1
                    maxLength: 2000
                source:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[A-Z_]+$
                    readOnly: true
                    description: The source of the evidence.
                    enum:
                        - REQUESTED_FROM_BUYER
                        - REQUESTED_FROM_SELLER
                        - SUBMITTED_BY_BUYER
                        - SUBMITTED_BY_SELLER
                        - SUBMITTED_BY_PARTNER
                date:
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                    description: The date and time when the evidence was received, in [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6).
                item_id:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[A-Za-z0-9]+$
                    description: The item ID. If the merchant provides multiple pieces of evidence and the transaction has multiple item IDs, the merchant can use this value to associate a piece of evidence with an item ID.
                item_type:
                    readOnly: true
                    description: The item type for which the evidence is requested or submitted.
                    $ref: '#/components/schemas/item_type'
                action_info:
                    readOnly: true
                    description: The action details for the information. Includes additional information such as the action for which the evidence was requested/submitted, and whether the evidence is mandatory for the corresponding action.
                    $ref: '#/components/schemas/action_info'
                dispute_life_cycle_stage:
                    readOnly: true
                    description: The dispute life cycle stage for the evidence.
                    $ref: '#/components/schemas/dispute_lifecycle_stage'
        offer_type:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            title: Offer Type
            description: The merchant-proposed offer type for the dispute.
            enum:
                - REFUND
                - REFUND_WITH_RETURN
                - REFUND_WITH_REPLACEMENT
                - REPLACEMENT_WITHOUT_REFUND
        offer_history:
            type: object
            title: Offer History
            description: The offer history.
            properties:
                offer_time:
                    $ref: '#/components/schemas/date_time'
                    description: The date and time when the event occurred, in [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6).
                actor:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    description: The event-related actor.
                    enum:
                        - BUYER
                        - SELLER
                event_type:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    description: The type of the history event.
                    enum:
                        - PROPOSED
                        - ACCEPTED
                        - DENIED
                offer_type:
                    $ref: '#/components/schemas/offer_type'
                offer_amount:
                    description: The offer amount.
                    $ref: '#/components/schemas/money'
                notes:
                    type: string
                    readOnly: true
                    description: The user submitted notes.
                    minLength: 1
                    maxLength: 2000
                dispute_life_cycle_stage:
                    readOnly: true
                    description: The dispute life cycle stage during the offer event.
                    $ref: '#/components/schemas/dispute_lifecycle_stage'
        offer:
            type: object
            title: Offer
            description: The merchant-proposed offer for a dispute.
            properties:
                buyer_requested_amount:
                    description: The customer-requested refund for this dispute.
                    $ref: '#/components/schemas/money'
                seller_offered_amount:
                    description: The merchant-offered refund for this dispute.
                    $ref: '#/components/schemas/money'
                offer_type:
                    $ref: '#/components/schemas/offer_type'
                history:
                    type: array
                    minItems: 1
                    maxItems: 1000
                    description: An array of history information for an offer.
                    items:
                        $ref: '#/components/schemas/offer_history'
        refund_details:
            type: object
            title: Refund Details
            description: The refund details.
            properties:
                allowed_refund_amount:
                    $ref: '#/components/schemas/money'
                    description: The maximum refundable amount.
        communication_details:
            type: object
            title: Contact Details
            description: The contact details that a merchant provides to the customer to use to share their evidence documents.
            properties:
                email:
                    $ref: '#/components/schemas/email_address'
                    description: The email address that is provided by the merchant where the customer can share the evidences.
                note:
                    type: string
                    minLength: 1
                    maxLength: 2000
                    description: The merchant provided notes that are visible to both the customer and PayPal.
                time_posted:
                    $ref: '#/components/schemas/date_time'
                    description: The date and time when the contact details were posted, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
        supporting_info:
            type: object
            title: Supporting Info
            description: A merchant- or customer-submitted supporting information.
            properties:
                notes:
                    type: string
                    readOnly: true
                    description: Any supporting notes.
                    minLength: 1
                    maxLength: 2000
                documents:
                    type: array
                    minItems: 1
                    maxItems: 100
                    readOnly: true
                    description: An array of metadata for the documents which were uploaded as supporting information for the dispute.
                    items:
                        $ref: '#/components/schemas/document'
                source:
                    type: string
                    minLength: 1
                    maxLength: 255
                    readOnly: true
                    pattern: ^[0-9A-Z_]+$
                    description: The source of the Information.
                    enum:
                        - SUBMITTED_BY_BUYER
                        - SUBMITTED_BY_SELLER
                        - SUBMITTED_BY_PARTNER
                provided_time:
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                    description: The date and time when the information was received, in [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6).
                dispute_life_cycle_stage:
                    readOnly: true
                    description: The dispute life cycle stage for the supporting info.
                    $ref: '#/components/schemas/dispute_lifecycle_stage'
        acknowledgement_type:
            type: string
            title: Allowed Acknowledgement Type
            description: The type of acknowledgement allowed for the merchant after the customer has returned the item. The merchant can update whether the item was received and is as expected or if the item was not received.
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            readOnly: true
            enum:
                - ITEM_RECEIVED
                - ITEM_NOT_RECEIVED
                - DAMAGED
                - EMPTY_PACKAGE_OR_DIFFERENT
                - MISSING_ITEMS
        acknowledge_return_item_response_options:
            type: object
            title: Acknowledge Return Item Response Options
            description: The allowed response options when the seller acknowledges that the buyer has returned an item for the dispute.
            properties:
                acknowledgement_types:
                    type: array
                    description: The types of response when the merchant acknowledges a returned item.
                    minItems: 1
                    maxItems: 10
                    items:
                        $ref: '#/components/schemas/acknowledgement_type'
        accept_claim_type:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            title: Accept Claim Type
            description: The refund type proposed by the merchant for the dispute.
            enum:
                - REFUND
                - REFUND_WITH_RETURN
                - PARTIAL_REFUND
                - REFUND_WITH_RETURN_SHIPMENT_LABEL
        accept_claim_response_options:
            type: object
            title: Accept Claim Response Options
            description: The allowed response options when the merchant is accepting the claim.
            properties:
                accept_claim_types:
                    type: array
                    description: The types of refund the merchant can provide the customer.
                    minItems: 1
                    maxItems: 10
                    items:
                        $ref: '#/components/schemas/accept_claim_type'
        make_offer_response_options:
            type: object
            title: Make Offer Response Options
            description: The allowed response options when the merchant makes offer to the customer.
            properties:
                offer_types:
                    type: array
                    description: The types of offer the merchant can offer the customer.
                    minItems: 1
                    maxItems: 10
                    items:
                        $ref: '#/components/schemas/offer_type'
        allowed_response_options:
            type: object
            title: Allowed Response Options
            description: The allowed response options for the buyer/seller update actions.
            properties:
                acknowledge_return_item:
                    $ref: '#/components/schemas/acknowledge_return_item_response_options'
                accept_claim:
                    $ref: '#/components/schemas/accept_claim_response_options'
                make_offer:
                    $ref: '#/components/schemas/make_offer_response_options'
        dispute:
            type: object
            title: Dispute Details
            description: The dispute details.
            properties:
                dispute_id:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[A-Za-z0-9-]+$
                    readOnly: true
                    description: The ID of the dispute.
                create_time:
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                    description: The date and time when the dispute was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.
                update_time:
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                    description: The date and time when the dispute was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.
                disputed_transactions:
                    type: array
                    minItems: 1
                    maxItems: 1000
                    description: An array of transactions for which disputes were created.
                    items:
                        $ref: '#/components/schemas/transaction_info'
                reason:
                    $ref: '#/components/schemas/dispute_reason'
                status:
                    readOnly: true
                    $ref: '#/components/schemas/status'
                dispute_amount:
                    $ref: '#/components/schemas/money'
                    description: The amount in the transaction that the customer originally disputed. Because customers can sometimes dispute only part of the payment, the disputed amount might be different from the total gross or net amount of the original transaction.
                dispute_asset:
                    description: The asset in the transaction that the customer disputed.
                    $ref: '#/components/schemas/cryptocurrency'
                fee_policy:
                    readOnly: true
                    description: Policy that determines whether the fee needs to be charged, retained or returned while moving the money as part of dispute process.
                    $ref: '#/components/schemas/fee_policy'
                external_reason_code:
                    type: string
                    minLength: 1
                    maxLength: 2000
                    description: The code that identifies the reason for the credit card chargeback. Each card issuer follows their own standards for defining reason type, code, and its format. For more details about the external reason code, see the card issue site. Available for only unbranded transactions.
                dispute_outcome:
                    readOnly: true
                    $ref: '#/components/schemas/dispute_outcome'
                adjudications:
                    type: array
                    minItems: 1
                    maxItems: 10
                    description: The Teammate Adjudication details for the dispute.
                    items:
                        $ref: '#/components/schemas/adjudication'
                money_movements:
                    type: array
                    minItems: 1
                    maxItems: 50
                    description: The Money movement details for the dispute.
                    items:
                        $ref: '#/components/schemas/money_movement'
                dispute_life_cycle_stage:
                    readOnly: true
                    $ref: '#/components/schemas/dispute_lifecycle_stage'
                dispute_channel:
                    $ref: '#/components/schemas/dispute_channel'
                messages:
                    type: array
                    minItems: 1
                    maxItems: 1000
                    description: An array of customer- or merchant-posted messages for the dispute.
                    items:
                        $ref: '#/components/schemas/message'
                extensions:
                    $ref: '#/components/schemas/extensions'
                evidences:
                    type: array
                    minItems: 1
                    maxItems: 100
                    description: An array of evidence documents.
                    items:
                        $ref: '#/components/schemas/evidence'
                buyer_response_due_date:
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                    description: The date and time by when the customer must respond to the dispute, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). If the customer does not respond by this date and time, the dispute is closed in the merchant's favor. For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.
                seller_response_due_date:
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                    description: The date and time by when the merchant must respond to the dispute, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). If the merchant does not respond by this date and time, the dispute is closed in the customer's favor. For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.
                offer:
                    readOnly: true
                    $ref: '#/components/schemas/offer'
                refund_details:
                    readOnly: true
                    $ref: '#/components/schemas/refund_details'
                communication_details:
                    $ref: '#/components/schemas/communication_details'
                supporting_info:
                    type: array
                    readOnly: true
                    minItems: 1
                    maxItems: 100
                    description: An array of all the supporting information that are associated to this dispute.
                    items:
                        $ref: '#/components/schemas/supporting_info'
                allowed_response_options:
                    readOnly: true
                    $ref: '#/components/schemas/allowed_response_options'
                links:
                    type: array
                    minItems: 1
                    maxItems: 10
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
        multipart_patch_request:
            type: object
            title: Multipart Patch Request
            description: An object-based schema compatible with multipart types.
            properties:
                patches:
                    type: array
                    items:
                        $ref: '#/components/schemas/patch'
                    description: The JSON patch operations to apply as part of multipart payloads.
            required:
                - patches
        subsequent_action:
            title: Subsequent Action
            type: object
            description: The subsequent action.
            properties:
                links:
                    type: array
                    minItems: 1
                    maxItems: 10
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
        adjudicate:
            type: object
            title: Settle Request
            description: A request to settle a dispute in either the customer's or merchant's favor.
            properties:
                adjudication_outcome:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    description: The outcome of the adjudication.
                    enum:
                        - BUYER_FAVOR
                        - SELLER_FAVOR
            required:
                - adjudication_outcome
        require_evidence:
            type: object
            title: Require Evidence Request
            description: Sandbox only. Updates the state of a dispute, by ID, to either <code>WAITING_FOR_BUYER_RESPONSE</code> or <code>WAITING_FOR_SELLER_RESPONSE</code>. This state change enables either the customer or merchant to submit evidence for the dispute. Specify an <code>action</code> value in the JSON request body to indicate whether the state change enables the customer or merchant to submit evidence.
            properties:
                action:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                    description: The action. Indicates whether the state change enables the customer or merchant to submit evidence.
                    enum:
                        - BUYER_EVIDENCE
                        - SELLER_EVIDENCE
            required:
                - action
        buyer_escalation_reason: {}
        escalate:
            type: object
            title: Escalate Claim Request
            description: A merchant request to escalate a dispute, by ID, to a PayPal claim.
            properties:
                note:
                    type: string
                    minLength: 1
                    maxLength: 2000
                    description: The notes about the escalation of the dispute to a claim.
                buyer_escalation_reason:
                    $ref: '#/components/schemas/buyer_escalation_reason'
            required:
                - note
        make_offer:
            type: object
            title: Make Offer Request
            description: A merchant request to make an offer to resolve a dispute.
            properties:
                note:
                    type: string
                    minLength: 1
                    maxLength: 2000
                    description: The merchant's notes about the offer.
                offer_amount:
                    description: The amount proposed to resolve the dispute.
                    $ref: '#/components/schemas/money'
                return_shipping_address:
                    description: The return address for the item. Required when the customer must return an item to the merchant for the <code>MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED</code> dispute reason, especially if the refund amount is less than the dispute amount.
                    $ref: '#/components/schemas/address_portable'
                invoice_id:
                    type: string
                    minLength: 1
                    maxLength: 127
                    description: The merchant-provided ID of the invoice for the refund. This optional value maps the refund to an invoice ID in the merchant's system.
                    pattern: ^[A-Za-z0-9:\-|]+$
                offer_type:
                    $ref: '#/components/schemas/offer_type'
            required:
                - note
                - offer_type
        accept_offer:
            type: object
            title: Accept Offer Request
            description: A customer request to accept the offer made by the merchant.
            properties:
                note:
                    type: string
                    minLength: 1
                    maxLength: 2000
                    description: The customer notes about accepting of offer. PayPal can but the merchant cannot view these notes.
        deny_offer:
            type: object
            title: Deny Offer Request
            description: A customer request to deny the offer made by the merchant.
            properties:
                note:
                    type: string
                    minLength: 1
                    maxLength: 2000
                    description: The customer notes about the denial of offer. PayPal can but the merchant cannot view these notes.
            required:
                - note
        phone_details:
            type: object
            description: The phone number and the phone type.
            title: Phone Details
            additionalProperties: false
            properties:
                phone_number_details:
                    description: The phone number details.
                    $ref: '#/components/schemas/phone'
                phone_type:
                    $ref: '#/components/schemas/phone_type'
            required:
                - phone_number_details
                - phone_type
        identity_document_type:
            type: string
            title: Identity Document Type
            description: The identifier type in the onboarding domain. Indicates the most specific type or the closest matching value. For example, <code>SOCIAL_SECURITY_NUMBER</code> in preference to <code>TAX_IDENTIFICATION_NUMBER</code>.
            enum:
                - SOCIAL_SECURITY_NUMBER
                - EMPLOYMENT_IDENTIFICATION_NUMBER
                - TAX_IDENTIFICATION_NUMBER
                - PASSPORT_NUMBER
                - PENSION_FUND_ID
                - MEDICAL_INSURANCE_ID
                - CNPJ
                - CPF
                - PAN
        identity_document:
            type: object
            title: Identity Document
            description: The authority-issued identification document. Document types include a driver's license, social security number, employee ID number, and so on.
            properties:
                type:
                    $ref: '#/components/schemas/identity_document_type'
                value:
                    type: string
                    description: The identifier value, such as license number, social security number, and so on.
                    pattern: ^[A-Za-z0-9]+$
                partial_value:
                    type: boolean
                    description: Indicates whether the value is a partial value. Specify this value when the identifier type supports a partial value, such as four SSN digits instead of the full nine values. Depending on the context, this parameter can be ignored.
                    default: false
                issuer_country_code:
                    type: string
                    description: The [two-character ISO-3166-1 country code](/docs/api/reference/country-codes/) for the country that issued the document.
                    pattern: ^[A-Z]([A-Z]|\d)$
            required:
                - type
                - value
                - partial_value
                - issuer_country_code
        account_owner_relationship:
            type: object
            title: Seller Account Relationship
            additionalProperties: false
            description: The familial relationship of the seller account owner.
            properties:
                name:
                    description: The name of the familial relation.
                    $ref: '#/components/schemas/name'
                relation:
                    type: string
                    description: The type of familial relationship.
                    enum:
                        - MOTHER
                country_code_of_nationality:
                    description: The nationality of the familial relation.
                    $ref: '#/components/schemas/country_code'
            required:
                - name
                - relation
                - country_code_of_nationality
        person_details:
            type: object
            title: Person Details
            description: The customer's personal details.
            additionalProperties: false
            properties:
                email_address:
                    description: The primary email address of the account.
                    $ref: '#/components/schemas/email_address'
                name:
                    description: The legal name of the customer.
                    $ref: '#/components/schemas/name'
                phone_contacts:
                    type: array
                    description: An array of contact phone numbers for the customer.
                    items:
                        $ref: '#/components/schemas/phone_details'
                home_address:
                    description: The home address of the account holder.
                    $ref: '#/components/schemas/address'
                nationality_country_code:
                    description: The [two-character ISO-3166-1 country code](/docs/api/reference/country-codes/) for the nationality of the account holder. Can include one of the PayPal-supported countries.
                    $ref: '#/components/schemas/country_code'
                identity_documents:
                    type: array
                    description: An array of documents that uniquely identify the user, such as a license number, social security number, and so on.
                    items:
                        $ref: '#/components/schemas/identity_document'
                account_owner_relationships:
                    type: array
                    description: An array of familial relationships that are attached to a seller.
                    items:
                        $ref: '#/components/schemas/account_owner_relationship'
        business_type_enum:
            type: string
            title: Business Types
            description: The business type.
            minLength: 1
            maxLength: 255
            enum:
                - INDIVIDUAL
                - PROPRIETORSHIP
                - PARTNERSHIP
                - CORPORATION
                - NONPROFIT
                - GOVERNMENT
                - GENERAL_PARTNERSHIP
                - LIMITED_PARTNERSHIP
                - LIMITED_LIABILITY_PARTNERSHIP
                - PRIVATE_CORPORATION
                - PUBLIC_CORPORATION
                - PROPRIETORSHIP_CRAFTSMAN
                - PUBLIC_PARTNERSHIP
                - LIMITED_LIABILITY_PROPRIETORS
                - LIMITED_LIABILITY_PRIVATE_CORPORATION
                - LIMITED_PARTNERSHIP_PRIVATE_CORPORATION
                - PRIVATE_PARTNERSHIP
                - PROPRIETARY_COMPANY
                - PUBLIC_COMPANY
                - ASSOCIATION
                - REGISTERED_COOPERATIVE
                - OTHER_CORPORATE_BODY
                - ANY_OTHER_BUSINESS_ENTITY
                - ONLY_BUY_OR_SEND_MONEY
        business_sub_type:
            description: Sub classification of the business type
            title: The business sub type.
            type: string
            pattern: ^[0-9A-Z_]+$
            minLength: 1
            maxLength: 255
            enum:
                - ASSO_TYPE_INCORPORATED
                - ASSO_TYPE_NON_INCORPORATED
                - GOVT_TYPE_ENTITY
                - GOVT_TYPE_EMANATION
                - GOVT_TYPE_ESTD_COMM
                - GOVT_TYPE_ESTD_FC
                - GOVT_TYPE_ESTD_ST_TR
        purpose_code_enum:
            type: string
            title: Purpose Code
            description: The purpose code. Required only for India. For more information, see the Reserve Bank Of India web site. Value is:<ul><li><code>P0104</code>. Cross border delivery of goods and services.</li><li><code>P0301</code>. Business related travel purchase.</li><li><code>P0801</code>. Hardware consulting.</li><li><code>P0802</code>. Software consulting.</li><li><code>P0803</code>. Data processing consulting.</li><li><code>P0805</code>. Freelance journalism.</li><li><code>P0806</code>. Other information services.</li><li><code>P0902</code>. Licensing revenues.</li><li><code>P1004</code>. Legal.</li><li><code>P1005</code>. Accounting and tax.</li><li><code>P1006</code>. Business and management consultancy.</li><li><code>P1007</code>. Advertising and market research.</li><li><code>P1008</code>. Research and development.</li><li><code>P1009</code>. Architectural services.</li></ul>
            minLength: 1
            maxLength: 50
            pattern: ^[a-zA-Z0-9]([a-zA-Z0-9_ ])+$
            enum:
                - P0104
                - P0301
                - P0801
                - P0802
                - P0803
                - P0805
                - P0806
                - P0902
                - P1004
                - P1005
                - P1006
                - P1007
                - P1008
                - P1009
        business_name:
            type: object
            title: Business Name
            description: The business name of the party.
            properties:
                business_name:
                    type: string
                    description: Required. The business name of the party.
                    maxLength: 300
        events_type:
            type: string
            title: Events Type
            description: The event type for an onboarding entity.
            enum:
                - BIRTH
                - ESTABLISHED
                - INCORPORATION
                - OPERATION
        date_of_event:
            type: object
            title: Date of Event
            description: The date for an event type. Typically captured during onboarding.
            properties:
                event_type:
                    $ref: '#/components/schemas/events_type'
                event_date:
                    type: string
                    description: The date portion of the date and time when the event occurred, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For accuracy, if you do not know the exact time zone, use the UTC time zone.
                    format: date-time
            required:
                - event_type
                - event_date
        currency_range:
            type: object
            title: Currency Range
            description: The currency range, from the minimum inclusive amount to the maximum inclusive amount.
            additionalProperties: false
            properties:
                minimum_amount:
                    description: The minimum inclusive amount for the range.
                    $ref: '#/components/schemas/money'
                maximum_amount:
                    description: The maximum inclusive amount for the range.
                    $ref: '#/components/schemas/money'
        email_contact:
            type: object
            title: Email Contact
            description: The email address. Includes the role of the email address.
            properties:
                email_address:
                    $ref: '#/components/schemas/email_address'
                role:
                    type: string
                    description: The role of the email address.
                    enum:
                        - CUSTOMER_SERVICE
            required:
                - email_address
                - role
        person:
            title: Person
            description: Details of the person or party.
            properties:
                id:
                    description: The encrypted party ID.
                    type: string
                    readOnly: true
                    minLength: 1
                    maxLength: 20
                    pattern: ^[0-9A-Z]+$
                names:
                    description: The name of the person.
                    type: array
                    items:
                        $ref: '#/components/schemas/person_name'
                    maxItems: 5
                citizenship:
                    description: The citizenship country code of the person.
                    $ref: '#/components/schemas/country_code'
                addresses:
                    description: The list of addresses associated with the person.
                    type: array
                    items:
                        $ref: '#/components/schemas/person_address_detail'
                    maxItems: 5
                phones:
                    description: The list of phone numbers associated with the person.
                    type: array
                    items:
                        $ref: '#/components/schemas/person_phone_detail'
                    maxItems: 5
                birth_details:
                    description: The person's birth details.
                    $ref: '#/components/schemas/birth_details'
                documents:
                    description: A person's or party's related document data collected from the customer. For example SSN, ITIN, or business registration number collected from the user. <blockquote><strong>Note:</strong> This field is not applicable for POST [/v2/customer/partner-referrals](/docs/api/partner-referrals/v2/#partner-referrals_create) API calls.</blockquote>
                    type: array
                    items:
                        $ref: '#/components/schemas/person_document'
                    maxItems: 20
        individual_beneficial_owner:
            title: Individual_beneficial_owner
            description: The individual owner of the account.
            allOf:
                - $ref: '#/components/schemas/person'
                - properties:
                    percentage_of_ownership:
                        description: The percentage of shares this person owns in the company.
                        $ref: '#/components/schemas/percentage'
        business:
            properties:
                business_type:
                    description: Information related to the business like the nature of business, started date etc.
                    $ref: '#/components/schemas/business_type_info'
                business_industry:
                    description: Information related to the business like the nature of business, started date etc.
                    $ref: '#/components/schemas/business_industry'
                business_incorporation:
                    description: Information related to the business like the nature of business, started date etc.
                    $ref: '#/components/schemas/business_incorporation'
                names:
                    description: Name of the business.
                    type: array
                    items:
                        $ref: '#/components/schemas/business_name_detail'
                    maxItems: 5
                emails:
                    description: Email addresses of the business.
                    type: array
                    items:
                        $ref: '#/components/schemas/email'
                    maxItems: 5
                website:
                    description: Website of the business.
                    type: string
                    minLength: 1
                    maxLength: 50
                    format: uri
                addresses:
                    description: List of addresses associated with the business entity.
                    type: array
                    items:
                        $ref: '#/components/schemas/business_address_detail'
                    maxItems: 5
                phones:
                    description: List of phone number associated with the business.
                    type: array
                    items:
                        $ref: '#/components/schemas/business_phone_detail'
                    maxItems: 5
                documents:
                    description: Business Party related Document data collected from the customer.. For example SSN, ITIN, Business registration number that were collected from the user.
                    type: array
                    items:
                        $ref: '#/components/schemas/business_document'
                    maxItems: 20
        business_beneficial_owner:
            title: Business_beneficial_owner
            description: The business beneficial owner of the account.
            allOf:
                - $ref: '#/components/schemas/business'
                - properties:
                    percentage_of_ownership:
                        description: The percentage of shares this person owns in the company.
                        $ref: '#/components/schemas/percentage'
        beneficial_owners:
            title: Beneficial_owners
            type: object
            description: Beneficial owners of the entity.
            properties:
                individual_beneficial_owners:
                    description: Individual beneficial owners.
                    type: array
                    items:
                        $ref: '#/components/schemas/individual_beneficial_owner'
                    maxItems: 5
                business_beneficial_owners:
                    description: Business beneficial owners.
                    type: array
                    items:
                        $ref: '#/components/schemas/business_beneficial_owner'
                    maxItems: 5
        office_bearer_role:
            description: Role of the person party played in the business.
            title: Role type
            type: string
            pattern: ^[0-9A-Z_]+$
            minLength: 1
            maxLength: 255
            enum:
                - CEO
                - CHAIRMAN
                - DIRECTOR
                - SECRETARY
                - TREASURER
                - TRUSTEE
        office_bearer:
            title: Office Bearers
            description: The office bearer associated to the account.
            allOf:
                - $ref: '#/components/schemas/person'
                - properties:
                    role:
                        description: The role of the office bearer in the company.
                        $ref: '#/components/schemas/office_bearer_role'
        business_details:
            type: object
            title: Business Details
            description: The customer's business details.
            additionalProperties: false
            properties:
                phone_contacts:
                    type: array
                    description: An array of phone contacts for the business.
                    items:
                        $ref: '#/components/schemas/phone_details'
                business_address:
                    description: The address of the business.
                    $ref: '#/components/schemas/address'
                business_type:
                    type: string
                    description: The type of business.
                    items:
                        $ref: '#/components/schemas/business_type_enum'
                business_subtype:
                    $ref: '#/components/schemas/business_sub_type'
                category:
                    type: string
                    description: The customer's business category code. PayPal uses the industry standard seller category codes.
                    pattern: ^\d+$
                sub_category:
                    type: string
                    description: The customer's business subcategory code. PayPal uses the industry standard seller category codes.
                    pattern: ^\d+$
                merchant_category_code:
                    type: string
                    description: The customer's business seller category code. PayPal uses the industry standard seller category codes.
                    pattern: ^\d+$
                purpose_code:
                    description: The account's purpose code.
                    items:
                        $ref: '#/components/schemas/purpose_code_enum'
                names:
                    type: array
                    description: An array of business names.
                    items:
                        $ref: '#/components/schemas/business_name'
                business_description:
                    type: string
                    description: The business goals description. For example, a mission statement.
                event_dates:
                    type: array
                    description: An array of event dates for the business.
                    items:
                        $ref: '#/components/schemas/date_of_event'
                website_urls:
                    type: array
                    description: An array of website URLs for the business.
                    items:
                        type: string
                        description: The URL for the business website.
                        format: uri
                annual_sales_volume_range:
                    description: The range for the total annual sales volume of the business.
                    $ref: '#/components/schemas/currency_range'
                average_monthly_volume_range:
                    description: The range for the average monthly volume of the business.
                    $ref: '#/components/schemas/currency_range'
                identity_documents:
                    type: array
                    description: An array of identity documents that uniquely identify the user. For example, a license number, social security number, and so on.
                    items:
                        $ref: '#/components/schemas/identity_document'
                email_contacts:
                    type: array
                    description: An array of contact email addresses for the company.
                    items:
                        $ref: '#/components/schemas/email_contact'
                country_of_incorporation:
                    description: The country code of the country where the business was incorporated.
                    $ref: '#/components/schemas/country_code'
                beneficial_owners:
                    description: List of beneficial owners part of the entity. They can be either a Person or a business entity.
                    $ref: '#/components/schemas/beneficial_owners'
                office_bearers:
                    description: List of office bearers as part of the business entity.
                    type: array
                    items:
                        $ref: '#/components/schemas/office_bearer'
                    maxItems: 10
        identifier:
            type: object
            title: Bank Account Identifier
            additionalProperties: false
            description: The bank account ID. An ID with `ROUTING_NUMBER_1` is required.
            properties:
                type:
                    type: string
                    description: The bank account ID type.
                    minLength: 1
                    maxLength: 125
                    pattern: ^[0-9A-Z_-]+$
                    enum:
                        - BANK_CODE
                        - BI_CODE
                        - ROUTING_NUMBER_1
                        - ROUTING_NUMBER_2
                        - ROUTING_NUMBER_3
                        - SWIFT_CODE
                        - BRANCH_CODE
                        - INTERMEDIARY_SWIFT_CODE
                        - BBAN
                        - BBAN_ENCRYPTED
                        - BBAN_HMAC
                        - AGGREGATOR_YODLEE
                value:
                    description: The value of account identifier.
                    type: string
                    minLength: 1
                    maxLength: 125
                    pattern: ^[A-Za-z0-9-_.+/ =]+
        bank_details:
            type: object
            title: Bank Details
            description: The required information to add a card as a financial instrument to PayPal through onboarding.
            properties:
                nick_name:
                    type: string
                    description: The user-provided short name for the user's bank account.
                account_number:
                    type: string
                    description: The bank account number. These are numeric values only without any additional formatting.
                    pattern: \d+
                account_type:
                    type: string
                    description: The type of account, which is checking or savings.
                    enum:
                        - CHECKING
                        - SAVINGS
                currency_code:
                    type: string
                    description: The primary [three-character ISO-4217 currency code](/docs/api/reference/currency-codes/) for the account.
                    pattern: ^([A-Z]){3}$
                identifiers:
                    type: array
                    minItems: 1
                    description: An array of instrument institute attributes. Used with the account number to uniquely identify the instrument. Value is:<ul><li>For banks with IBAN information, the IBAN number.</li><li>For banks with BBAN information, the BBAN number.</li><li>For banks with both IBAN and BBAN information, the IBAN number.</li></ul>
                    items:
                        $ref: '#/components/schemas/identifier'
                branch_location:
                    description: The branch location, if applicable.
                    $ref: '#/components/schemas/address'
                mandate_agreed:
                    type: boolean
                    description: Indicates whether the user has agreed to the mandate for financial instrument (FI) authorization.
            required:
                - account_number
                - account_type
        account_identifier:
            type: object
            title: Account Identifier
            description: The PayPal account ID of the partner.
            additionalProperties: false
            properties:
                type:
                    type: string
                    description: The type of ID for the account.
                    enum:
                        - PAYER_ID
                value:
                    type: string
                    description: The ID of the account.
            required:
                - type
                - value
        partner_specific_identifiers:
            type: object
            title: Partner Identifiers
            description: The identifier for the customer in the partner's system.
            additionalProperties: false
            properties:
                type:
                    type: string
                    description: The identifier type.
                    enum:
                        - TRACKING_ID
                        - ACCOUNT_LINKING_ID
                value:
                    type: string
                    description: The identifier value.
            required:
                - type
                - value
        user:
            type: object
            title: User
            description: The customer's business and personal data that is required to create an account.
            additionalProperties: false
            properties:
                customer_type:
                    type: string
                    description: The type of PayPal account to create, which is consumer or seller.
                    deprecated: true
                    enum:
                        - CONSUMER
                        - MERCHANT
                person_details:
                    $ref: '#/components/schemas/person_details'
                business_details:
                    $ref: '#/components/schemas/business_details'
                financial_instrument_data:
                    type: object
                    title: Financial Instrument Data
                    description: The customer's financial instrument. Use it to add a financial instrument to the customer's PayPal account.
                    properties:
                        bank_details:
                            type: array
                            description: An array of bank account details for the `ADD_BANK` capability.
                            items:
                                $ref: '#/components/schemas/bank_details'
                preferred_language_code:
                    type: string
                    title: Preferred Language Code
                    description: The locale code of the user's preferred language.
                    pattern: ^([a-z]){2}_([A-Z]){2}$
                    deprecated: true
                primary_currency_code:
                    description: The primary [three-character ISO-4217 currency code](/docs/api/reference/currency-codes/) of the account.
                referral_user_payer_id:
                    $ref: '#/components/schemas/account_identifier'
                partner_specific_identifiers:
                    type: array
                    description: An array of customer identifiers in the partner's system.
                    items:
                        $ref: '#/components/schemas/partner_specific_identifiers'
        rest_endpoint_features_enum:
            type: string
            title: REST Endpoint Features
            description: The REST endpoint.
            minLength: 1
            maxLength: 100
            pattern: ^[0-9A-Z_-]+$
            enum:
                - PAYOUTS
                - PAYMENT
                - REFUND
                - FUTURE_PAYMENT
                - DIRECT_PAYMENT
                - PARTNER_FEE
                - DELAY_FUNDS_DISBURSEMENT
                - READ_SELLER_DISPUTE
                - UPDATE_SELLER_DISPUTE
                - ADVANCED_TRANSACTIONS_SEARCH
                - SWEEP_FUNDS_EXTERNAL_SINK
                - ACCESS_MERCHANT_INFORMATION
                - TRACKING_SHIPMENT_READWRITE
                - INVOICE_READ_WRITE
                - DISPUTE_READ_BUYER
                - UPDATE_CUSTOMER_DISPUTES
                - VAULT
                - BILLING_AGREEMENT
        integration_details:
            type: object
            title: Integration Details
            description: The integration details for the partner and customer relationship. Required if `operation` is `API_INTEGRATION`.
            additionalProperties: false
            properties:
                classic_api_integration:
                    $ref: '#/components/schemas/classic_api_integration'
                rest_api_integration:
                    $ref: '#/components/schemas/rest_api_integration'
        billing_experience_preference:
            type: object
            title: Billing Experience Preference
            description: The preference that customizes the billing experience of the customer.
            additionalProperties: false
            properties:
                experience_id:
                    type: string
                    description: The ID of the payment web experience profile.
                    minLength: 1
                    maxLength: 20
                    pattern: ^[a-zA-Z0-9-]+$
                billing_context_set:
                    type: boolean
                    description: Indicates whether the partner has already displayed the billing context to the seller.
        billing_agreement:
            type: object
            title: Billing Agreement
            description: The details of the billing agreement between the partner and a seller.
            additionalProperties: false
            properties:
                description:
                    type: string
                    description: The billing agreement description.
                    minLength: 1
                    maxLength: 125
                    pattern: ^.+$
                billing_experience_preference:
                    $ref: '#/components/schemas/billing_experience_preference'
                merchant_custom_data:
                    type: string
                    description: The custom data for the billing agreement.
                    minLength: 1
                    maxLength: 125
                    pattern: ^[a-zA-Z0-9-]+$
                approval_url:
                    type: string
                    format: uri
                    description: The URL to which to redirect seller to accept the billing agreement.
                    minLength: 1
                    maxLength: 125
                ec_token:
                    type: string
                    description: The billing agreement token for the agreement.
                    minLength: 1
                    maxLength: 50
                    pattern: ^[0-9A-Z_-]+$
        capabilities:
            type: string
            description: Optional capabilities of the selected PayPal product for which the customer is being onboarded.
            title: Capability
            minLength: 1
            maxLength: 127
            pattern: ^[A-Z0-9_]+$
            enum:
                - PAYPAL_WALLET_VAULTING_ADVANCED
                - PAY_UPON_INVOICE
                - APPLE_PAY
        web_experience_preference:
            type: object
            title: Web Experience Preference
            description: The preference to customize the web experience of the customer.
            additionalProperties: false
            properties:
                partner_logo_url:
                    type: string
                    format: uri
                    description: The partner logo URL to display in the seller onboarding flow.<blockquote><strong>Note:</strong> While there is no restriction on the size of your image, PayPal forces the max width to 106px and max height to 29px. The best resolution you can provide is 106px x 29px.</blockquote>
                return_url:
                    type: string
                    format: uri
                    description: The URL to which to redirect the customer upon completion of the onboarding process.
                return_url_description:
                    type: string
                    description: The description of the return URL.
                action_renewal_url:
                    type: string
                    format: uri
                    description: If `renew_action_url` expires, redirect the customer to this URL.
                show_add_credit_card:
                    type: boolean
                    description: Indicates whether to show an add credit card page.
                show_mobile_confirm:
                    type: boolean
                    description: Indicates whether to ask the customer to initiate confirmation of their mobile phone (the phone that the partner designated as `MOBILE` in the customer data). Default is`false`.
                use_mini_browser:
                    type: boolean
                    description: Indicates whether to provide a single page signup flow in a mini browser. Default is to provide a full-size, multi-page flow.
                use_hua_email_confirmation:
                    type: boolean
                    description: Indicates whether to use the `hosted_user_agreement_url` to confirm the customer's email address. If `true`, PayPal appends the email confirmation code to `hosted_user_agreement_url`, and when a customer successfully accesses the hosted user agreement URL, confirms the customer's email address. If `false`, PayPal does not append the confirmation code to the URL and does not confirm the email address.
        legal_consent:
            type: object
            title: Legal Consent
            description: The customer-provided consent.
            additionalProperties: false
            properties:
                type:
                    type: string
                    description: The type of consent. `SHARE_DATA_CONSENT` gives consent to you to share your customer's data with PayPal.
                    pattern: ^[0-9A-Z_-]+$
                    minLength: 1
                    maxLength: 127
                    enum:
                        - SHARE_DATA_CONSENT
                granted:
                    type: boolean
                    description: Indicates whether the customer agreed to share this type of data. To give consent, specify `true`. To withhold consent, specify `false`.
            required:
                - type
                - granted
        product_name:
            type: string
            description: The PayPal product for which the customer is onboarded.
            title: Product Name
            enum:
                - EXPRESS_CHECKOUT
                - PPPLUS
                - WP_PRO
                - PPCP
                - PAYMENT_METHODS
                - ADVANCED_VAULTING
        referral_data:
            type: object
            title: Customer Data
            description: The customer's referral data that partners share with PayPal.
            allOf:
                - description: The common account model representing the basic account structure.
                  $ref: '#/components/schemas/account'
                - properties:
                    email:
                        description: Email address of the customer used to create the account.
                        $ref: '#/components/schemas/email_address'
                    preferred_language_code:
                        description: The preferred [locale code](/docs/api/reference/locale-codes/) to use in the onboarding flow for the customer.
                        $ref: '#/components/schemas/language'
                    tracking_id:
                        type: string
                        description: The partner's unique identifier for this customer in their system which can be used to track user in PayPal.
                        minLength: 1
                        maxLength: 127
                    partner_config_override:
                        description: The configuration property that the partner intends to override for this onboarding request.
                        $ref: '#/components/schemas/partner_config_override'
                    financial_instruments:
                        description: Array of financial instruments attached to the customer's account.
                        $ref: '#/components/schemas/financial_instruments'
                    operations:
                        type: array
                        description: An array of operations to perform for the customer while they share their data.
                        items:
                            $ref: '#/components/schemas/operation'
                        minItems: 1
                        maxItems: 5
                    products:
                        type: array
                        description: An array of PayPal products to which the partner wants to onboard the customer.
                        items:
                            $ref: '#/components/schemas/product'
                        minItems: 1
                        maxItems: 5
                    capabilities:
                        type: array
                        description: An array of capabilities which the partner wants to enable for the selected products. Supported only when products are specified.
                        items:
                            $ref: '#/components/schemas/capabilities'
                        minItems: 1
                        maxItems: 5
                    outside_process_dependencies:
                        type: array
                        description: An array of dependent processes.
                        items:
                            $ref: '#/components/schemas/dependent_process'
                        minItems: 1
                        maxItems: 5
                    legal_consents:
                        type: array
                        description: An array of all consents that the partner has received from this seller. If `SHARE_DATA_CONSENT` is not granted, PayPal does not store customer data.
                        items:
                            $ref: '#/components/schemas/legal_consent'
                        minItems: 1
                        maxItems: 5
                    payout_attributes:
                        description: Payout specific attributes.
                        $ref: '#/components/schemas/payout_attributes'
            additionalProperties: true
            required:
                - operations
                - legal_consents
        create_referral_data_response:
            type: object
            title: Create Referral Data Response
            description: The shared referral data.
            properties:
                links:
                    type: array
                    title: Links
                    description: An array of request-related [HATEOAS links](/docs/api/overview/#hateoas-links).
                    readOnly: true
                    additionalProperties: true
                    minItems: 2
                    maxItems: 10
                    items:
                        description: The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.
                        $ref: '#/components/schemas/link_description'
        referral_data_response:
            type: object
            title: Referral Data Response
            description: The share referral data response.
            properties:
                partner_referral_id:
                    type: string
                    description: The ID to access the customer's data shared by the partner with PayPal.
                    readOnly: true
                    pattern: ^[0-9A-Za-z_-.]+$
                    minLength: 1
                    maxLength: 255
                submitter_payer_id:
                    type: string
                    description: The payer ID of the partner who shared the referral data.
                    readOnly: true
                    minLength: 1
                    maxLength: 20
                    pattern: ^[0-9A-Z]+$
                referral_data:
                    $ref: '#/components/schemas/referral_data'
                links:
                    title: Links
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/overview/#hateoas-links).
                    readOnly: true
                    additionalProperties: true
                    items:
                        $ref: '#/components/schemas/link_description'
                    maxItems: 2
        account_capability_names:
            type: string
            title: Capability Name
            description: The name of capability.
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            enum:
                - PREPAID
                - INSTANT_FUNDS
                - SEND_MONEY
                - RECEIVE_MONEY
                - CARD_PROCESSING_VIRTUAL_TERMINAL
                - AMEX_OPTBLUE
                - CUSTOM_CARD_PROCESSING
                - FRAUD_TOOL_ACCESS
                - DEBIT_CARD_SWITCH
                - COMMERCIAL_ENTITY
                - WITHDRAW_MONEY
                - STANDARD_CARD_PROCESSING
                - PAYPAL_CREDIT_PROCESSING
                - VENMO_PAY_PROCESSING
                - ALT_PAY_PROCESSING
        signature:
            type: object
            title: Signature
            description: The signature portion of the seller credentials.
            properties:
                api_user_name:
                    type: string
                    description: The API user name of the seller.
                api_password:
                    type: string
                    description: The API password of the seller.
                signature:
                    type: string
                    description: The signature credential of the seller.
        certificate:
            type: object
            title: Certificate
            description: A certificate for seller credentials.
            properties:
                api_user_name:
                    type: string
                    description: The API user name for the seller.
                api_password:
                    type: string
                    description: The API password for the seller.
                fingerprint:
                    type: string
                    description: The fingerprint.
                download_link:
                    type: string
                    description: The URL to download the certificate.
        credential:
            type: object
            title: Credential
            description: Seller credentials.
            properties:
                signature:
                    $ref: '#/components/schemas/signature'
                certificate:
                    $ref: '#/components/schemas/certificate'
        oauth-third-party:
            type: object
            title: OAuth Third Party
            description: The seller third-party information for REST API.
            properties:
                partner_client_id:
                    type: string
                    description: The client ID of the partner's API caller account.
                merchant_client_id:
                    type: string
                    description: The client ID of the seller.
                scopes:
                    type: array
                    description: An array of scopes that the seller granted the partner.
                    items:
                        type: string
                        description: The individual scope name.
                access_token:
                    type: string
                    description: The access token for the partner-selected integration method.
                refresh_token:
                    type: string
                    description: The refresh token for the partner-selected integration method.
        oauth-integration:
            type: object
            title: OAuth Integration
            description: The status of the oauth-integration between a partner and seller.
            properties:
                integration_type:
                    type: string
                    description: The type of integration between the partner and the seller.
                    enum:
                        - FIRST_PARTY_INTEGRATED
                        - FIRST_PARTY_NON_INTEGRATED
                        - THIRD_PARTY
                        - OAUTH_THIRD_PARTY
                integration_method:
                    type: string
                    description: The integration method that the partner uses to integrate with PayPal APIs.
                    enum:
                        - PAYPAL
                        - BRAINTREE
                status:
                    type: string
                    description: The integration status.
                    enum:
                        - A
                        - I
                oauth_third_party:
                    type: array
                    description: An array of combinations of `partner_client_id` and `merchant_client_id` values and their associated scopes.
                    items:
                        $ref: '#/components/schemas/oauth-third-party'
        limitation:
            type: object
            title: Limitation
            description: The limitations on a seller account.
            properties:
                name:
                    type: string
                    description: The title of the limitation that is applied to the account.
                restrictions:
                    type: array
                    description: An array of the restriction names.
                    items:
                        type: string
                        description: A restriction name.
        account_capability_status:
            title: Capability Status
            description: Status of the account capability.
            type: string
            readOnly: true
            pattern: ^[A-Z_]+$
            minLength: 1
            maxLength: 64
            enum:
                - ACTIVE
                - SUSPENDED
                - REVOKED
        capability_limit_types:
            type: string
            title: Limit Type
            description: The type of limit.
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            enum:
                - GENERAL
        capability_limit:
            type: object
            title: Capability Limit
            description: Limit associated with the capability.
            properties:
                type:
                    description: Type of the limit.
                    $ref: '#/components/schemas/capability_limit_types'
        account_capability:
            type: object
            title: Account Capability
            description: Capability associated with the account.
            properties:
                name:
                    description: Name of the capability.
                    $ref: '#/components/schemas/account_capability_names'
                status:
                    description: The status of the capability.
                    $ref: '#/components/schemas/account_capability_status'
                limits:
                    type: array
                    description: An array of limitations on the capability.
                    items:
                        $ref: '#/components/schemas/capability_limit'
        merchant-integration:
            type: object
            title: Seller Integration
            description: The `merchant-integration` status information for a partner.
            properties:
                tracking_id:
                    type: string
                    description: The partner-provided tracking ID, if one was provided.
                merchant_id:
                    type: string
                    description: The payer ID of the seller after creation of their PayPal account.
                given_name:
                    type: string
                    description: The given name of the seller. Only available for casual sellers.
                    maxLength: 140
                    minLength: 1
                    pattern: ^[a-zA-Z ,.'-]+$
                surname:
                    type: string
                    description: The surname of the seller. Only available for casual sellers.
                    maxLength: 140
                    minLength: 1
                    pattern: ^[a-zA-Z ,.'-]+$
                products:
                    type: array
                    description: An array of all products that are integrated with the partner for the seller.
                    items:
                        $ref: '#/components/schemas/product'
                payments_receivable:
                    type: boolean
                    description: Indicates whether the seller account can receive payments.
                legal_name:
                    type: string
                    description: The legal business name of the seller.
                primary_email_confirmed:
                    type: boolean
                    description: Indicates whether the primary email of the seller has been confirmed.
                primary_email:
                    type: string
                    description: The primary email address of the seller.
                date_created:
                    type: string
                    description: The date when the seller account was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                granted_permissions:
                    type: array
                    description: An array of permissions granted to the partner by the seller.
                    items:
                        type: string
                        description: The permission granted to the partner.
                        enum:
                            - EXPRESS_CHECKOUT
                            - REFUND
                            - DIRECT_PAYMENT
                            - AUTH_CAPTURE
                            - BUTTON_MANAGER
                            - ACCOUNT_BALANCE
                            - TRANSACTION_DETAILS
                            - TRANSACTION_SEARCH
                            - REFERENCE_TRANSACTION
                            - RECURRING_PAYMENTS
                            - BILLING_AGREEMENT
                            - MANAGE_PENDING_TRANSACTION_STATUS
                            - NON_REFERENCED_CREDIT
                            - MASS_PAY
                            - ENCRYPTED_WEBSITE_PAYMENTS
                            - SETTLEMENT_CONSOLIDATION
                            - SETTLEMENT_REPORTING
                            - MOBILE_CHECKOUT
                            - AIR_TRAVEL
                            - INVOICING
                            - RECURRING_PAYMENT_REPORT
                            - EXTENDED_PRO_PROCESSING_REPORT
                            - EXCEPTION_PROCESSING_REPORT
                            - TRANSACTION_DETAIL_REPORT
                            - ACCOUNT_MANAGEMENT_PERMISSION
                            - ACCESS_BASIC_PERSONAL_DATA
                            - ACCESS_ADVANCED_PERSONAL_DATA
                api_credentials:
                    description: The API credentials of the seller.
                    $ref: '#/components/schemas/credential'
                oauth_integrations:
                    type: array
                    description: An array of information about OAuth integrations between partners and sellers.
                    items:
                        $ref: '#/components/schemas/oauth-integration'
                limitations:
                    type: array
                    description: An array of limitations on the seller account.
                    items:
                        $ref: '#/components/schemas/limitation'
                capabilities:
                    type: array
                    description: An array of capabilities associated with the products integrated between seller and partner.
                    items:
                        $ref: '#/components/schemas/account_capability'
        merchant-integration.credentials:
            type: object
            title: Seller Credentials
            description: The `merchant-integration` merchant credentials for a downloadable cart seller.
            properties:
                client_id:
                    type: string
                    description: The client ID of the seller.
                    minLength: 1
                    maxLength: 255
                client_secret:
                    type: string
                    description: The client secret of the seller.
                    minLength: 1
                    maxLength: 255
                payer_id:
                    type: string
                    description: The payer ID of the seller and the pattern is not provided because the value is defined by an external party.
                    minLength: 1
                    maxLength: 255
        error_details-3:
            type: object
            title: Error Details
            description: The error details. Required for client-side `4XX` errors.
            properties:
                field:
                    type: string
                    description: The name of the field that caused the error.
                issue:
                    type: string
                    description: The reason for the error.
            required:
                - field
                - issue
        error-2:
            type: object
            title: Error
            description: The error information.
            properties:
                name:
                    type: string
                    description: The human-readable, unique name of the error.
                    readOnly: true
                debug_id:
                    type: string
                    description: The PayPal internal ID. Used for correlation purposes.
                    readOnly: true
                message:
                    type: string
                    description: The message that describes the error.
                    readOnly: true
                information_link:
                    type: string
                    description: The URI to detailed information related to this error for the developer.
                    readOnly: true
                details:
                    type: array
                    description: An array of additional details for the error.
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/error_details-3'
            required:
                - name
                - message
                - information_link
        product-integration:
            type: object
            title: Product Integration
            description: The required information for a partner to integrate this product.
            properties:
                product:
                    type: string
                    description: The product.
                    enum:
                        - EXPRESS_CHECKOUT
                        - WEBSITE_PAYMENTS_STANDARD
                        - MASS_PAYMENT
                        - EMAIL_PAYMENTS
                        - EBAY_CHECKOUT
                        - PAYFLOW_LINK
                        - PAYFLOW_PRO
                        - WEBSITE_PAYMENTS_PRO_3_0
                        - WEBSITE_PAYMENTS_PRO_2_0
                        - VIRTUAL_TERMINAL
                        - HOSTED_SOLE_SOLUTION
                        - BILL_ME_LATER
                        - MOBILE_EXPRESS_CHECKOUT
                        - PAYPAL_HERE
                        - MOBILE_IN_STORE
                        - PAYPAL_STANDARD
                        - MOBILE_PAYPAL_STANDARD
                        - MOBILE_PAYMENT_ACCEPTANCE
                        - PAYPAL_ADVANCED
                        - PAYPAL_PRO
                        - ENHANCED_RECURRING_PAYMENTS
                integration_type:
                    type: string
                    description: The integration type for the product as third or first party or sellers that are onboarded through this partner.
                    enum:
                        - FIRST_PARTY
                        - THIRD_PARTY
                credential_type:
                    type: string
                    description: The credential type for a first-party integration. Required if `integration_type` is provided.
                    enum:
                        - SIGNATURE
                        - CERTIFICATE
                        - OAUTH_TOKEN
                permissions:
                    type: array
                    description: An array of permissions that the partner expects that the seller has granted for a third-party integration. Different products need different permissions, so permissions also depend on the product.
                    items:
                        type: string
                        description: Permission given to the partner.
                        enum:
                            - EXPRESS_CHECKOUT
                            - REFUND
                            - DIRECT_PAYMENT
                            - AUTH_CAPTURE
                            - BUTTON_MANAGER
                            - ACCOUNT_BALANCE
                            - TRANSACTION_DETAILS
                            - TRANSACTION_SEARCH
                            - REFERENCE_TRANSACTION
                            - RECURRING_PAYMENTS
                            - BILLING_AGREEMENT
                            - MANAGE_PENDING_TRANSACTION_STATUS
                            - NON_REFERENCED_CREDIT
                            - MASS_PAY
                            - ENCRYPTED_WEBSITE_PAYMENTS
                            - SETTLEMENT_CONSOLIDATION
                            - SETTLEMENT_REPORTING
                            - MOBILE_CHECKOUT
                            - AIR_TRAVEL
                            - INVOICING
                            - RECURRING_PAYMENT_REPORT
                            - EXTENDED_PRO_PROCESSING_REPORT
                            - EXCEPTION_PROCESSING_REPORT
                            - TRANSACTION_DETAIL_REPORT
                            - ACCOUNT_MANAGEMENT_PERMISSION
                            - ACCESS_BASIC_PERSONAL_DATA
                            - ACCESS_ADVANCED_PERSONAL_DATA
        product-preferences:
            type: object
            title: Product Preferences
            description: The product preferences. A partner can customize these preferences based on the country and product.
            properties:
                product:
                    type: string
                    description: The product to which these preferences belong.
                    enum:
                        - EXPRESS_CHECKOUT
                        - WEBSITE_PAYMENTS_STANDARD
                        - MASS_PAYMENT
                        - EMAIL_PAYMENTS
                        - EBAY_CHECKOUT
                        - PAYFLOW_LINK
                        - PAYFLOW_PRO
                        - WEBSITE_PAYMENTS_PRO_3_0
                        - WEBSITE_PAYMENTS_PRO_2_0
                        - VIRTUAL_TERMINAL
                        - HOSTED_SOLE_SOLUTION
                        - BILL_ME_LATER
                        - MOBILE_EXPRESS_CHECKOUT
                        - PAYPAL_HERE
                        - MOBILE_IN_STORE
                        - PAYPAL_STANDARD
                        - MOBILE_PAYPAL_STANDARD
                        - MOBILE_PAYMENT_ACCEPTANCE
                        - PAYPAL_ADVANCED
                        - PAYPAL_PRO
                        - ENHANCED_RECURRING_PAYMENTS
                url:
                    type: string
                    description: The URL to which to redirect the seller after sign-up is complete.
                    format: uri
                    maxLength: 2048
        region-preferences:
            type: object
            title: Region Preferences
            description: The region preferences.
            properties:
                country_code:
                    type: string
                    description: The [two-character ISO-3166-1 country code](/docs/api/reference/country-codes/) for the country that is associated with the preferences.
                product_preferences:
                    type: array
                    description: An array of product preferences. Can change for a country or product.
                    items:
                        $ref: '#/components/schemas/product-preferences'
                return_message:
                    type: array
                    description: An array of messages to the seller from the partner after completion of sign-up. The message can change by country and language.
                    items:
                        $ref: '#/components/schemas/message'
        partner:
            type: object
            title: Partner
            description: The seller acquisition partner-related information. Defines the settings for the customized onboarding experience of the seller.
            properties:
                partner_id:
                    type: string
                    description: The account ID of the partner.
                launch_type:
                    type: string
                    description: Indicates whether the onboarding occurs in a full browser, mini-browser, or light box.
                    default: FULL_BROWSER
                    enum:
                        - FULL_BROWSER
                        - LIGHT_BOX
                        - EMBEDDED
                        - MINI_BROWSER
                receives_credential:
                    type: boolean
                    description: Indicates whether the partner is integrated to receive a seller credential.
                    default: false
                product_selection:
                    type: string
                    description: Indicates whether the seller can select a product with which to integrate.
                    enum:
                        - Y
                        - N
                        - P
                logo_url:
                    type: string
                    description: The partner logo URL. Provides a way for partners to update their logo through preferences. This logo over-writes any image URL provided earlier for their business accounts.
                    format: uri
                notification_url:
                    type: string
                    description: The partner-provided URL for notifications.
                    format: uri
                integration_preferences:
                    type: array
                    description: An array of required information for a partner to integrate this product. Varies based on the product to integrate.
                    items:
                        $ref: '#/components/schemas/product-integration'
                region_preferences:
                    type: array
                    description: An array of region-specific preferences.
                    items:
                        $ref: '#/components/schemas/region-preferences'
                agreement_types:
                    type: array
                    description: An array of partner-accepted agreements.
                    items:
                        description: A partner-accepted agreement.
                        enum:
                            - VENDOR_SECURITY_POLICY_AGREEMENT
                display_name:
                    type: string
                    description: The display name of the partner.
                    readOnly: true
        person_name_type:
            description: The person's name type.
            title: Person name type
            type: string
            pattern: ^[0-9A-Z_]+$
            minLength: 1
            maxLength: 255
            enum:
                - LEGAL
        person_name:
            type: object
            title: Person name
            description: The name of the person.
            allOf:
                - $ref: '#/components/schemas/name'
                - properties:
                    type:
                        description: 'The type of name. Currently supported values are: `LEGAL`.'
                        $ref: '#/components/schemas/person_name_type'
            required:
                - type
        person_address_type:
            description: The address type under which the provided address is tagged.
            title: Person address type
            type: string
            pattern: ^[0-9A-Z_]+$
            minLength: 1
            maxLength: 255
            enum:
                - HOME
        person_address_detail:
            type: object
            title: Person address detail
            description: A simple postal address with coarse-grained fields.
            allOf:
                - $ref: '#/components/schemas/address_portable'
                - properties:
                    type:
                        description: The address type under which this is classified.
                        $ref: '#/components/schemas/person_address_type'
                    primary:
                        type: boolean
                        description: Whether this is the primary address of the user. This cannot be directly set to `false`, but rather it is toggled `false` in the datastore when another address is set to primary.
                    inactive:
                        type: boolean
                        description: Whether this address has been inactivated.
                        readOnly: true
            required:
                - type
        phone_number_tag:
            description: Tag associated with the phone number.
            title: Phone number tag
            type: string
            pattern: ^[0-9A-Z_]+$
            minLength: 1
            maxLength: 255
            enum:
                - MOBILE
                - LANDLINE
        person_phone_detail:
            type: object
            title: Phone details
            description: The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).
            allOf:
                - $ref: '#/components/schemas/phone'
                - properties:
                    contact_name:
                        type: string
                        description: The name that the phone number is connected to.
                        minLength: 1
                        maxLength: 900
                    inactive:
                        type: boolean
                        description: Whether this phone number has been inactivated by the user.
                        readOnly: true
                    primary:
                        type: boolean
                        description: Whether this is the primary contact phone number of the user.
                    primary_mobile:
                        type: boolean
                        description: Whether this is the primary mobile phone number of the user.
                    type:
                        $ref: '#/components/schemas/phone_type'
                        description: The type of phone number provided. For example, home, work, or mobile.
                    tags:
                        type: array
                        description: Array of tags for this phone number.
                        items:
                            $ref: '#/components/schemas/phone_number_tag'
                        maxItems: 20
            required:
                - type
        birth_details:
            title: Birth details
            type: object
            description: Date of birth data provided by the user
            properties:
                date_of_birth:
                    description: date of birth, fomrat [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_no_time'
            required:
                - date_of_birth
        file_reference:
            type: object
            title: File Reference
            description: The file reference. Can be a file in PayPal MediaServ, PayPal DMS, or other custom store.
            properties:
                id:
                    type: string
                    description: The ID of the referenced file.
                    minLength: 1
                    maxLength: 255
                reference_url:
                    type: string
                    description: The reference URL for the file.
                    format: uri
                    minLength: 1
                    maxLength: 2000
                content_type:
                    type: string
                    description: The [Internet Assigned Numbers Authority (IANA) media type of the file](https://www.iana.org/assignments/media-types/media-types.xhtml).
                create_time:
                    $ref: '#/components/schemas/date_time'
                    description: The date and time when the file was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                size:
                    type: string
                    description: The size of the file, in bytes.
                    pattern: ^[0-9]+$
        person_document_type:
            type: string
            title: Document type
            description: The type of documents.
            pattern: ^[0-9A-Z_]+$
            minLength: 1
            maxLength: 255
            enum:
                - SOCIAL_SECURITY_NUMBER
                - EMPLOYMENT_IDENTIFICATION_NUMBER
                - TAX_IDENTIFICATION_NUMBER
                - PASSPORT_NUMBER
                - PENSION_FUND_ID
                - MEDICAL_INSURANCE_ID
                - CNPJ
                - CPF
                - PAN
        person_document:
            title: Person document
            description: The documents associated with the person.
            allOf:
                - $ref: '#/components/schemas/document'
                - properties:
                    type:
                        description: The actual type of the document. It could be `ID_CARD`, `PASSPORT`, etc.
                        $ref: '#/components/schemas/person_document_type'
        individual_owner_type:
            description: Role of the person party played in the account.
            title: Individual owner role type
            type: string
            pattern: ^[0-9A-Z_]+$
            minLength: 1
            maxLength: 255
            enum:
                - PRIMARY
        individual_owner:
            title: Individual_owner
            description: The individual owner of the account.
            allOf:
                - $ref: '#/components/schemas/person'
                - properties:
                    type:
                        description: The actual role of this user on the account, PRIMARY/SECONDARY.
                        $ref: '#/components/schemas/individual_owner_type'
        business_type:
            description: The business types classified
            title: Business type
            type: string
            pattern: ^[0-9A-Z_]+$
            minLength: 1
            maxLength: 255
            enum:
                - ANY_OTHER_BUSINESS_ENTITY
                - ASSOCIATION
                - CORPORATION
                - GENERAL_PARTNERSHIP
                - GOVERNMENT
                - INDIVIDUAL
                - LIMITED_LIABILITY_PARTNERSHIP
                - LIMITED_LIABILITY_PROPRIETORS
                - LIMITED_LIABILITY_PRIVATE_CORPORATION
                - LIMITED_PARTNERSHIP
                - LIMITED_PARTNERSHIP_PRIVATE_CORPORATION
                - NONPROFIT
                - ONLY_BUY_OR_SEND_MONEY
                - OTHER_CORPORATE_BODY
                - PARTNERSHIP
                - PRIVATE_PARTNERSHIP
                - PROPRIETORSHIP
                - PROPRIETORSHIP_CRAFTSMAN
                - PROPRIETORY_COMPANY
                - PRIVATE_CORPORATION
                - PUBLIC_COMPANY
                - PUBLIC_CORPORATION
                - PUBLIC_PARTNERSHIP
                - REGISTERED_COOPERATIVE
        business_type_info:
            title: Business type information
            type: object
            description: The type and subtype of the business.
            properties:
                type:
                    description: Type of business entity like corporation, sole prop, governmental.
                    $ref: '#/components/schemas/business_type'
                subtype:
                    description: The sub classification of the business type.
                    $ref: '#/components/schemas/business_sub_type'
        business_industry:
            title: Business industry
            type: object
            description: The category, subcategory and MCC code of the business.
            properties:
                category:
                    type: string
                    description: The customer's business category code. PayPal uses industry standard seller category codes.
                    pattern: ^\d+$
                    minLength: 1
                    maxLength: 20
                mcc_code:
                    type: string
                    description: The customer's business seller category code. PayPal uses industry standard seller category codes.
                    pattern: ^\d+$
                    minLength: 1
                    maxLength: 20
                subcategory:
                    type: string
                    description: The customer's business subcategory code. PayPal uses industry standard seller subcategory codes.
                    pattern: ^\d+$
                    minLength: 1
                    maxLength: 20
            required:
                - category
                - mcc_code
                - subcategory
        business_incorporation:
            title: Business_incorporation
            type: object
            description: Business incorporation information.
            properties:
                incorporation_country_code:
                    description: The incorporation country code.
                    $ref: '#/components/schemas/country_code'
                incorporation_date:
                    description: date of incorporation
                    $ref: '#/components/schemas/date_no_time'
                incorporation_province_code:
                    description: The province of incorporation.
                    type: string
                    minLength: 1
                    maxLength: 50
                    pattern: ^[A-Z]{2}-([A-Z]{2,3}|[0-9]{2,3})$
        business_name_type:
            description: Business name type
            title: The business name type.
            type: string
            pattern: ^[0-9A-Z_]+$
            minLength: 1
            maxLength: 255
            enum:
                - DOING_BUSINESS_AS
                - LEGAL_NAME
        business_name_detail:
            type: object
            title: Business name
            description: Name of the business provided.
            allOf:
                - $ref: '#/components/schemas/business_name'
                - properties:
                    id:
                        description: The encrypted ID for the business name.
                        type: string
                        readOnly: true
                        minLength: 1
                        maxLength: 20
                    type:
                        description: The type of business name. For example, trading name.
                        $ref: '#/components/schemas/business_name_type'
            required:
                - type
        business_address_type:
            description: Address type under which the provided address is tagged
            title: Business address type
            type: string
            pattern: ^[0-9A-Z_]+$
            minLength: 1
            maxLength: 255
            enum:
                - WORK
        business_address_detail:
            type: object
            title: Business_address_detail
            description: A simple postal address with coarse-grained fields.
            allOf:
                - $ref: '#/components/schemas/address_portable'
                - properties:
                    type:
                        description: The address type under which this is classified. For example, shipping or dropoff.
                        $ref: '#/components/schemas/business_address_type'
                    primary:
                        type: boolean
                        description: Whether this is the primary address of the user. This cannot be directly set to `false`, but rather it is toggled `false` in the datastore when another address is set to primary.
                    inactive:
                        type: boolean
                        description: Whether this address has been inactivated.
                        readOnly: true
            required:
                - type
        business_phone_type:
            type: string
            title: Phone type
            description: The type of phone number provided. For example, home, work, or mobile.
            pattern: ^[0-9A-Z_]+$
            minLength: 1
            maxLength: 255
            enum:
                - CUSTOMER_SERVICE
                - BUSINESS
        business_phone_detail:
            type: object
            title: Phone details
            description: The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).
            allOf:
                - $ref: '#/components/schemas/phone'
                - properties:
                    contact_name:
                        type: string
                        description: The name that the phone number is connected to.
                        minLength: 1
                        maxLength: 900
                    inactive:
                        type: boolean
                        description: Whether this phone number has been inactivated by the user.
                        readOnly: true
                    primary:
                        type: boolean
                        description: Whether this is the primary contact phone number of the user.
                    type:
                        $ref: '#/components/schemas/business_phone_type'
                        description: The type of phone number provided. For example, home, work, or mobile.
                    tags:
                        type: array
                        description: Array of tags for this phone number.
                        items:
                            $ref: '#/components/schemas/phone_number_tag'
                        maxItems: 20
            required:
                - type
        business_document_type:
            type: string
            title: Document type
            description: The type of documents.
            pattern: ^[0-9A-Z_]+$
            minLength: 1
            maxLength: 255
            enum:
                - SOCIAL_SECURITY_NUMBER
                - EMPLOYMENT_IDENTIFICATION_NUMBER
                - TAX_IDENTIFICATION_NUMBER
                - PASSPORT_NUMBER
                - PENSION_FUND_ID
                - MEDICAL_INSURANCE_ID
                - CNPJ
                - CPF
                - PAN
        business_document:
            title: Business document
            description: The documents associated with the business.
            allOf:
                - $ref: '#/components/schemas/document'
                - properties:
                    type:
                        description: The actual type of the document.
                        $ref: '#/components/schemas/business_document_type'
        business_entity:
            title: Business_entity
            description: The business entity of the account.
            allOf:
                - description: Common business information section.
                  $ref: '#/components/schemas/business'
                - description: Additional business information section.
                  properties:
                    beneficial_owners:
                        description: List of beneficial owners part of the entity. They can be either a Person or a business entity.
                        $ref: '#/components/schemas/beneficial_owners'
                    office_bearers:
                        description: List of Directors present as part of the business entity.
                        type: array
                        items:
                            $ref: '#/components/schemas/office_bearer'
                        maxItems: 5
                    annual_sales_volume_range:
                        description: The range for the total annual sales volume of the business.
                        $ref: '#/components/schemas/currency_range'
                    average_monthly_volume_range:
                        description: The range for the average monthly volume of the business.
                        $ref: '#/components/schemas/currency_range'
                    purpose_code:
                        description: The account's purpose code.
                        items:
                            $ref: '#/components/schemas/purpose_code_enum'
                    business_description:
                        type: string
                        description: The business goals description. For example, a mission statement.
                        minLength: 1
                        maxLength: 256
        account:
            title: Account
            type: object
            description: Common account object to hold the account related details of the customer.
            properties:
                individual_owners:
                    description: List of owners in the account. There should be only one primary account owner which is mentioned in their role_type.
                    type: array
                    items:
                        $ref: '#/components/schemas/individual_owner'
                    maxItems: 2
                business_entity:
                    description: Business entity of the account.
                    type: object
                    $ref: '#/components/schemas/business_entity'
        partner_config_override:
            type: object
            title: Partner Configuration Override
            description: The preference to customize the web experience of the customer by overriding that is set at the Partner's Account.
            additionalProperties: false
            properties:
                partner_logo_url:
                    type: string
                    format: uri
                    description: The partner logo URL to display in the customer's onboarding flow.
                    minLength: 1
                    maxLength: 127
                return_url:
                    type: string
                    format: uri
                    description: The URL to which to redirect the customer upon completion of the onboarding process.
                    minLength: 1
                    maxLength: 127
                return_url_description:
                    type: string
                    description: The description of the return URL.
                    minLength: 1
                    maxLength: 127
                    pattern: ^.+$
                action_renewal_url:
                    type: string
                    format: uri
                    description: If `renew_action_url` expires, redirect the customer to this URL.
                    minLength: 1
                    maxLength: 127
                show_add_credit_card:
                    type: boolean
                    description: Indicates whether to show an add credit card page.
        mandate:
            type: object
            title: Mandate
            description: SellerΓÇÖs consent to operate on this financial instrument.
            additionalProperties: false
            properties:
                accepted:
                    type: boolean
                    description: Whether mandate was accepted or not.
            required:
                - accepted
        bank:
            type: object
            title: Bank Account
            additionalProperties: false
            description: The bank account information.
            properties:
                nick_name:
                    type: string
                    description: The user-provided short name for the user's bank account.
                    minLength: 1
                    maxLength: 50
                    pattern: ^[0-9A-Za-z_-]+$
                account_number:
                    type: string
                    description: The bank account number.
                    pattern: \d+
                    minLength: 1
                    maxLength: 50
                account_type:
                    type: string
                    description: The type of bank account.
                    minLength: 1
                    maxLength: 50
                    pattern: ^[0-9A-Z_]+$
                    enum:
                        - CHECKING
                        - SAVINGS
                currency_code:
                    description: The primary currency code of the bank account.
                    $ref: '#/components/schemas/currency_code'
                identifiers:
                    type: array
                    description: An array of instrument institute attributes. Used with the account number to uniquely identify the instrument. Value is:<ul><li>For banks with IBAN information, the IBAN number.</li><li>For banks with BBAN information, the BBAN number.</li><li>For banks with both IBAN and BBAN information, the IBAN number.</li></ul>
                    items:
                        $ref: '#/components/schemas/identifier'
                    maxItems: 20
                branch_location:
                    description: The branch location, if applicable.
                    $ref: '#/components/schemas/address_portable-2'
                mandate:
                    description: Mandate for this bank account.
                    $ref: '#/components/schemas/mandate'
            required:
                - account_number
                - account_type
        financial_instruments:
            type: object
            title: Financial instrument.
            description: Financial instruments attached to this account.
            additionalProperties: false
            properties:
                banks:
                    type: array
                    description: An array of banks attached to this managed account.
                    items:
                        description: The bank account information.
                        $ref: '#/components/schemas/bank'
                    maxItems: 5
        classic_api_integration:
            type: object
            title: CLASSIC API integration
            description: The integration details for PayPal CLASSIC endpoints.
            additionalProperties: false
        rest_api_integration:
            type: object
            title: REST API Integration
            description: The integration details for PayPal REST endpoints.
            additionalProperties: false
            properties:
                integration_method:
                    type: string
                    description: The REST-credential integration method.
                    default: PAYPAL
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_-]+$
                    enum:
                        - BRAINTREE
                        - PAYPAL
                integration_type:
                    type: string
                    title: Integration Type
                    description: The type of REST-endpoint integration. To integrate with Braintree v.zero for PayPal REST endpoints, specify `third_party_details`.
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_-]+$
                    enum:
                        - FIRST_PARTY
                        - THIRD_PARTY
                first_party_details:
                    type: object
                    title: REST First-Party Details
                    description: The integration details for PayPal first party REST endpoints.
                    additionalProperties: false
                    properties:
                        features:
                            type: array
                            description: An array of features that partner can access, or use, in PayPal on behalf of the seller. The seller grants permission for these features to the partner.
                            items:
                                $ref: '#/components/schemas/rest_endpoint_features_enum'
                        seller_nonce:
                            type: string
                            description: S256 - The code verifier must be high-entropy cryptographic random string with a byte length of 43-128 range.
                            minLength: 44
                            maxLength: 128
                            pattern: ^[a-zA-Z0-9-_:]+$
                    required:
                        - features
                        - seller_nonce
                third_party_details:
                    type: object
                    title: REST Third-Party Details
                    description: The integration details for PayPal REST endpoints.
                    additionalProperties: false
                    properties:
                        features:
                            type: array
                            description: An array of features that partner can access, or use, in PayPal on behalf of the seller. The seller grants permission for these features to the partner.
                            items:
                                $ref: '#/components/schemas/rest_endpoint_features_enum'
                            maxItems: 20
                    required:
                        - features
        operation:
            type: object
            title: Operation
            description: The required operation to share data.
            additionalProperties: false
            properties:
                operation:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_-]+$
                    description: The operation to enable for the customer. To enable the collection of the API permissions that you require to integrate with the customer, specify `API_INTEGRATION`. `BANK_ADDITION` is supported only for the US.
                    enum:
                        - API_INTEGRATION
                        - BANK_ADDITION
                        - BILLING_AGREEMENT
                        - CONTEXTUAL_MARKETING_CONSENT
                        - SALESFORCE_REFERRAL
                api_integration_preference:
                    $ref: '#/components/schemas/integration_details'
                billing_agreement:
                    $ref: '#/components/schemas/billing_agreement'
        dependent_process: {}
        transfer_method:
            type: object
            title: Requested transfer method and currency for a country
            additionalProperties: false
            description: Requested transfer method and currency for a country.
            properties:
                transfer_method_type:
                    type: string
                    description: Transfer Method type.
                    pattern: ^[0-9A-Z_-]+$
                    minLength: 1
                    maxLength: 50
                    enum:
                        - BANK_ACCOUNT
                        - PAYPAL
                        - VENMO
                        - WIRE_ACCOUNT
                currencies:
                    type: array
                    description: Requested Currencies for a Transfer Method.
                    minItems: 1
                    maxItems: 50
                    items:
                        $ref: '#/components/schemas/currency_code-2'
        country_transfer_method_currency_selection:
            type: object
            title: Requested country, transfer method and currency
            additionalProperties: false
            description: Requested country, transfer method and currency.
            properties:
                country:
                    description: Country.
                    $ref: '#/components/schemas/country_code'
                transfer_methods:
                    type: array
                    description: Requested transfer method and currency for a country.
                    minItems: 1
                    maxItems: 50
                    items:
                        $ref: '#/components/schemas/transfer_method'
        payout_attributes:
            type: object
            title: Payout Attributes
            additionalProperties: false
            description: Payout specific attributes.
            properties:
                marketplace:
                    type: boolean
                    description: If `true`, specifies that the merchant or platform is offering goods or services on behalf of 3rd party sellers.
                kyc_required:
                    type: boolean
                    description: If `true`, specifies that the Kyc is required for the merchant.
                country_transfer_method_currency_selection:
                    type: array
                    description: Requested country, transfer method and currency.
                    minItems: 1
                    maxItems: 50
                    items:
                        $ref: '#/components/schemas/country_transfer_method_currency_selection'
        merchant-info:
            type: object
            title: Merchant Information
            description: The merchant business information that appears on the invoice.
            properties:
                email:
                    type: string
                    format: email
                    description: The merchant email address. This email must be listed in the merchant's PayPal profile.<br/>If you omit this value, notifications are sent from and to the primary email address but do not appear on the invoice.
                    maxLength: 260
                business_name:
                    type: string
                    description: The merchant's business name.
                    maxLength: 100
                first_name:
                    type: string
                    description: The merchant's first name.
                    maxLength: 256
                last_name:
                    type: string
                    description: The merchant's last name.
                    maxLength: 256
                address:
                    $ref: '#/components/schemas/address'
                    description: The merchant's address.
                phone:
                    $ref: '#/components/schemas/phone'
                    description: The merchant's phone number.
                fax:
                    $ref: '#/components/schemas/phone'
                    description: The merchant's fax number.
                website:
                    type: string
                    format: uri
                    description: The merchant's website.
                    maxLength: 2048
                tax_id:
                    type: string
                    description: The merchant's tax ID.
                    maxLength: 100
                additional_info:
                    type: string
                    description: Any additional information, such as business hours.
                    maxLength: 40
        billing-info:
            type: object
            title: Billing Information
            description: The billing information for the invoice recipient.
            properties:
                email:
                    type: string
                    format: email
                    description: The invoice recipient email address. If you omit this value, the invoice is payable and a notification email is not sent.
                    maxLength: 260
                phone:
                    $ref: '#/components/schemas/phone'
                    description: The invoice recipient's phone number.
                first_name:
                    type: string
                    description: The invoice recipient's first name.
                    maxLength: 30
                last_name:
                    type: string
                    description: The invoice recipient's last name.
                    maxLength: 30
                business_name:
                    type: string
                    description: The invoice recipient's business name.
                    maxLength: 100
                address:
                    $ref: '#/components/schemas/address'
                    description: The invoice recipient's billing address.
                language:
                    type: string
                    description: The language in which the invoice recipient's email appears. Used only when the recipient does not have a PayPal account.<br/>If you omit the language and the recipient does not have a PayPal account, the email is sent in the language of the merchant's PayPal account.
                    enum:
                        - da_DK
                        - de_DE
                        - en_AU
                        - en_GB
                        - en_US
                        - es_ES
                        - es_XC
                        - fr_CA
                        - fr_FR
                        - fr_XC
                        - he_IL
                        - id_ID
                        - it_IT
                        - ja_JP
                        - nl_NL
                        - no_NO
                        - pl_PL
                        - pt_BR
                        - pt_PT
                        - ru_RU
                        - sv_SE
                        - th_TH
                        - tr_TR
                        - zh_CN
                        - zh_HK
                        - zh_TW
                        - zh_XC
                additional_info:
                    type: string
                    description: Any additional information about the recipient.
                    maxLength: 40
        shipping-info:
            type: object
            title: Shipping Information
            description: The shipping information for the invoice recipient.
            properties:
                first_name:
                    type: string
                    description: The first name of the recipient at the shipping address.
                    maxLength: 256
                last_name:
                    type: string
                    description: The last name of the recipient at the shipping address.
                    maxLength: 256
                business_name:
                    type: string
                    description: The business name of the recipient at the shipping address.
                    maxLength: 480
                address:
                    $ref: '#/components/schemas/address'
                    description: The shipping address.
        participant:
            type: object
            title: Participant
            description: The participant information.
            properties:
                email:
                    type: string
                    format: email
                    description: The email address of the person who receives a copy of the invoice.
                    maxLength: 260
            required:
                - email
        tax:
            type: object
            title: Tax
            description: The tax information. Includes the tax name and tax rate of invoice items. The tax amount is added to the item total.
            properties:
                name:
                    type: string
                    description: The name of the tax applied on the invoice items.
                    maxLength: 100
                percent:
                    $ref: '#/components/schemas/percentage'
                    description: The tax rate. Value is from `0` to `100`. Supports up to five decimal places.
                amount:
                    $ref: '#/components/schemas/money'
                    description: The calculated tax amount. The tax amount is added to the item total.
                    readOnly: true
            required:
                - name
                - percent
        discount:
            type: object
            title: Discount
            description: The discount as a percent or amount at invoice level. The invoice discount amount is subtracted from the item total.
            properties:
                percent:
                    $ref: '#/components/schemas/percentage'
                    description: The discount as a percentage value. Value is from `0` to `100`. Supports up to five decimal places.
                amount:
                    $ref: '#/components/schemas/money'
                    description: The invoice level discount amount. Value is from `0` to `1000000`. Supports up to two decimal places.
        invoice-item:
            type: object
            title: Invoice Item
            description: The invoice line item information.
            properties:
                name:
                    type: string
                    description: The item name.
                    maxLength: 200
                description:
                    type: string
                    description: The item description.
                    maxLength: 1000
                quantity:
                    type: number
                    description: The item quantity. Value is from `-10000` to `10000`. Supports up to five decimal places.
                unit_price:
                    $ref: '#/components/schemas/currency'
                    description: The currency and amount of the item unit price. Value is from `-1000000` to `1000000`. Supports up to two decimal places.
                tax:
                    $ref: '#/components/schemas/tax'
                date:
                    type: string
                    description: The date when the item or service was provided, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *yyyy*-*MM*-*dd* *z*.
                    format: date
                discount:
                    $ref: '#/components/schemas/discount'
                    description: The item discount, as a percent or an amount value.
                unit_of_measure:
                    type: string
                    description: The unit of measure for the invoiced item. For `AMOUNT` the `unit_price` and `quantity` are not shown on the invoice.<blockquote><strong>Note:</strong> If your specify different `unit_of_measure` values for the same invoice, the invoice uses the first value.</blockquote>
                    enum:
                        - QUANTITY
                        - HOURS
                        - AMOUNT
            required:
                - name
                - quantity
                - unit_price
        payment-term:
            type: object
            title: Payment Term
            description: The payment term of the invoice. If you specify `term_type`, you cannot specify `due_date`, and vice versa.
            properties:
                term_type:
                    type: string
                    description: The term when the invoice payment is due.
                    enum:
                        - DUE_ON_RECEIPT
                        - DUE_ON_DATE_SPECIFIED
                        - NET_10
                        - NET_15
                        - NET_30
                        - NET_45
                        - NET_60
                        - NET_90
                        - NO_DUE_DATE
                due_date:
                    type: string
                    format: date
                    description: The date when the invoice payment is due, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *yyyy*-*MM*-*dd* *z*.
        shipping-cost:
            type: object
            title: Shipping Cost
            description: The shipping cost, as a percent or amount value.
            properties:
                amount:
                    $ref: '#/components/schemas/currency'
                    description: The currency and amount of the shipping charge. Value is from `0` to `1000000`. Supports up to two decimal places.
                tax:
                    $ref: '#/components/schemas/tax'
                    description: The tax percentage on the shipping amount.
        custom-amount:
            type: object
            title: Custom Amount
            description: The custom amount to apply to an invoice. If you include a label, you must include a custom amount.
            properties:
                label:
                    type: string
                    description: The custom amount label.
                    maxLength: 50
                amount:
                    $ref: '#/components/schemas/currency'
                    description: The currency and amount of the custom value. Value is from `-1000000` to `1000000`. Supports up to two decimal places.
        payment-detail:
            type: object
            title: Payment Detail
            description: The payment details.
            properties:
                type:
                    type: string
                    description: The payment type in an invoicing flow. The [record refund](/docs/api/invoicing/v1/#invoices_record-refund) method supports the `EXTERNAL` refund type. The `PAYPAL` refund type is supported for backward compatibility.
                    enum:
                        - PAYPAL
                        - EXTERNAL
                    readOnly: true
                transaction_id:
                    type: string
                    description: The ID for a PayPal payment transaction. Required for the `PAYPAL` payment type.
                    readOnly: true
                transaction_type:
                    type: string
                    description: The transaction type.
                    enum:
                        - SALE
                        - AUTHORIZATION
                        - CAPTURE
                    readOnly: true
                date:
                    type: string
                    description: The date when the invoice was paid, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    format: date-time
                method:
                    type: string
                    description: The payment mode or method.
                    enum:
                        - BANK_TRANSFER
                        - CASH
                        - CHECK
                        - CREDIT_CARD
                        - DEBIT_CARD
                        - PAYPAL
                        - WIRE_TRANSFER
                        - OTHER
                note:
                    type: string
                    description: A note associated with the payment.
                amount:
                    $ref: '#/components/schemas/currency'
                    description: The payment amount to record against the invoice. If you omit this parameter, the total invoice amount is marked as paid. This amount cannot exceed the amount due.
            required:
                - method
        refund-detail:
            type: object
            title: Refund Detail
            description: The invoicing refund details.
            properties:
                type:
                    type: string
                    description: The PayPal refund type. Indicates whether the refund was paid through PayPal or externally in the invoicing flow. The [record refund](/docs/api/invoicing/v1/#invoices_record-refund) method supports the `EXTERNAL` refund type. The `PAYPAL` refund type is supported for backward compatibility.
                    enum:
                        - PAYPAL
                        - EXTERNAL
                    readOnly: true
                transaction_id:
                    type: string
                    description: The ID of the PayPal refund transaction. Required for the `PAYPAL` refund type.
                    readOnly: true
                date:
                    type: string
                    description: The date when the invoice was refunded, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, `2014-02-27 PST`.
                    format: date-time
                note:
                    type: string
                    description: A note associated with the refund.
                amount:
                    $ref: '#/components/schemas/currency'
                    description: The currency and amount to record as refunded. If you omit the amount, the total invoice paid amount is recorded as refunded.
        payment-summary:
            type: object
            title: Payment Summary
            description: The payment and refund summary.
            properties:
                paypal:
                    $ref: '#/components/schemas/currency'
                    description: The currency and amount of the total paid or refunded through PayPal.
                    readOnly: true
                other:
                    $ref: '#/components/schemas/currency'
                    description: The currency and amount of the total paid or refunded through other sources.
                    readOnly: true
        file-attachment:
            type: object
            title: File Attachment
            description: The file that is attached to an invoice or template.
            properties:
                name:
                    type: string
                    description: The name of the attached file.
                url:
                    type: string
                    format: uri
                    description: The URL of the attached file. Use this URL to download the file.
        invoice:
            type: object
            title: Invoice
            description: The invoice details which includes all information of the invoice like items, billing information.
            required:
                - detail
            properties:
                id:
                    type: string
                    description: The ID of the invoice.
                    readOnly: true
                    maxLength: 30
                parent_id:
                    type: string
                    description: The parent ID to an invoice that defines the group invoice to which the invoice is related.
                    readOnly: true
                    maxLength: 30
                status:
                    $ref: '#/components/schemas/invoice_status'
                    readOnly: true
                detail:
                    $ref: '#/components/schemas/invoice_detail'
                    description: The details of the invoice. Includes the invoice number, date, payment terms, and audit metadata.
                invoicer:
                    $ref: '#/components/schemas/invoicer_info'
                    description: The invoicer information. Includes the business name, email, address, phone, fax, tax ID, additional notes, and logo URL.
                primary_recipients:
                    type: array
                    items:
                        $ref: '#/components/schemas/recipient_info'
                    maxItems: 100
                    description: The billing and shipping information. Includes name, email, address, phone and language.
                additional_recipients:
                    type: array
                    maxItems: 100
                    description: 'An array of one or more CC: emails to which notifications are sent. If you omit this parameter, a notification is sent to all CC: email addresses that are part of the invoice.<blockquote><strong>Note:</strong> Valid values are email addresses in the `additional_recipients` value associated with the invoice.</blockquote>'
                    items:
                        $ref: '#/components/schemas/email_address'
                items:
                    type: array
                    description: An array of invoice line item information.
                    maxItems: 100
                    items:
                        $ref: '#/components/schemas/item'
                configuration:
                    $ref: '#/components/schemas/configuration'
                    description: The invoice configuration details. Includes partial payment, tip, and tax calculated after discount.
                amount:
                    $ref: '#/components/schemas/amount_summary_detail'
                    description: The invoice amount summary of item total, discount, tax total and shipping..
                due_amount:
                    description: The due amount, which is the balance amount outstanding after payments.
                    $ref: '#/components/schemas/money'
                    readOnly: true
                gratuity:
                    description: The amount paid by the payer as gratuity to the invoicer.
                    $ref: '#/components/schemas/money'
                    readOnly: true
                payments:
                    $ref: '#/components/schemas/payments'
                    description: List of payments registered against the invoice..
                refunds:
                    $ref: '#/components/schemas/refunds'
                    description: List of refunds against this invoice. The invoicing refund details includes refund type, date, amount, and method.
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
        invoices:
            type: object
            title: Invoices
            minItems: 1
            description: An array of merchant invoices. Includes the total invoices count and [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links) for navigation.
            properties:
                total_pages:
                    type: integer
                    description: The total number of pages that are available for the search criteria. <blockquote><strong>Note:</strong> Clients MUST NOT assume that the value of total_pages is constant. The value MAY change from one request to the next</blockquote>
                    readOnly: true
                total_items:
                    type: integer
                    description: The total number of invoices that match the search criteria.<blockquote><strong>Note:</strong> Clients MUST NOT assume that the value of <code>total_items</code> is constant. The value MAY change from one request to the next.</blockquote>
                    readOnly: true
                items:
                    type: array
                    description: The list of invoices that match the search criteria.
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/invoice'
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
        search:
            type: object
            title: Search
            description: The invoice search parameters.
            properties:
                email:
                    type: string
                    description: The initial letters of the email address.
                recipient_first_name:
                    type: string
                    description: The initial letters of the recipient's first name.
                recipient_last_name:
                    type: string
                    description: The initial letters of the recipient's last name.
                recipient_business_name:
                    type: string
                    description: The initial letters of the recipient's business name.
                number:
                    type: string
                    description: Any part of the invoice number.
                status:
                    type: string
                    description: 'The invoice status. To search by status, specify this value as an array. For example, `"status": ["REFUNDED"]`. The status indicates the phase of the invoice in its lifecycle:<table><thead><tr><th>Status</th><th>Occurs when</th></tr></thead><tbody><tr><td><code>CANCELLED</code></td><td><p>A merchant or customer <a href="/docs/api/invoicing/v1/#invoices_cancel">cancels a sent invoice</a>.</p></td></tr><tr><td><code>DRAFT</code></td><td><p>A merchant <a href="/docs/api/invoicing/v1/#invoices_create">creates a draft invoice</a>.</p><blockquote><strong>Note:</strong> A customer cannot pay an invoice until a merchant sends it.</blockquote></td></tr><tr><td><code>MARKED_AS_PAID</code></td><td><p>A merchant <a href="/docs/api/invoicing/v1/#invoices_record-payment">marks an invoice as paid</a> after he or she receives a check or cash payment for the invoice.</p></td></tr><tr><td><code>MARKED_AS_REFUNDED</code></td><td><p>A merchant <a href="/docs/api/invoicing/v1/#invoices_record-refund">marks an invoice as refunded</a>.</p><blockquote><strong>Note:</strong> A merchant can only mark a <a href="/docs/api/invoicing/v1/#invoices_record-payment">marked-as-paid invoice</a> as refunded.</blockquote></td></tr><tr><td><code>PAID</code></td><td><p>A customer fully pays an invoice. It is marked as paid through one or both of these methods:</p><ul><li>A merchant <a href="/docs/api/invoicing/v1/#invoices_record-payment">marks an invoice as paid</a> after he or she receives a check or cash payment from the customer for the invoice.</li><li>A customer makes an online payment for the invoice.</li></ul></td></tr><tr><td><code>PARTIALLY_PAID</code></td><td><p>A merchant or customer fully pays an invoice through one or both of these methods:</p><ul><li>A merchant <a href="/docs/api/invoicing/v1/#invoices_record-payment">marks an invoice as paid</a> after he or she receives a check or cash payment from the customer for the invoice.</li><li>A customer makes an online payment for the invoice.</li></ul></td></tr><tr><td><code>PARTIALLY_REFUNDED</code></td><td><p>A merchant partially refunds an invoice through one or both of these methods:</p><ul><li>A merchant <a href="/docs/api/invoicing/v1/#invoices_record-payment">marks an invoice as refunded</a>. To complete this action, the merchant must previously <a href="/docs/api/invoicing/v1/#invoices_record-payment">mark the invoice as paid</a>.</li><li>A merchant makes an online refund for an online invoice payment.</li></ul></td></tr><tr><td><code>PAYMENT_PENDING</code></td><td><p>A customer pays an invoice but the payment is pending for one of these reasons:</p><ul><li>The payment is an uncleared eCheck.</li><li>The payment is in an accept or deny state upon which the merchant must act.</li><li>PayPal risk is reviewing the payment.</li></ul><blockquote><strong>Note:</strong> Most payments never go into a payment-pending state.</blockquote></td></tr><tr><td><code>REFUNDED</code></td><td><p>A merchant fully refunds an invoice through one or both of these methods:</p><ul><li>A merchant <a href="/docs/api/invoicing/v1/#invoices_record-payment">marks an invoice as refunded</a>. To complete this action, the merchant must previously <a href="/docs/api/invoicing/v1/#invoices_record-payment">mark the invoice as paid</a>.</li><li>A merchant makes an online refund for an online invoice payment.</li></ul></td></tr><tr><td><code>SCHEDULED</code></td><td><p>A merchant <a href="/docs/api/invoicing/v1/#invoices_schedule">schedules an invoice</a> to be emailed by PayPal on a specified date.</p></td></tr><tr><td><code>SENT</code></td><td><p>A merchant <a href="/docs/api/invoicing/v1/#invoices_send">sends an invoice</a> to the customer.</p><p>After the merchant sends the invoice:</p><ul><li>PayPal emails the invoice to the customer.</li><li>A <strong>Payment</strong> button appears on the invoice. The customer can now pay the invoice.</li><li>In a web app, the invoice appears as <code>Unpaid (sent)</code>.</li></ul></td></tr><tr><td><code>UNPAID</code></td><td><p>A merchant <a href="/docs/api/invoicing/v1/#invoices_send">sends an invoice</a> and sets the <code>notify_merchant</code> and <code>notify_customer</code> query parameters to <code>false</code> to suppress the PayPal email notification. Then, the merchant manually sends the invoice link in his or her own email.</p></td></tr></tbody></table>'
                    enum:
                        - DRAFT
                        - SENT
                        - SCHEDULED
                        - PAID
                        - MARKED_AS_PAID
                        - CANCELLED
                        - REFUNDED
                        - PARTIALLY_REFUNDED
                        - MARKED_AS_REFUNDED
                lower_total_amount:
                    type: string
                    description: The lower limit of the total amount.
                upper_total_amount:
                    type: string
                    description: The upper limit of the total amount.
                start_invoice_date:
                    type: string
                    format: date
                    description: The start date for the invoice, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *yyyy*-*MM*-*dd* *z*.
                end_invoice_date:
                    type: string
                    format: date
                    description: The end date for the invoice, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *yyyy*-*MM*-*dd* *z*.
                start_due_date:
                    type: string
                    format: date
                    description: The start due date for the invoice, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *yyyy*-*MM*-*dd* *z*.
                end_due_date:
                    type: string
                    format: date
                    description: The end due date for the invoice, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *yyyy*-*MM*-*dd* *z*.
                start_payment_date:
                    type: string
                    format: date
                    description: The start payment date for the invoice, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *yyyy*-*MM*-*dd* *z*.
                end_payment_date:
                    type: string
                    format: date
                    description: The end payment date for the invoice, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *yyyy*-*MM*-*dd* *z*.
                start_creation_date:
                    type: string
                    format: date
                    description: The start creation date for the invoice, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *yyyy*-*MM*-*dd* *z*.
                end_creation_date:
                    type: string
                    format: date
                    description: The end creation date for the invoice, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *yyyy*-*MM*-*dd* *z*.
                page:
                    type: number
                    description: The zero-relative start index of the entire list of merchant invoices to return in the response. So, a combination of `page=0` and `page_size=20` returns the first 20 invoices. A combination of `page=20` and `page_size=20` returns the next 20 invoices.
                page_size:
                    type: number
                    description: The page size for the search results.
                total_count_required:
                    type: boolean
                    description: Indicates whether the response shows the total count.
                    default: false
                archived:
                    type: boolean
                    description: Indicates whether to list merchant-archived invoices in the response. If `true`, response lists only merchant-archived invoices. If `false`, response lists only unarchived invoices. If `null`, response lists all invoices.
        notification:
            type: object
            title: Notification
            description: The email or SMS notification to send to the invoicer or payer on sending an invoice.
            properties:
                subject:
                    type: string
                    description: The subject of the email that is sent as a notification to the recipient.
                    maxLength: 4000
                note:
                    type: string
                    description: A note to the payer.
                    maxLength: 4000
                send_to_invoicer:
                    type: boolean
                    description: Indicates whether to send a copy of the email to the merchant.
                    default: false
                send_to_recipient:
                    type: boolean
                    description: Indicates whether to send a copy of the email to the recipient.
                    default: true
                additional_recipients:
                    type: array
                    description: 'An array of one or more CC: emails to which notifications are sent. If you omit this parameter, a notification is sent to all CC: email addresses that are part of the invoice.<blockquote><strong>Note:</strong> Valid values are email addresses in the `additional_recipients` value associated with the invoice.</blockquote>'
                    maxItems: 100
                    items:
                        $ref: '#/components/schemas/email_address'
        cancel-notification:
            type: object
            title: Cancel Notification
            description: Cancels an email or SMS notification.
            properties:
                subject:
                    type: string
                    description: The subject of the notification. If left blank we include a generic subject.
                note:
                    type: string
                    description: A note to the payer.
                send_to_merchant:
                    type: boolean
                    description: Indicates whether to send the notification to the merchant.
                    default: true
                send_to_payer:
                    type: boolean
                    description: Indicates whether to send the notification to the payer.
                    default: true
                cc_emails:
                    type: array
                    description: 'An array of one or more CC: emails to which to send notification emails. If you omit this parameter, the API sends notification emails to all CC: email addresses that are part of the invoice.<blockquote><strong>Note:</strong> Additional email addresses are not supported.</blockquote>'
                    maxItems: 100
                    items:
                        type: string
                        description: 'A CC: email to which to send a notification email.'
                        minLength: 3
                        maxLength: 254
                        pattern: ^.+@[^"\-].+$
        qr_code:
            type: object
            title: QR Code
            description: The base64-encoded image of the `image/png` type.
            properties:
                image:
                    type: string
                    description: The base64-encoded image of the `image/png` type.
        invoice_number:
            type: object
            title: Invoice Number
            description: The invoice number.
            properties:
                invoice_number:
                    type: string
                    description: The invoice number. If you omit this value, the default is the auto-incremented number from the last number.
                    maxLength: 25
                    readOnly: true
        template-data:
            type: object
            title: Template Data
            description: The template data.
            properties:
                merchant_info:
                    $ref: '#/components/schemas/merchant-info'
                billing_info:
                    type: array
                    description: The billing information of the invoice recipient.<blockquote><strong>Note:</strong> This value is an array with only one element.</blockquote>
                    minItems: 1
                    maxItems: 1
                    items:
                        $ref: '#/components/schemas/billing-info'
                shipping_info:
                    $ref: '#/components/schemas/shipping-info'
                cc_info:
                    type: array
                    description: An array of email addresses to which PayPal sends a copy of the invoice.
                    items:
                        $ref: '#/components/schemas/email'
                        description: The participant's email address.
                items:
                    type: array
                    description: An array of invoice line item information. The maximum items for an invoice is `100`.
                    maxItems: 100
                    items:
                        $ref: '#/components/schemas/invoice-item'
                payment_term:
                    $ref: '#/components/schemas/payment-term'
                reference:
                    type: string
                    description: The reference data, such as a PO number.
                    maxLength: 60
                discount:
                    $ref: '#/components/schemas/discount'
                    description: The invoice level discount, as a percent or an amount value.
                shipping_cost:
                    $ref: '#/components/schemas/shipping-cost'
                    description: The shipping cost, as a percent or an amount value.
                custom:
                    $ref: '#/components/schemas/custom-amount'
                allow_partial_payment:
                    type: boolean
                    description: Indicates whether the invoice allows a partial payment. If `false`, the invoice must be paid in full. If `true`, the invoice allows partial payments.<blockquote><strong>Note:</strong> This feature is not available for merchants in `India`, `Brazil`, or `Israel`.</blockquote>
                    default: false
                minimum_amount_due:
                    $ref: '#/components/schemas/currency'
                    description: The currency and amount of the minimum allowed for a partial payment. Valid only when `allow_partial_payment` is `true`.
                tax_calculated_after_discount:
                    type: boolean
                    description: Indicates whether the tax is calculated before or after a discount. If `false`, the tax is calculated before a discount. If `true`, the tax is calculated after a discount.
                    default: false
                tax_inclusive:
                    type: boolean
                    description: Indicates whether the unit price includes tax.
                    default: false
                terms:
                    type: string
                    description: The general terms of the invoice.
                    maxLength: 4000
                note:
                    type: string
                    description: A note to the invoice recipient. This note also appears on the invoice notification email.
                    maxLength: 4000
                merchant_memo:
                    type: string
                    description: A private bookkeeping memo for the merchant.
                    maxLength: 150
                logo_url:
                    type: string
                    format: uri
                    description: The full URL to an external logo image. The logo image must not be larger than 250 pixels wide by 90 pixels high.
                    maxLength: 4000
                total_amount:
                    $ref: '#/components/schemas/currency'
                    description: The currency and amount of the invoice total.
                    readOnly: true
                attachments:
                    type: array
                    description: An array of PayPal file IDs for the files that are attached to an invoice. The maximum number of files is `5`.
                    items:
                        $ref: '#/components/schemas/file-attachment'
            required:
                - merchant_info
        template-settings-metadata:
            type: object
            title: Template Settings Metadata
            description: The template settings metadata.
            properties:
                hidden:
                    type: boolean
                    description: Indicates whether to show or hide this field.
                    default: false
        template-settings:
            type: object
            title: Template Settings
            description: The template settings.
            properties:
                field_name:
                    type: string
                    description: The field name in `template_data` for which to map corresponding display preferences.
                    enum:
                        - items.quantity
                        - items.description
                        - items.date
                        - items.discount
                        - items.tax
                        - discount
                        - shipping
                        - custom
                display_preference:
                    $ref: '#/components/schemas/template-settings-metadata'
        template:
            type: object
            title: Template
            description: The template with invoice details to load with all captured fields.
            properties:
                id:
                    type: string
                    description: The ID of the template.
                    readOnly: true
                    maxLength: 30
                name:
                    type: string
                    description: The template name.<blockquote><strong>Note:</strong> The template name must be unique.</blockquote>
                    maxLength: 500
                    minLength: 1
                default_template:
                    type: boolean
                    description: Indicates whether this template is the default template. A invoicer can have one default template.
                template_info:
                    $ref: '#/components/schemas/template_info'
                    description: The template details. Includes invoicer business information, invoice recipients, items, and configuration.
                settings:
                    description: The template settings. Describes which fields to show or hide when you create an invoice.
                    $ref: '#/components/schemas/template_settings'
                unit_of_measure:
                    $ref: '#/components/schemas/unit_of_measure'
                    description: The unit of measure for the template. Value is quantity, hours, or amount.
                standard_template:
                    type: boolean
                    description: Indicates whether this template is a invoicer-created custom template. The system generates non-custom templates.
                    readOnly: true
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
        templates:
            type: object
            title: Templates
            minItems: 1
            description: An array of merchant-created templates with associated details that include the emails, addresses, and phone numbers from the user's PayPal profile.
            properties:
                addresses:
                    type: array
                    description: An array of addresses in the user's PayPal profile.
                    items:
                        $ref: '#/components/schemas/address_portable'
                    readOnly: true
                emails:
                    description: An array of emails in the user's PayPal profile.
                    $ref: '#/components/schemas/email_address'
                    readOnly: true
                phones:
                    type: array
                    description: An array of phone numbers in the user's PayPal profile.
                    items:
                        $ref: '#/components/schemas/phone_detail'
                templates:
                    type: array
                    description: An array of details for each template. If `fields` is `none`, returns only the template name, ID, and default status.
                    items:
                        $ref: '#/components/schemas/template'
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
        invoice_status:
            type: string
            title: Invoice Status
            description: The status of the invoice.
            enum:
                - DRAFT
                - SENT
                - SCHEDULED
                - PAID
                - MARKED_AS_PAID
                - CANCELLED
                - REFUNDED
                - PARTIALLY_PAID
                - PARTIALLY_REFUNDED
                - MARKED_AS_REFUNDED
                - UNPAID
                - PAYMENT_PENDING
        detail:
            title: Invoice_Detail
            description: The details of the invoice like notes, terms and conditions, memo, attachments.
            required:
                - currency_code
            properties:
                reference:
                    type: string
                    description: The reference data. Includes a post office (PO) number.
                    maxLength: 120
                currency_code:
                    $ref: '#/components/schemas/currency_code'
                    description: The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/) that identifies the currency.
                note:
                    type: string
                    description: A note to the invoice recipient. Also appears on the invoice notification email.
                    maxLength: 4000
                terms_and_conditions:
                    type: string
                    description: The general terms of the invoice. Can include return or cancellation policy and other terms and conditions.
                    maxLength: 4000
                memo:
                    type: string
                    description: A private bookkeeping memo for the user.
                    maxLength: 500
                attachments:
                    type: array
                    description: An array of PayPal IDs for the files that are attached to an invoice.
                    maximum: 5
                    items:
                        $ref: '#/components/schemas/file_reference'
        payment_term_type:
            type: string
            title: Payment Term Type
            description: The payment term. Payment can be due upon receipt, a specified date, or in a set number of days.
            enum:
                - DUE_ON_RECEIPT
                - DUE_ON_DATE_SPECIFIED
                - NET_10
                - NET_15
                - NET_30
                - NET_45
                - NET_60
                - NET_90
                - NO_DUE_DATE
        payment_term:
            type: object
            title: Payment Term
            description: The payment term of the invoice. Payment can be due upon receipt, a specified date, or in a set number of days.
            properties:
                term_type:
                    description: The payment term. Payment can be due upon receipt, a specified date, or in a set number of days.
                    $ref: '#/components/schemas/payment_term_type'
        invoice_payment_term:
            type: object
            title: Invoice Payment Term
            description: The payment term of the invoice. Payment can be due upon receipt, a specified date, or in a set number of days.
            allOf:
                - $ref: '#/components/schemas/payment_term'
                - properties:
                    due_date:
                        $ref: '#/components/schemas/date_no_time'
                        description: The date when the invoice payment is due, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *yyyy*-*MM*-*dd*T*z*.
        template_metadata:
            type: object
            title: Template Metadata
            description: The audit metadata. Captures all template actions on create and update.
            properties:
                create_time:
                    $ref: '#/components/schemas/date_time'
                    description: The date and time when the resource was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                created_by:
                    type: string
                    description: The email address of the account that created the resource.
                    readOnly: true
                last_update_time:
                    $ref: '#/components/schemas/date_time'
                    description: The date and time when the resource was last edited, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                last_updated_by:
                    type: string
                    description: The email address of the account that last edited the resource.
                    readOnly: true
        invoice_creation_flow:
            type: string
            title: Invoice Creation Flow
            description: The frequency at which the invoice is sent:<ul><li>Multiple recipient. Sent to multiple recipients.</li><li>Batch. Sent in a batch.</li><li>Regular single. Sent one time to a single recipient.</li></ul>
            enum:
                - MULTIPLE_RECIPIENTS_GROUP
                - BATCH
                - REGULAR_SINGLE
        invoice_detail:
            type: object
            title: Invoice Detail
            description: The details of the invoice. Includes invoice number, date, payment terms, and audit metadata.
            allOf:
                - $ref: '#/components/schemas/detail'
                - properties:
                    invoice_number:
                        type: string
                        description: The invoice number. Default is the number that is auto-incremented number from the last number.
                        maxLength: 127
                    invoice_date:
                        $ref: '#/components/schemas/date_no_time'
                        description: The invoice date as specificed by the sender, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Only UTC is supported in response. For example, *yyyy*-*MM*-*dd*T*z*.
                    payment_term:
                        $ref: '#/components/schemas/invoice_payment_term'
                        description: The payment due date for the invoice. Value is either but not both <code>term_type</code> or <code>due_date</code>.
                    metadata:
                        $ref: '#/components/schemas/metadata'
                        description: The audit metadata. Captures all invoicing actions on create, send, update, and cancel.
                        readOnly: true
        contact_name_address:
            type: object
            title: Contact Information
            description: The contact information of the user. Includes name and address.
            allOf:
                - $ref: '#/components/schemas/business_name'
                - properties:
                    name:
                        $ref: '#/components/schemas/name'
                        description: The first and Last name of the recipient.
                    address:
                        $ref: '#/components/schemas/address_portable'
                        description: The address of the recipient.
        phone_detail:
            type: object
            title: Phone Detail
            description: The phone details. Includes the phone number and type.
            required:
                - phone_type
            allOf:
                - $ref: '#/components/schemas/phone'
                - properties:
                    phone_type:
                        $ref: '#/components/schemas/phone_type'
        invoicer_info:
            type: object
            title: Invoicer Information
            description: The invoicer business information that appears on the invoice.
            allOf:
                - $ref: '#/components/schemas/contact_name_address'
                - properties:
                    email_address:
                        $ref: '#/components/schemas/email_address'
                        description: The invoicer email address, which must be listed in the user's PayPal profile. If you omit this value, notifications are sent from and to the primary email address but do not appear on the invoice.
                    phones:
                        type: array
                        items:
                            $ref: '#/components/schemas/phone_detail'
                        description: An array of invoicer's phone numbers. The invoicer can choose to hide the phone number on the invoice.
                    website:
                        type: string
                        format: uri
                        description: The invoicer's website.
                        maxLength: 2048
                    tax_id:
                        type: string
                        description: The invoicer's tax ID.
                        maxLength: 100
                    additional_notes:
                        type: string
                        description: Any additional information. Includes business hours.
                        maxLength: 400
                    logo_url:
                        type: string
                        format: uri
                        description: The full URL to an external logo image. The logo image must not be larger than 250 pixels wide by 90 pixels high.
                        maxLength: 2000
        billing_info:
            type: object
            title: Billing Information
            description: The billing information of the invoice recipient. Includes name, address, email, phone, and language.
            allOf:
                - $ref: '#/components/schemas/contact_name_address'
                - properties:
                    email_address:
                        $ref: '#/components/schemas/email_address'
                        description: The invoice recipient email address. If you omit this value, the invoice is payable and a notification email is not sent.
                    phones:
                        type: array
                        items:
                            $ref: '#/components/schemas/phone_detail'
                        description: The invoice recipient's phone numbers. Extension number is not supported.
                    additional_info:
                        type: string
                        description: Any additional information about the recipient.
                        maxLength: 40
                    language:
                        $ref: '#/components/schemas/language'
                        description: The language in which to show the invoice recipient's email message. Used only when the recipient does not have a PayPal account. If you omit the language and the recipient does not have a PayPal account, the email message is sent in the language of the merchant's PayPal account.
        recipient_info:
            type: object
            title: Recipient Information
            description: The billing and shipping information. Includes name, email, address, phone, and language.
            properties:
                billing_info:
                    $ref: '#/components/schemas/billing_info'
                    description: The billing information for the invoice recipient. Includes name, address, email, phone, and language.
                shipping_info:
                    $ref: '#/components/schemas/contact_name_address'
                    description: The recipient's shipping information. Includes the user's contact information, which includes name and address.
        unit_of_measure:
            type: string
            description: The unit of measure for the invoiced item.
            enum:
                - QUANTITY
                - HOURS
                - AMOUNT
        partial_payment:
            type: object
            title: Partial Payment
            description: The partial payment details. Includes the minimum amount that the invoicer expects from the payer.
            properties:
                allow_partial_payment:
                    type: boolean
                    description: Indicates whether the invoice allows a partial payment. If `false`, the invoice must be paid in full. If `true`, the invoice allows partial payments.<blockquote><strong>Note:</strong> This feature is not available for users in `India`, `Brazil`, or `Israel`.</blockquote>
                    default: false
                minimum_amount_due:
                    $ref: '#/components/schemas/money'
                    description: The minimum amount allowed for a partial payment. Valid only when `allow_partial_payment` is `true`.
        template_configuration:
            type: object
            title: Template Configuration
            description: The template configuration details. Includes tax information, tip, and partial payment.
            properties:
                tax_calculated_after_discount:
                    type: boolean
                    description: Indicates whether the tax is calculated before or after a discount. If `false`, the tax is calculated before a discount. If `true`, the tax is calculated after a discount.
                    default: true
                tax_inclusive:
                    type: boolean
                    description: Indicates whether the unit price includes tax.
                    default: false
                allow_tip:
                    type: boolean
                    description: Indicates whether the invoice enables the customer to enter a tip amount during payment. If `true`, the invoice shows a tip amount field so that the customer can enter a tip amount. If `false`, the invoice does not show a tip amount field.<blockquote><strong>Note:</strong> This feature is not available for users in `Hong Kong`, `Taiwan`, `India`, or `Japan`.</blockquote>
                    default: false
                partial_payment:
                    $ref: '#/components/schemas/partial_payment'
                    description: The partial payment details. Includes the minimum amount that the invoicer wants the payer to pay.
        configuration:
            type: object
            title: Configuration
            description: The invoice configuration details. Includes partial payment, tip, and tax calculated after discount.
            allOf:
                - $ref: '#/components/schemas/template_configuration'
                - properties:
                    template_id:
                        type: string
                        description: The template ID. The template determines the layout of the invoice. Includes which fields to show and hide.
                        default: PayPal system template
                        maxLength: 30
        aggregated_discount:
            type: object
            title: Aggregated Discount
            description: The discount. Can be an item- or invoice-level discount, or both. Can be applied as a percent or amount. If you provide both amount and percent, amount takes precedent.
            properties:
                invoice_discount:
                    $ref: '#/components/schemas/discount'
                    description: The discount as a percent or amount at invoice level. The invoice discount amount is subtracted from the item total.
                item_discount:
                    $ref: '#/components/schemas/money'
                    description: The discount as a percent or amount at item level. The item discount amount is subtracted from each item amount.
        shipping_cost:
            type: object
            title: Shipping Cost
            description: The shipping fee for all items. Includes tax on shipping.
            properties:
                amount:
                    $ref: '#/components/schemas/money'
                    description: The shipping amount. Value is from `0` to `1000000`. Supports up to two decimal places.
                tax:
                    $ref: '#/components/schemas/tax'
                    description: The tax associated with the shipping.
        custom_amount:
            type: object
            title: Custom Amount
            description: The custom amount to apply to an invoice. If you include a label, you must include a custom amount.
            required:
                - label
            properties:
                label:
                    type: string
                    description: The label to the custom amount of the invoice.
                    maxLength: 50
                amount:
                    $ref: '#/components/schemas/money'
                    description: The custom amount value. Value is from `-1000000` to `1000000`. Supports up to two decimal places.
        amount_summary_detail:
            type: object
            title: Invoice Amount Summary
            description: The invoice amount summary of item total, discount, tax total, and shipping.
            properties:
                currency_code:
                    $ref: '#/components/schemas/currency_code'
                value:
                    type: string
                    description: The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency Codes](/docs/integration/direct/rest/currency-codes/).
                    maxLength: 32
                    pattern: ^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$
                breakdown:
                    $ref: '#/components/schemas/amount_with_breakdown'
                    description: The breakdown of the amount. Breakdown provides details such as total item amount, total tax amount, custom amount, shipping and discounts, if any.
        payment_type:
            type: string
            title: Payment Type
            description: The payment type. Can be PayPal or an external payment. Includes cash or a check.
            enum:
                - PAYPAL
                - EXTERNAL
        payment_detail:
            type: object
            title: Payment Detail
            description: The payment details of the invoice. Includes payment type, method, date, discount, and transaction type.
            properties:
                type:
                    description: The payment type in an invoicing flow which can be PayPal or an external cash or check payment.
                    $ref: '#/components/schemas/payment_type'
                    readOnly: true
                payment_id:
                    type: string
                    description: The ID for a PayPal payment transaction. Required for the `PAYPAL` payment type.
                    maxLength: 22
                payment_date:
                    $ref: '#/components/schemas/date_no_time'
                    description: The date when the invoice was paid, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *yyyy*-*MM*-*dd* *z*.
                method:
                    description: The payment mode or method through which the invoicer can accept the payment.
                    $ref: '#/components/schemas/payment_method'
                note:
                    type: string
                    description: A note associated with an external cash or check payment.
                    maxLength: 2000
                amount:
                    $ref: '#/components/schemas/money'
                    description: The payment amount to record against the invoice. If you omit this parameter, the total invoice amount is marked as paid. This amount cannot exceed the amount due.
                shipping_info:
                    $ref: '#/components/schemas/contact_name_address'
                    description: The recipient's shipping information. Includes the user's contact information, which includes name and address.
            required:
                - method
        payments:
            type: object
            title: Payments
            description: An array of payments registered against the invoice.
            properties:
                paid_amount:
                    $ref: '#/components/schemas/money'
                    readOnly: true
                    description: The aggregated payment amounts against this invoice.
                transactions:
                    type: array
                    description: An array of payment details for the invoice. The payment details of the invoice like payment type, method, date, discount and transaction type.
                    maxItems: 100
                    items:
                        $ref: '#/components/schemas/payment_detail'
                    readOnly: true
        refund_detail:
            type: object
            title: Refund Detail
            description: The refund details of the invoice. Includes the refund type, date, amount, and method.
            properties:
                type:
                    description: The PayPal refund type. Indicates whether the refund was paid through PayPal or externally in the invoicing flow. The record refund method supports the `EXTERNAL` refund type. The `PAYPAL` refund type is supported for backward compatibility.
                    $ref: '#/components/schemas/payment_type'
                    readOnly: true
                refund_id:
                    type: string
                    description: The ID for a PayPal payment transaction. Required for the `PAYPAL` payment type.
                    maxLength: 22
                    readOnly: true
                refund_date:
                    $ref: '#/components/schemas/date_no_time'
                    description: The date when the invoice was refunded, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, `2014-02-27`.
                amount:
                    $ref: '#/components/schemas/money'
                    description: The amount to record as refunded. If you omit the amount, the total invoice paid amount is recorded as refunded.
                method:
                    description: The payment mode or method through which the invoicer can accept the payments.
                    $ref: '#/components/schemas/payment_method'
            required:
                - method
        refunds:
            type: object
            title: Refunds
            description: The invoicing refund details. Includes the refund type, date, amount, and method.
            properties:
                refund_amount:
                    $ref: '#/components/schemas/money'
                    readOnly: true
                    description: The aggregated refund amounts.
                transactions:
                    type: array
                    description: An array of refund details for the invoice. Includes the refund type, date, amount, and method.
                    maxItems: 100
                    items:
                        $ref: '#/components/schemas/refund_detail'
                    readOnly: true
        invoices.create-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Address line2 length should be less than 300 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - National Number length should be between 1 and 14.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Address line1 length should be less than 300 characters.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - Country code is invalid.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Custom label length should be less than 50 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Given name length should be less than 140 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Language is invalid.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Admin area1 length should be less than 300 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Item quantity length should be 1 and 14.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Surname length should be less than 140 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Attachment reference url length should be between 1 and 2000.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Country code length should be 2 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Currency code length should be 3 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Business name length should be less than 300 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Minimum due amount length should be less than 32 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Attachment id length should be between 1 and 255.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Admin area2 length should be less than 300 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Tax name length should be less than 100.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Website url length should be less than 2048 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Postal code length should be less than 60 characters.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - National Number is not valid.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Memo length should be less than 4000 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Item name length should be less than 200 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - country code length should be between 1 and 3.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Template Id length should be less than 22 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Logo url length should be less than 4000 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Invoice note length should be less than 4000 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Reference field length should be less than 120 characters.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - Due date is invalid.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Terms and Conditions length should be less than 4000 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Email address length should be between 3 and 254.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Additional data length should be less than 4000.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Additional information value length should be less than 40 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Tax id length should be less than 100 characters.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - Invoice date is invalid.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Invoice date is invalid.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Invoice number length should be less than 25 characters.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - Item Date is invalid.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Item description length should be less than 1000 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Shipping Tax name length should be less than 100 characters.
        202-response:
            type: object
            title: Accepted Response
            description: The HTTP `202 Accepted` response.
            properties:
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
        invoices.remind-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - the value of a field is too long.
                            - title: INVALID_ARRAY_MAX_ITEMS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_ARRAY_MAX_ITEMS
                                description:
                                    type: string
                                    enum:
                                        - Only maximum of 100 email address is supported in additional recipients.
        invoices.remind-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: CANNOT_REMIND_INVOICE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_REMIND_INVOICE
                                description:
                                    type: string
                                    enum:
                                        - You cannot remind an invoice which is in DRAFT status. Only UNPAID, SENT and PARTIALLY_PAID invoices can be reminded.
        invoices.cancel-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Field value exceeded the maximum allowed number of characters.
                            - title: INVALID_ARRAY_MAX_ITEMS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_ARRAY_MAX_ITEMS
                                description:
                                    type: string
                                    enum:
                                        - Only maximum of 100 email address is supported in additional recipients.
        invoices.cancel-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: CANNOT_CANCEL_DRAFT_INVOICE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_CANCEL_DRAFT_INVOICE
                                description:
                                    type: string
                                    enum:
                                        - Draft invoice cannot be canceled.
                            - title: CANNOT_CANCEL_PAID_INVOICE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_CANCEL_PAID_INVOICE
                                description:
                                    type: string
                                    enum:
                                        - Cannot cancel a paid or partially paid invoice.
                            - title: CANNOT_CANCEL_REFUNDED_INVOICE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_CANCEL_REFUNDED_INVOICE
                                description:
                                    type: string
                                    enum:
                                        - Cannot cancel a refunded or partially refunded invoice.
                            - title: CANNOT_CANCEL_SCHEDULED_INVOICE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_CANCEL_SCHEDULED_INVOICE
                                description:
                                    type: string
                                    enum:
                                        - Cannot cancel a scheduled invoice.
                            - title: INVOICE_CANCELED_ALREADY
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVOICE_CANCELED_ALREADY
                                description:
                                    type: string
                                    enum:
                                        - Invoice is already cancelled.
        payment_reference:
            type: object
            title: Payment Reference
            description: The reference to the payment detail.
            properties:
                payment_id:
                    type: string
                    description: The ID for the invoice payment.
                    readOnly: true
        invoices.payments-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - Payment method is missing. Please provide a valid payment method.
                            - title: INVALID_PAYMENT_METHOD
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PAYMENT_METHOD
                                description:
                                    type: string
                                    enum:
                                        - The value provided is not an acceptable method of payment.
                            - title: NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - Currency code is not supported.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Currency code length should be 3 characters.
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - Amount value is missing. Please provide a valid amount.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Amount value cannot be greater than the maximum limit of 32 characters length.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - Amount value is invalid. Should be a numeric value.
                            - title: VALUE_CANNOT_BE_ZERO
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - VALUE_CANNOT_BE_ZERO
                                description:
                                    type: string
                                    enum:
                                        - Payment amount cannot be zero. Please provide a valid amount.
                            - title: INVALID_DECIMAL_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_DECIMAL_VALUE
                                description:
                                    type: string
                                    enum:
                                        - Payment amount value is invalid. Can have non-negative value with maximum 7 digits and upto 2 fractions.
                            - title: INVALID_INTEGER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_INTEGER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - Payment amount value is invalid. Can have non-negative value with maximum 6 digits.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - Date should be of format yyyy-mm-dd.
        invoices.payments-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: PAYMENT_AMOUNT_GREATER_THAN_AMOUNT_DUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYMENT_AMOUNT_GREATER_THAN_AMOUNT_DUE
                                description:
                                    type: string
                                    enum:
                                        - Payment amount is greater than the amount due.
                            - title: INVALID_INVOICE_TYPE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_INVOICE_TYPE
                                description:
                                    type: string
                                    enum:
                                        - The invoice type is not valid for paying an invoice.
                            - title: CANNOT_PROCESS_PAYMENTS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_PROCESS_PAYMENTS
                                description:
                                    type: string
                                    enum:
                                        - Current invoice state does not support payment processing.
        invoices.payments-delete-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: CANNOT_DELETE_EXTERNAL_PAYMENT
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_DELETE_EXTERNAL_PAYMENT
                                description:
                                    type: string
                                    enum:
                                        - The external payment cannot be deleted as the recorded refund cannot exceed the recored payment for an invoice.
        refund_reference:
            type: object
            title: Refund Payment Reference
            description: The reference to the refund payment detail.
            properties:
                refund_id:
                    type: string
                    description: The ID of the refund of an invoice payment.
                    readOnly: true
        invoices.refunds-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - Payment method is missing. Please provide a valid payment method.
                            - title: INVALID_REFUND_METHOD
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_REFUND_METHOD
                                description:
                                    type: string
                                    enum:
                                        - The value provided is not an acceptable method of refund.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - The value provided is not an acceptable method of refund.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Currency code length should be 3 characters.
                            - title: NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - Currency code is not supported. Please provide a valid currency code.
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - Amount value is missing. Please provide a valid amount.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - Amount value is invalid. Should be a numeric value.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Amount value cannot be greater than the maximum limit of 32 characters length.
                            - title: VALUE_CANNOT_BE_ZERO
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - VALUE_CANNOT_BE_ZERO
                                description:
                                    type: string
                                    enum:
                                        - Refund amount cannot be zero.
                            - title: INVALID_INTEGER_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_INTEGER_VALUE
                                description:
                                    type: string
                                    enum:
                                        - Refund amount value is invalid. Can have non-negative value with maximum 6 digits.
                            - title: INVALID_DECIMAL_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_DECIMAL_VALUE
                                description:
                                    type: string
                                    enum:
                                        - Refund amount value is invalid. Can have non-negative value with maximum 7 digits and upto 2 fractions.
        invoices.refunds-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_REFUND_AMOUNT
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_REFUND_AMOUNT
                                description:
                                    type: string
                                    enum:
                                        - Recorded refunds cannot exceed recorded payments.
                            - title: CANNOT_PROCESS_REFUNDS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_PROCESS_REFUNDS
                                description:
                                    type: string
                                    enum:
                                        - Current invoice state does not support refunds.
        qr_config:
            type: object
            title: QR Configuration
            description: The configuration for a QR code.
            properties:
                width:
                    type: integer
                    description: The width, in pixels, of the QR code image. Value is from `150` to `500`.
                    default: 500
                    minimum: 150
                    maximum: 500
                height:
                    type: integer
                    description: The height, in pixels, of the QR code image. Value is from `150` to `500`.
                    default: 500
                    minimum: 150
                    maximum: 500
                action:
                    type: string
                    description: The type of URL for which to generate a QR code. Valid values are `pay` and `details`.
                    default: pay
                    pattern: (?i)^(pay|details)$
                    maxLength: 7
        invoices.generate-qr-code-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_INTEGER_MAX_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_INTEGER_MAX_VALUE
                                description:
                                    type: string
                                    enum:
                                        - Value exceeds max value.
                            - title: INVALID_INTEGER_MIN_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_INTEGER_MIN_VALUE
                                description:
                                    type: string
                                    enum:
                                        - Value less than minimum value.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - Value of the field does not conform to the expected format.
        invoices.update-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Address line2 length should be less than 300 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - National Number length should be between 1 and 14.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Address line1 length should be less than 300 characters.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - Country code is invalid.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Custom label length should be less than 50 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Given name length should be less than 140 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Language is invalid.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Admin area1 length should be less than 300 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Item quantity length should be 1 and 14.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Surname length should be less than 140 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Attachment reference url length should be between 1 and 2000.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Country code length should be 2 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Currency code length should be 3 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Business name length should be less than 300 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Minimum due amount length should be less than 32 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Attachment id length should be between 1 and 255.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Admin area2 length should be less than 300 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Tax name length should be less than 100.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Website url length should be less than 2048 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Postal code length should be less than 60 characters.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - National Number is not valid.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Memo length should be less than 4000 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Item name length should be less than 200 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - country code length should be between 1 and 3.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Template Id length should be less than 22 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Logo url length should be less than 4000 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Invoice note length should be less than 4000 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Reference field length should be less than 120 characters.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - Due date is invalid.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Terms and Conditions length should be less than 4000 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Email address length should be between 3 and 254.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Additional data length should be less than 4000.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Additional information value length should be less than 40 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Tax id length should be less than 100 characters.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - Invoice date is invalid.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Invoice date is invalid.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Invoice number length should be less than 25 characters.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - Item Date is invalid.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Item description length should be less than 1000 characters.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Shipping Tax name length should be less than 100 characters.
        amount_range:
            type: object
            title: Amount Range
            description: The amount range.
            properties:
                lower_amount:
                    $ref: '#/components/schemas/money'
                    description: The lower limit of the amount range.
                upper_amount:
                    $ref: '#/components/schemas/money'
                    description: The upper limit of the amount range.
            required:
                - lower_amount
                - upper_amount
        date_range:
            type: object
            title: Date Range
            description: The date range. Filters invoices by creation date, invoice date, due date, and payment date.
            properties:
                start:
                    $ref: '#/components/schemas/date_no_time'
                    description: The start date of the range. Filters invoices by creation date, invoice date, due date, and payment date.
                end:
                    $ref: '#/components/schemas/date_no_time'
                    description: The end date of the range. Filters invoices by creation date, invoice date, due date, and payment date.
            required:
                - start
                - end
        date_time_range:
            type: object
            title: Date and Time Range
            description: The date and time range. Filters invoices by creation date, invoice date, due date, and payment date.
            properties:
                start:
                    $ref: '#/components/schemas/date_time'
                    description: The start date of the range. Filters invoices by creation date, invoice date, due date, and payment date.
                end:
                    $ref: '#/components/schemas/date_time'
                    description: 'The end date of the range. Filters invoices by creation date, invoice date, due date, and payment date. <blockquote><strong>Note: The regular expression provides guidance but does not reject all invalid dates.</strong></blockquote><br/>Minimum length: 20.<br/>Maximum length: 64<br/>Pattern: <code>^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$</code>'
            required:
                - start
                - end
        search_data:
            type: object
            title: Search Data
            description: The invoice search parameters.
            properties:
                recipient_email:
                    type: string
                    maxLength: 254
                    description: Filters the search by the email address.
                recipient_first_name:
                    type: string
                    description: Filters the search by the recipient first name.
                    maxLength: 140
                recipient_last_name:
                    type: string
                    description: Filters the search by the recipient last name.
                    maxLength: 140
                recipient_business_name:
                    type: string
                    description: Filters the search by the recipient business name.
                    maxLength: 300
                invoice_number:
                    type: string
                    maxLength: 25
                    description: Filters the search by the invoice number.
                status:
                    type: array
                    description: An array of status values.
                    items:
                        $ref: '#/components/schemas/invoice_status'
                    maxItems: 5
                reference:
                    type: string
                    description: The reference data, such as a PO number.
                    maxLength: 120
                currency_code:
                    $ref: '#/components/schemas/currency_code'
                    description: The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/) that identifies the currency.
                memo:
                    type: string
                    description: A private bookkeeping memo for the user.
                    maxLength: 500
                total_amount_range:
                    $ref: '#/components/schemas/amount_range'
                    description: Filters the search by the total amount.
                invoice_date_range:
                    $ref: '#/components/schemas/date_range'
                    description: Filters the search by a date range for the invoice, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                due_date_range:
                    $ref: '#/components/schemas/date_range'
                    description: Filters the search by a due date range for the invoice, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                payment_date_range:
                    $ref: '#/components/schemas/date_time_range'
                creation_date_range:
                    $ref: '#/components/schemas/date_time_range'
                    description: Filters the search by a creation date range for the invoice, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                archived:
                    type: boolean
                    description: Indicates whether to list merchant-archived invoices in the response. Value is:<ul><li><code>true</code>. Response lists only merchant-archived invoices.</li><li><code>false</code>. Response lists only unarchived invoices.</li><li><code>null</code>. Response lists all invoices.</li></ul>
                fields:
                    description: A CSV file of fields to return for the user, if available. Because the invoice object can be very large, field filtering is required. Valid collection fields are <code>items</code>, <code>payments</code>, <code>refunds</code>, <code>additional_recipients_info</code>, and <code>attachments</code>.
                    type: array
                    items:
                        type: string
                        description: The name of the field.
        invoices.search-invoices-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_INTEGER_MAX_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_INTEGER_MAX_VALUE
                                description:
                                    type: string
                                    enum:
                                        - Value exceeds max value.
                            - title: INVALID_INTEGER_MIN_VALUE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_INTEGER_MIN_VALUE
                                description:
                                    type: string
                                    enum:
                                        - Value less than minimum value.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - the value of a field is too long.
                            - title: INVALID_ARRAY_MAX_ITEMS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_ARRAY_MAX_ITEMS
                                description:
                                    type: string
                                    enum:
                                        - the number of items in an array parameter is too large.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - the value of a field is either too short or too long.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - the value of a field is too long.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - the value of a field does not conform to the expected format.
        template_detail:
            type: object
            title: Template Detail
            description: The template-related details. Includes notes, terms and conditions, memo, and attachments.
            allOf:
                - $ref: '#/components/schemas/detail'
                - properties:
                    payment_term:
                        $ref: '#/components/schemas/payment_term'
                        description: The payment due date for the invoice. Value is either but not both <code>term_type</code> or <code>due_date</code>.
                    metadata:
                        $ref: '#/components/schemas/template_metadata'
                        description: The audit metadata. Captures all template actions on create and update.
        template_info:
            type: object
            title: Template Information
            description: The template details. Includes invoicer business information, invoice recipients, items, and configuration.
            properties:
                detail:
                    $ref: '#/components/schemas/template_detail'
                    description: The template-related details. Includes notes, terms and conditions, memo, and attachments.
                invoicer:
                    $ref: '#/components/schemas/invoicer_info'
                    description: The invoicer information. Includes business name, email, address, phone, fax, tax ID, additional notes, and logo URL.
                primary_recipients:
                    type: array
                    items:
                        $ref: '#/components/schemas/recipient_info'
                    maxItems: 100
                    description: The billing and shipping information. Includes name, email, address, phone, and language.
                additional_recipients:
                    type: array
                    maxItems: 100
                    description: 'An array of one or more CC: emails to which notifications are sent. If you omit this parameter, a notification is sent to all CC: email addresses that are part of the invoice.<blockquote><strong>Note:</strong> Valid values are email addresses in the `additional_recipients` value associated with the invoice.</blockquote>'
                    items:
                        $ref: '#/components/schemas/email_address'
                items:
                    type: array
                    description: An array of invoice line-item information.
                    maxItems: 100
                    items:
                        $ref: '#/components/schemas/item'
                configuration:
                    $ref: '#/components/schemas/template_configuration'
                    description: The template configuration details. Includes tax information, tip, and partial payment.
                amount:
                    $ref: '#/components/schemas/amount_summary_detail'
                    description: The invoice amount summary of the item total, discount, tax total, and shipping.
                due_amount:
                    $ref: '#/components/schemas/money'
                    description: The amount due for the invoice.
                    readOnly: true
        template_item_field:
            type: string
            title: Template Item Field
            description: The field names for the invoice line items in the template.
            enum:
                - ITEMS_QUANTITY
                - ITEMS_DESCRIPTION
                - ITEMS_DATE
                - ITEMS_DISCOUNT
                - ITEMS_TAX
        template_display_preference:
            type: object
            title: Template Display Preference
            description: The template display preference.
            properties:
                hidden:
                    type: boolean
                    description: Indicates whether to show or hide this field.
                    default: false
        template_item_setting:
            type: object
            title: Template Item Setting
            description: The template item setting. Sets a template as the default template or edit template.
            properties:
                field_name:
                    description: The field name in `template_data` for which to map corresponding display preferences.
                    $ref: '#/components/schemas/template_item_field'
                display_preference:
                    description: The display preference.
                    $ref: '#/components/schemas/template_display_preference'
        template_subtotal_field:
            type: string
            title: Template Subtotal Field
            description: The field names in the template for discount, shipping, and custom amounts.
            enum:
                - DISCOUNT
                - SHIPPING
                - CUSTOM
        template_subtotal_setting:
            type: object
            title: Template Subtotal Setting
            description: The template subtotal setting. Includes the field name and display preference.
            properties:
                field_name:
                    description: The field name in `template_data` for which to map corresponding display preferences.
                    $ref: '#/components/schemas/template_subtotal_field'
                display_preference:
                    description: The display preference.
                    $ref: '#/components/schemas/template_display_preference'
        template_settings:
            type: object
            title: Template Settings
            description: The template settings. Sets a template as the default template or edit template.
            properties:
                template_item_settings:
                    type: array
                    description: The template item headers display preference.
                    items:
                        $ref: '#/components/schemas/template_item_setting'
                template_subtotal_settings:
                    type: array
                    description: The template subtotal headers display preference.
                    items:
                        $ref: '#/components/schemas/template_subtotal_setting'
        templates.create-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: TEMPLATE_NAME_ALREADY_EXISTS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TEMPLATE_NAME_ALREADY_EXISTS
                                description:
                                    type: string
                                    enum:
                                        - Template name already exists.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Template name length should be between 1 and 500.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Currency code length should be 3 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - the value of a field is either too short or too long.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Value of the field is too long.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - the value of a field does not conform to the expected format.
        templates.create-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: CANNOT_CANCEL_DRAFT_INVOICE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_CANCEL_DRAFT_INVOICE
                                description:
                                    type: string
                                    enum:
                                        - Cannot cancel a draft invoice.
        templates.get-403:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: PERMISSION_DENIED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PERMISSION_DENIED
                                description:
                                    type: string
                                    enum:
                                        - The requested template is not associated with the requested user.
        templates.update-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: TEMPLATE_NAME_ALREADY_EXISTS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TEMPLATE_NAME_ALREADY_EXISTS
                                description:
                                    type: string
                                    enum:
                                        - Template name already exists.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Template name length should be between 1 and 500.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Currency code length should be 3 characters.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Value of the field is either too short or too long.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - Value of the field is too long.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - Value of the field does not conform to the expected format.
        templates.update-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: CANNOT_CANCEL_DRAFT_INVOICE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_CANCEL_DRAFT_INVOICE
                                description:
                                    type: string
                                    enum:
                                        - Cannot cancel a draft invoice.
        templates.delete-403:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: PERMISSION_DENIED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PERMISSION_DENIED
                                description:
                                    type: string
                                    enum:
                                        - The requested template is not associated with the requested user.
                            - title: CANNOT_DELETE_GLOBAL_TEMPLATE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_DELETE_GLOBAL_TEMPLATE
                                description:
                                    type: string
                                    enum:
                                        - Global templates cannot be deleted.
        EventTypeList:
            type: object
            title: Event Type List
            description: A list of webhook events.
            properties:
                event_types:
                    type: array
                    description: An array of webhook events.
                    items:
                        $ref: '#/components/schemas/event_type'
        WebhookList:
            type: object
            title: Webhook List
            description: A list of webhooks.
            properties:
                webhooks:
                    type: array
                    description: An array of webhooks.
                    items:
                        $ref: '#/components/schemas/webhook'
        EventList:
            type: object
            title: Event List
            description: A list of webhooks events.
            properties:
                events:
                    type: array
                    description: An array of webhooks events.
                    items:
                        $ref: '#/components/schemas/event'
                count:
                    type: integer
                    description: The number of items in each range of results. Note that the response might have fewer items than the requested `page_size` value.
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
        WebhookLookupList:
            type: object
            title: Webhook Lookup List
            description: A list of webhook lookups.
            properties:
                webhooks_lookups:
                    type: array
                    description: An array of webhook lookups.
                    items:
                        $ref: '#/components/schemas/webhooks_lookup'
        event_type:
            type: object
            title: Event Type
            description: An event type.
            properties:
                name:
                    type: string
                    description: The unique event name.<blockquote><strong>Note:</strong> To subscribe to all events, including events as they are added, specify an `*` as the value to represent a wildcard.</blockquote>
                    readOnly: false
                description:
                    type: string
                    description: A human-readable description of the event.
                    readOnly: true
                status:
                    type: string
                    description: The status of a webhook event.
                    readOnly: true
                resource_versions:
                    type: array
                    description: 'Identifier for the event type example: 1.0/2.0 etc.'
                    readOnly: true
                    items:
                        type: string
                        description: The ID for an event type. For example, `1.0` or `2.0`.
            required:
                - name
        webhook:
            type: object
            title: Webhook
            description: One or more webhook objects.
            properties:
                id:
                    type: string
                    description: The ID of the webhook.
                    readOnly: true
                url:
                    type: string
                    format: uri
                    description: The URL that is configured to listen on `localhost` for incoming `POST` notification messages that contain event information.
                    readOnly: false
                    maxLength: 2048
                event_types:
                    type: array
                    maxItems: 500
                    description: An array of events to which to subscribe your webhook. To subscribe to all events, including events as they are added, specify the asterisk wild card. To replace the `event_types` array, specify the asterisk wild card. To list all supported events, <a href="#event-type_list">list available events</a>.
                    readOnly: false
                    items:
                        $ref: '#/components/schemas/event_type'
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
            required:
                - url
                - event_types
        webhooks_lookup:
            type: object
            title: Webhook Lookup
            description: The webhook lookup details.
            properties:
                id:
                    type: string
                    description: The ID of the webhook lookup.
                    readOnly: true
                client_id:
                    type: string
                    pattern: ^(?!\d+$)\w+\S+
                    maxLength: 128
                    description: The application client ID.
                    readOnly: true
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
        event_version:
            type: string
            title: Event Version
            description: The event version in the webhook notification.
            deprecated: true
            pattern: ^([0-9]+.[0-9]+)$
        resource_version:
            title: Resource Version
            description: The resource version in the webhook notification.
            type: string
            pattern: ^([0-9]+.[0-9]+)$
        event:
            type: object
            title: Event
            description: A webhook event notification.
            properties:
                id:
                    type: string
                    description: The ID of the webhook event notification.
                    readOnly: true
                create_time:
                    type: string
                    format: date-time
                    description: The date and time when the webhook event notification was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                resource_type:
                    type: string
                    description: The name of the resource related to the webhook notification event.
                    readOnly: true
                event_version:
                    $ref: '#/components/schemas/event_version'
                event_type:
                    type: string
                    description: The event that triggered the webhook event notification.
                    readOnly: true
                summary:
                    type: string
                    description: A summary description for the event notification.
                    readOnly: true
                resource_version:
                    $ref: '#/components/schemas/resource_version'
                resource:
                    type: object
                    title: Resource
                    description: The resource that triggered the webhook event notification.
                    readOnly: true
                    additionalProperties: true
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
        verify_webhook_signature:
            type: object
            title: Verify Webhook Signature
            description: A verify webhook signature request.
            properties:
                auth_algo:
                    type: string
                    maxLength: 100
                    pattern: ^[a-zA-Z0-9]+$
                    description: The algorithm that PayPal uses to generate the signature and that you can use to verify the signature. Extract this value from the `PAYPAL-AUTH-ALGO` response header, which is received with the webhook notification.
                cert_url:
                    type: string
                    maxLength: 500
                    format: uri
                    description: The X.509 public key certificate. Download the certificate from this URL and use it to verify the signature. Extract this value from the `PAYPAL-CERT-URL` response header, which is received with the webhook notification.
                transmission_id:
                    type: string
                    maxLength: 50
                    pattern: ^(?!\d+$)\w+\S+
                    description: The ID of the HTTP transmission. Contained in the `PAYPAL-TRANSMISSION-ID` header of the notification message.
                transmission_sig:
                    type: string
                    maxLength: 500
                    pattern: ^(?!\d+$)\w+\S+
                    description: The PayPal-generated asymmetric signature. Appears in the `PAYPAL-TRANSMISSION-SIG` header of the notification message.
                transmission_time:
                    type: string
                    maxLength: 100
                    format: date-time
                    description: The date and time of the HTTP transmission, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Appears in the `PAYPAL-TRANSMISSION-TIME` header of the notification message.
                webhook_id:
                    type: string
                    maxLength: 50
                    pattern: ^[a-zA-Z0-9]+$
                    description: The ID of the webhook as configured in your Developer Portal account.
                webhook_event:
                    $ref: '#/components/schemas/event'
            required:
                - auth_algo
                - cert_url
                - transmission_id
                - transmission_sig
                - transmission_time
                - webhook_id
                - webhook_event
        verify_webhook_signature_response:
            type: object
            title: Verify Webhook Signature Response
            description: The verify webhook signature response.
            properties:
                verification_status:
                    type: string
                    description: The status of the signature verification.
                    enum:
                        - SUCCESS
                        - FAILURE
            required:
                - verification_status
        event_resend:
            type: object
            title: Event Resend
            description: Resends a webhook event notification, by ID.
            properties:
                webhook_ids:
                    type: array
                    maxItems: 500
                    description: An array of webhook account IDs.
                    items:
                        type: string
                        description: The ID of the webhook event notification to resend.
        simulate_event:
            type: object
            title: Simulate Event
            description: Simulates a mock webhook event.
            properties:
                webhook_id:
                    type: string
                    description: The ID of the webhook. If omitted, the URL is required.
                    readOnly: false
                    pattern: ^[a-zA-Z0-9]+$
                    maxLength: 50
                url:
                    type: string
                    format: uri
                    description: The URL for the webhook endpoint. If omitted, the webhook ID is required.
                    readOnly: false
                    maxLength: 2048
                event_type:
                    type: string
                    description: The event name. Specify one of the subscribed events. For each request, provide only one event.
                    readOnly: false
                    maxLength: 50
                    pattern: ^[a-zA-Z0-9.]+$
                resource_version:
                    type: string
                    description: 'The identifier for event type ex: 1.0/2.0 etc.'
                    readOnly: false
            required:
                - event_type
        web_profile:
            type: object
            description: A payment web experience profile.
            title: Web Profile
            required:
                - name
            properties:
                id:
                    type: string
                    readOnly: true
                    minLength: 22
                    maxLength: 22
                    description: The ID of the web experience profile.
                name:
                    type: string
                    minLength: 1
                    maxLength: 50
                    description: The web experience profile name. Must be unique for a set of profiles for a merchant.
                temporary:
                    type: boolean
                    description: Indicates whether the profile persists for three hours or permanently. To persist the profile permanently, set to `false`. To persist the profile for three hours, set to `true`.
                flow_config:
                    type: object
                    title: Flow Configuration
                    description: The flow configuration parameters.
                    properties:
                        landing_page_type:
                            type: string
                            minLength: 1
                            maxLength: 255
                            description: The type of landing page to display on the PayPal site for user checkout. To use the non-PayPal account landing page, set to `Billing`. To use the PayPal account login landing page, set to `Login`.
                            enum:
                                - login
                                - billing
                        bank_txn_pending_url:
                            type: string
                            format: uri
                            minLength: 1
                            maxLength: 127
                            description: The merchant site URL to display after a bank transfer payment. In Germany, valid only for the Giropay payment method or bank transfer payment method.
                        user_action:
                            type: string
                            description: Presents either the **Continue** or **Pay Now** checkout flow to the customer.<br/><br/>Default is **Continue**, or `user_action=continue`. When you do not know the final payment amount, accept this default flow, which redirects the customer to the PayPal payment page with the **Continue** button. When the customer clicks **Continue**, the customer can change the payment amount.<br/><br/> When you know the final payment amount, set `user_action=commit` to choose the **Pay Now** flow, which redirects the customer to the PayPal payment page with the **Pay Now** button. When the customer clicks **Pay Now**, the payment is processed immediately.
                            minLength: 1
                            maxLength: 255
                            enum:
                                - COMMIT
                        return_uri_http_method:
                            type: string
                            description: The HTTP method to use to redirect the customer to a return URL. Value is `GET` or `POST`.
                            minLength: 1
                            maxLength: 255
                            enum:
                                - GET
                                - POST
                input_fields:
                    type: object
                    title: Input Field Customization
                    description: The input field customization parameters.
                    properties:
                        no_shipping:
                            type: integer
                            minimum: 0
                            maximum: 2
                            description: Indicates whether PayPal displays shipping address fields on the experience pages. Value is:<ul><li><code>0</code>. Displays the shipping address on the PayPal pages.</li><li><code>1</code>. Redacts shipping address fields from the PayPal pages. For digital goods, this field is required and must be <code>1</code>.</li><li><code>2</code>. Gets the shipping address from the customer's account profile.</li></ul>
                        address_override:
                            type: integer
                            minimum: 0
                            maximum: 1
                            description: Indicates whether to display the shipping address that is passed to this call rather than the one on file for this buyer on the PayPal experience pages. Value is:<ul><li><code>0</code>. Displays the shipping address on file.</li><li><code>1</code>. Displays the shipping address specified in this call. the customer cannot edit this shipping address.</li></ul>
                presentation:
                    type: object
                    title: Style and Presentation
                    description: The style and presentation parameters.
                    properties:
                        brand_name:
                            type: string
                            minLength: 1
                            maxLength: 127
                            description: 'A label that overrides the business name in the PayPal account on the PayPal pages. Character length and limitations: 127 single-byte alphanumeric characters.'
                        logo_image:
                            type: string
                            minLength: 1
                            maxLength: 127
                            description: 'A URL to the logo image. A valid media type is `.gif`, `.jpg`, or `.png`. The image''s maximum width is 190 pixels and maximum height is 60 pixels. PayPal crops images that are larger. PayPal places your logo image at the top of the cart review area. PayPal recommends that you store the image on a secure (HTTPS) server. Otherwise, web browsers display a message that checkout pages contain non-secure items. Character length and limitations: 127 single-byte alphanumeric characters.'
                        locale_code:
                            type: string
                            minLength: 2
                            maxLength: 5
                            description: 'The locale of pages that the PayPal payment experience displays. A valid value is `AU`, `AT`, `BE`, `BR`, `CA`, `CH`, `CN`, `DE`, `ES`, `GB`, `FR`, `IT`, `NL`, `PL`, `PT`, `RU`, or `US`. A 5-character code is also valid for languages in these countries: `da_DK`, `he_IL`, `id_ID`, `ja_JP`, `no_NO`, `pt_BR`, `ru_RU`, `sv_SE`, `th_TH`, `zh_CN`, `zh_HK`, or `zh_TW`.'
        web_profile_list:
            type: array
            title: Web Profile List
            description: An array of web profiles.
            minItems: 1
            maxItems: 20
            items:
                $ref: '#/components/schemas/web_profile'
        payment_pattern:
            type: string
            description: Provides context (e.g. frequency of payment (Single, Recurring) along with whether (Customer is Present, Not Present) for the payment being processed. For Card and PayPal Vaulted/Billing Agreement transactions, this helps specify the appropriate indicators to the networks (e.g. Mastercard, Visa) which ensures compliance as well as ensure a better auth-rate. For bank processing, indicates to clearing house whether the transaction is recurring or not depending on the option chosen.
            title: Payment pattern
            minLength: 3
            maxLength: 255
            pattern: ^[A-Z_]+$
            enum:
                - CUSTOMER_PRESENT_ONETIME_PURCHASE
                - CUSTOMER_NOT_PRESENT_RECURRING
                - CUSTOMER_PRESENT_RECURRING_FIRST
                - CUSTOMER_PRESENT_ONETIME_PURCHASE_VAULTED
                - CUSTOMER_NOT_PRESENT_ONETIME_PURCHASE_VAULTED
                - MAIL_ORDER_TELEPHONE_ORDER
        payment_hold_reason:
            type: object
            title: Related Resources
            description: The payment-related financial transactions, which include sales, authorizations, captures, and refunds. To show resource details, use the resource ID. For example, to [show details for a related authorization](/docs/api/payments/v1/#authorization_get), use the ID returned in the `authorization` object. You can also use the [HATEOAS links](/docs/api/hateoas-links/) for a resource to complete operations for that resource. For example, a `sale` object provides a `refund` link that enables you to refund the sale.
            properties:
                payment_hold_reason:
                    description: The reason that PayPal holds the recipient fund. Set only if the payment hold status is `HELD`.
                    type: string
                    enum:
                        - PAYMENT_HOLD
                        - SHIPPING_RISK_HOLD
        fmf_details:
            type: object
            title: FMF Details
            description: The Fraud Management Filter (FMF) details that are applied to the payment that result in an accept, deny, or pending action. Returned in a payment response only if the merchant has enabled FMF in the profile settings and one of the fraud filters was triggered based on those settings. For more information, see [Fraud Management Filters Summary](/docs/classic/fmf/integration-guide/FMFSummary/).
            properties:
                filter_type:
                    type: string
                    description: The filter type.
                    readOnly: true
                    enum:
                        - ACCEPT
                        - PENDING
                        - DENY
                        - REPORT
                filter_id:
                    type: string
                    description: The filter ID.
                    readOnly: true
                    enum:
                        - AVS_NO_MATCH
                        - AVS_PARTIAL_MATCH
                        - AVS_UNAVAILABLE_OR_UNSUPPORTED
                        - CARD_SECURITY_CODE_MISMATCH
                        - MAXIMUM_TRANSACTION_AMOUNT
                        - UNCONFIRMED_ADDRESS
                        - COUNTRY_MONITOR
                        - LARGE_ORDER_NUMBER
                        - BILLING_OR_SHIPPING_ADDRESS_MISMATCH
                        - RISKY_ZIP_CODE
                        - SUSPECTED_FREIGHT_FORWARDER_CHECK
                        - TOTAL_PURCHASE_PRICE_MINIMUM
                        - IP_ADDRESS_VELOCITY
                        - RISKY_EMAIL_ADDRESS_DOMAIN_CHECK
                        - RISKY_BANK_IDENTIFICATION_NUMBER_CHECK
                        - RISKY_IP_ADDRESS_RANGE
                        - PAYPAL_FRAUD_MODEL
                name:
                    type: string
                    description: The filter name.
                    readOnly: true
                description:
                    type: string
                    description: The filter description.
                    readOnly: true
            required:
                - filter_type
                - filter_id
        related_resources:
            type: object
            title: Related Resources
            description: The payment-related financial transactions, which include sales, authorizations, captures, and refunds. To show resource details, use the resource ID. For example, to [show details for a related authorization](/docs/api/payments/v1/#authorization_get), use the ID returned in the `authorization` object. You can also use the [HATEOAS links](/docs/api/hateoas-links/) for a resource to complete operations for that resource. For example, a `sale` object provides a `refund` link that enables you to refund the sale.
            properties:
                sale:
                    $ref: '#/components/schemas/sale'
                authorization:
                    $ref: '#/components/schemas/authorization'
                order:
                    $ref: '#/components/schemas/order'
                capture:
                    $ref: '#/components/schemas/capture'
                refund:
                    $ref: '#/components/schemas/refund'
        payment:
            type: object
            title: Payment
            description: The payment details.
            properties:
                id:
                    type: string
                    description: The ID of the payment.
                    readOnly: true
                intent:
                    type: string
                    description: The payment intent. Value is:<ul><li><code>sale</code>. Makes an immediate payment.</li><li><code>authorize</code>. [Authorizes a payment for capture later](/docs/integration/direct/payments/authorize-and-capture-payments/).</li><li><code>order</code>. [Creates an order](/docs/integration/direct/payments/orders/).</li></ul>
                    enum:
                        - sale
                        - authorize
                        - order
                payer:
                    description: The source of the funds for this payment. Payment method is PayPal Wallet payment or bank direct debit.
                    $ref: '#/components/schemas/payer'
                application_context:
                    description: Use the application context resource to customize payment flow experience for your buyers.
                    $ref: '#/components/schemas/application_context'
                transactions:
                    type: array
                    description: An array of payment-related transactions. A transaction defines what the payment is for and who fulfills the payment. For update and execute payment calls, the **`transactions`** object accepts the **`amount`** object only.
                    items:
                        $ref: '#/components/schemas/transaction'
                state:
                    type: string
                    description: The state of the payment, authorization, or order transaction. Value is:<ul><li><code>created</code>. The transaction was successfully created.</li><li><code>approved</code>. The customer approved the transaction. The state changes from <code>created</code> to <code>approved</code> on generation of the <code>sale_id</code> for sale transactions, <code>authorization_id</code> for authorization transactions, or <code>order_id</code> for order transactions.</li><li><code>failed</code>. The transaction request failed.</li></ul>
                    enum:
                        - created
                        - approved
                        - failed
                        - partially_completed
                        - in_progress
                    readOnly: true
                experience_profile_id:
                    type: string
                    description: Deprecated. The PayPal-generated ID for the merchant's payment experience profile. For information, see [create web experience profile](/docs/api/payment-experience/v1/#web-profiles_create). Use application_context instead.
                note_to_payer:
                    type: string
                    description: A free-form field that clients can use to send a note to the payer.
                    maxLength: 165
                redirect_urls:
                    type: object
                    description: A set of redirect URLs that you provide for PayPal-based payments.
                    title: Redirect URLs
                    additionalProperties: false
                    properties:
                        return_url:
                            type: string
                            format: uri
                            description: The URL where the payer is redirected after he or she approves the payment. **Required for PayPal account payments**.
                        cancel_url:
                            type: string
                            format: uri
                            description: The URL where the payer is redirected after he or she cancels the payment. **Required for PayPal account payments**.
                failure_reason:
                    type: string
                    description: The reason code for a payment failure.
                    enum:
                        - UNABLE_TO_COMPLETE_TRANSACTION
                        - INVALID_PAYMENT_METHOD
                        - PAYER_CANNOT_PAY
                        - CANNOT_PAY_THIS_PAYEE
                        - REDIRECT_REQUIRED
                        - PAYEE_FILTER_RESTRICTIONS
                    readOnly: true
                create_time:
                    type: string
                    format: date-time
                    description: The date and time when the payment was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                update_time:
                    type: string
                    format: date-time
                    description: The date and time when the payment was updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
            required:
                - intent
                - payer
        payment_history:
            type: object
            title: 'Payment History '
            description: An array of merchant payments that are complete. Payments that you just created with the [create payment](/docs/api/payments/v1/#payment_create) call do not appear in the list.
            properties:
                payments:
                    type: array
                    description: An array of payments that are complete. Payments that you just created with the [create payment](/docs/api/payments/v1/#payment_create) call do not appear in the list.
                    items:
                        $ref: '#/components/schemas/payment'
                count:
                    type: integer
                    description: The number of items returned in each range of results. Note that the last results range might have fewer items than the requested number of items.
                    maximum: 20
                next_id:
                    type: string
                    description: The ID of the element to use to get the next range of results.
                    readOnly: true
        cart_base:
            type: object
            title: Cart Base
            description: The cart.
            properties:
                reference_id:
                    type: string
                    description: The merchant-provided ID for the purchase unit.
                    maxLength: 256
                amount:
                    $ref: '#/components/schemas/amount'
                    description: The amount to collect.
                payee:
                    $ref: '#/components/schemas/payee'
                description:
                    type: string
                    description: The purchase description.
                    maxLength: 127
                note_to_payee:
                    type: string
                    description: The note to the recipient of the funds in this transaction.
                    maxLength: 255
                custom:
                    type: string
                    description: The free-form field for the client's use.
                    maxLength: 127
                invoice_number:
                    type: string
                    description: The invoice number to track this payment.
                    maxLength: 127
                soft_descriptor:
                    type: string
                    description: The payment descriptor on account transactions on the customer's credit card statement, that PayPal sends to processors. The maximum length of the soft descriptor information that you can pass in the API field is 22 characters, in the following format:<pre>22 - len(PAYPAL * (8)) - len(<var>Descriptor in Payment Receiving Preferences of Merchant account</var> + 1)</pre>The PAYPAL prefix uses 8 characters.<br/><br/>The soft descriptor supports the following ASCII characters:<ul><li>Alphanumeric characters</li><li>Dashes</li><li>Asterisks</li><li>Periods (.)</li><li>Spaces</li></ul>For Wallet payments marketplace integrations:<ul><li>The merchant descriptor in the Payment Receiving Preferences must be the marketplace name.</li><li>You can't use the remaining space to show the customer service number.</li><li>The remaining spaces can be a combination of seller name and country.</li></ul><br/>For unbranded payments (Direct Card) marketplace integrations, use a combination of the seller name and phone number.
                    maxLength: 22
                payment_options:
                    type: object
                    title: Payment Options
                    description: The payment options for this transaction.
                    properties:
                        allowed_payment_method:
                            type: string
                            description: The payment method for this transaction. This field does not apply to the credit card payment method.
                            default: UNRESTRICTED
                            enum:
                                - UNRESTRICTED
                                - INSTANT_FUNDING_SOURCE
                                - IMMEDIATE_PAY
                item_list:
                    type: object
                    title: Item List
                    description: An array of items that are being purchased.
                    properties:
                        items:
                            type: array
                            description: An array of items that are being purchased.
                            items:
                                $ref: '#/components/schemas/item'
                        shipping_address:
                            $ref: '#/components/schemas/shipping_address'
                        shipping_phone_number:
                            type: string
                            description: The shipping phone number, in its canonical international format as defined by the [E.164](https://en.wikipedia.org/wiki/E.164) numbering plan. Enables merchants to share payerΓÇÖs contact number with PayPal for the current payment. The final contact number for the payer who is associated with the transaction might be the same as or different from the `shipping_phone_number` based on the payerΓÇÖs action on PayPal.
                            minLength: 1
                            maxLength: 50
                notify_url:
                    type: string
                    format: uri
                    description: The send payment notifications URL.
                    maxLength: 2048
                order_url:
                    type: string
                    format: uri
                    description: The payment-related URL on the merchant site.
                    maxLength: 2048
            required:
                - amount
        payment_execution:
            type: object
            title: Payment Execution
            description: Executes a PayPal account-based payment with the `payer_id` obtained from the web approval URL.
            properties:
                payer_id:
                    type: string
                    description: The ID of the payer that PayPal passes in the `return_url`.
                transactions:
                    type: array
                    description: An array of transaction details. Includes the amount and item details. For update and execute payment calls, the `transactions` object accepts only the `amount` object.
                    items:
                        $ref: '#/components/schemas/cart_base'
        refund_request:
            title: Refund Request
            type: object
            description: Refunds a captured payment, by ID. For a full refund, include an empty request body. For a partial refund, include an <code>amount</code> object in the request body.
            properties:
                amount:
                    description: The amount to refund. To refund a portion of the captured amount, specify an amount. If amount is not specified, an amount equal to <code>captured amount - previous refunds</code> is refunded. The amount must be a positive number and in the same currency as the one in which the payment was captured.
                    $ref: '#/components/schemas/money'
                custom_id:
                    type: string
                    description: The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports. The pattern is defined by an external party and supports Unicode.
                    minLength: 1
                    maxLength: 127
                    pattern: ^.*$
                invoice_id:
                    type: string
                    description: The API caller-provided external invoice ID for this order. The pattern is defined by an external party and supports Unicode.
                    minLength: 1
                    maxLength: 127
                    pattern: ^.*$
                note_to_payer:
                    type: string
                    description: The reason for the refund. Appears in both the payer's transaction history and the emails that the payer receives. The pattern is defined by an external party and supports Unicode.
                    minLength: 1
                    maxLength: 255
                    pattern: ^.*$
                payment_instruction:
                    description: Any additional refund instructions to be set during refund payment processing. This object is only applicable to merchants that have been enabled for PayPal Commerce Platform for Marketplaces and Platforms capability. Please speak to your account manager if you want to use this capability.
                    $ref: '#/components/schemas/payment_instruction-2'
        refund-2:
            type: object
            title: Refund
            description: The refund transaction details.
            properties:
                id:
                    type: string
                    readOnly: true
                    description: The ID of the refund transaction.
                    maxLength: 17
                amount:
                    description: The refund amount. Includes both the amount refunded to the payer and the fee refunded to the payee.
                    $ref: '#/components/schemas/amount'
                state:
                    type: string
                    enum:
                        - pending
                        - completed
                        - cancelled
                        - failed
                    description: The state of the refund.
                    readOnly: true
                reason:
                    type: string
                    description: The reason that the transaction is being refunded.
                invoice_number:
                    type: string
                    description: Your own invoice or tracking ID number. Value is a string of single-byte alphanumeric characters.
                    maxLength: 127
                sale_id:
                    type: string
                    readOnly: true
                    description: The ID of the sale transaction being refunded.
                capture_id:
                    type: string
                    readOnly: true
                    description: The ID of the sale transaction being refunded.
                parent_payment:
                    type: string
                    readOnly: true
                    description: The ID of the payment on which this transaction is based.
                description:
                    type: string
                    description: The refund description.
                create_time:
                    type: string
                    format: date-time
                    description: The date and time when the refund was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                update_time:
                    type: string
                    format: date-time
                    description: The date and time when the resource was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    readOnly: true
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
        detailed_refund:
            type: object
            title: Detailed Refund
            description: The refund transaction details.
            allOf:
                - $ref: '#/components/schemas/refund-2'
                - properties:
                    custom:
                        type: string
                        description: The note to the payer in this transaction.
                        maxLength: 127
                    invoice_number:
                        type: string
                        description: The invoice number to track this payment.
                        maxLength: 127
                    refund_from_transaction_fee:
                        description: The currency and amount of the transaction fee that is refunded to original the recipient of payment.
                        $ref: '#/components/schemas/currency'
                    refund_from_received_amount:
                        description: The currency and amount of the refund that is subtracted from the original payment recipient's PayPal balance.
                        $ref: '#/components/schemas/currency'
                    total_refunded_amount:
                        description: The currency and amount of the total refund from the original purchase. For example, if a payer makes $100 purchase and the payer was refunded $20 a week ago and $30 in this transaction, the gross refund amount is $30 for this transaction and the total refunded amount is $50.
                        $ref: '#/components/schemas/currency'
        "409":
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: PREVIOUS_REQUEST_IN_PROGRESS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PREVIOUS_REQUEST_IN_PROGRESS
                                description:
                                    type: string
                                    enum:
                                        - A previous request on this resource is currently in progress. Please wait for sometime and try again. It is best to space out the initial and the subsequent request(s) to avoid receiving this error.
        related_ids:
            type: object
            title: Related Identifiers
            description: Identifiers related to a specific resource.
            properties:
                order_id:
                    type: string
                    description: Order ID related to the resource.
                    minLength: 1
                    maxLength: 20
                    pattern: ^[A-Z0-9]+$
                authorization_id:
                    type: string
                    description: Authorization ID related to the resource.
                    minLength: 1
                    maxLength: 20
                    pattern: ^[A-Z0-9]+$
                capture_id:
                    type: string
                    description: Capture ID related to the resource.
                    minLength: 1
                    maxLength: 20
                    pattern: ^[A-Z0-9]+$
        authorization-2:
            type: object
            title: Authorization
            description: The authorized payment transaction.
            allOf:
                - $ref: '#/components/schemas/authorization'
                - properties:
                    supplementary_data:
                        description: An object that provides supplementary/additional data related to a payment transaction.
                        readOnly: true
                        $ref: '#/components/schemas/supplementary_data'
                    payee:
                        description: The details associated with the merchant for this transaction.
                        $ref: '#/components/schemas/payee_base'
                        readOnly: true
        supplementary_purchase_data:
            type: object
            title: Capture Identifier
            description: The capture identification-related fields. Includes the invoice ID, custom ID, note to payer, and soft descriptor.
            properties:
                invoice_id:
                    description: The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
                    type: string
                    maxLength: 127
                    minLength: 1
                    pattern: ^.{1,127}$
                note_to_payer:
                    type: string
                    description: An informational note about this settlement. Appears in both the payer's transaction history and the emails that the payer receives.
                    maxLength: 255
                    minLength: 1
                    pattern: ^.{1,255}$
        capture_request:
            title: Capture Request
            type: object
            description: Captures either a portion or the full authorized amount of an authorized payment.
            allOf:
                - $ref: '#/components/schemas/supplementary_purchase_data'
                - properties:
                    amount:
                        description: The amount to capture. To capture a portion of the full authorized amount, specify an amount. If amount is not specified, the full authorized amount is captured. The amount must be a positive number and in the same currency as the authorization against which the payment is being captured.
                        $ref: '#/components/schemas/money'
                    invoice_id:
                        description: The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
                        type: string
                        maxLength: 127
                    final_capture:
                        description: Indicates whether you can make additional captures against the authorized payment. Set to `true` if you do not intend to capture additional payments against the authorization. Set to `false` if you intend to capture additional payments against the authorization.
                        type: boolean
                        default: false
                    payment_instruction:
                        $ref: '#/components/schemas/payment_instruction'
                    note_to_payer:
                        description: An informational note about this settlement. Appears in both the payer's transaction history and the emails that the payer receives.
                        type: string
                        maxLength: 255
                    soft_descriptor:
                        description: The payment descriptor on the payer's account statement.
                        type: string
                        maxLength: 22
        capture-2:
            type: object
            title: Capture
            description: A captured payment.
            allOf:
                - $ref: '#/components/schemas/capture'
                - properties:
                    supplementary_data:
                        description: An object that provides supplementary/additional data related to a payment transaction.
                        readOnly: true
                        $ref: '#/components/schemas/supplementary_data'
                    payee:
                        description: The details associated with the merchant for this transaction.
                        $ref: '#/components/schemas/payee_base'
                        readOnly: true
        reauthorize_request:
            title: Reauthorize Request
            type: object
            description: Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. You can reauthorize a payment only once from days four to 29.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once. The allowed amount depends on context and geography, for example in US it is up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>
            properties:
                amount:
                    description: The amount to reauthorize for an authorized payment.
                    $ref: '#/components/schemas/money'
        authorizations.reauthorize-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                                    enum:
                                        - A required field / parameter is missing.
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is either too short or too long.
                            - title: INVALID_STRING_MAX_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_MAX_LENGTH
                                description:
                                    type: string
                                    enum:
                                        - The value of a field is too long.
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                                    enum:
                                        - The value of a field does not conform to the expected format.
        authorizations.reauthorize-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: INVALID_CURRENCY_CODE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_CURRENCY_CODE
                                description:
                                    type: string
                                    enum:
                                        - Currency code is invalid or is not currently supported. Please refer https://developer.paypal.com/docs/api/reference/currency-codes/ for list of supported currency codes.
                            - title: CANNOT_BE_ZERO_OR_NEGATIVE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_BE_ZERO_OR_NEGATIVE
                                description:
                                    type: string
                                    enum:
                                        - Must be greater than zero. If the currency supports decimals, only two decimal place precision is supported.
                            - title: DECIMAL_PRECISION
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DECIMAL_PRECISION
                                description:
                                    type: string
                                    enum:
                                        - If the currency supports decimals, only two decimal place precision is supported.
                            - title: DECIMALS_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DECIMALS_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - Currency does not support decimals. Please refer to https://developer.paypal.com/docs/api/reference/currency-codes/ for more information.
                            - title: TRANSACTION_REFUSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TRANSACTION_REFUSED
                                description:
                                    type: string
                                    enum:
                                        - PayPal's internal controls prevent authorization from being captured.
                            - title: AUTHORIZATION_VOIDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AUTHORIZATION_VOIDED
                                description:
                                    type: string
                                    enum:
                                        - 'A voided authorization cannot be captured or reauthorized. '
                            - title: PAYER_CANNOT_PAY
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYER_CANNOT_PAY
                                description:
                                    type: string
                                    enum:
                                        - Payer cannot pay for this transaction. Please contact the payer to find other ways to pay for this transaction.
                            - title: AUTHORIZATION_ALREADY_CAPTURED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AUTHORIZATION_ALREADY_CAPTURED
                                description:
                                    type: string
                                    enum:
                                        - Authorization has previously been captured.
                            - title: PAYEE_ACCOUNT_LOCKED_OR_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYEE_ACCOUNT_LOCKED_OR_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - Transaction could not complete because payee account is locked or closed.
                            - title: PAYER_ACCOUNT_LOCKED_OR_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYER_ACCOUNT_LOCKED_OR_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - The payer account cannot be used for this transaction.
                            - title: PAYEE_ACCOUNT_RESTRICTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYEE_ACCOUNT_RESTRICTED
                                description:
                                    type: string
                                    enum:
                                        - Payee account is restricted.
                            - title: REAUTHORIZATION_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REAUTHORIZATION_NOT_SUPPORTED
                                description:
                                    type: string
                                    enum:
                                        - A reauthorize cannot be attempted on an authorization_id that is the result of a prior reauthorization or on an authorization made on an Order saved using the `v2/orders/id/save` API.
                            - title: AUTH_CURRENCY_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - AUTH_CURRENCY_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - The currency specified during reauthorization should be the same as the currency specified in the original authorization. Please check the currency of the authorization for which you are trying to reauthorize and try again.
        authorizations.void-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: PREVIOUSLY_CAPTURED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PREVIOUSLY_CAPTURED
                                description:
                                    type: string
                                    enum:
                                        - Authorization has been previously captured and hence cannot be voided.
                            - title: PREVIOUSLY_VOIDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PREVIOUSLY_VOIDED
                                description:
                                    type: string
                                    enum:
                                        - Authorization has been previously voided and hence cannot be voided again.
                            - title: CANNOT_BE_VOIDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_BE_VOIDED
                                description:
                                    type: string
                                    enum:
                                        - A reauthorization cannot be voided. Please void the original parent authorization.
        payment_instruction-2:
            type: object
            title: Payment Instruction
            description: Any additional payments instructions during refund payment processing. This object is only applicable to merchants that have been enabled for PayPal Commerce Platform for Marketplaces and Platforms capability. Please speak to your account manager if you want to use this capability.
            properties:
                platform_fees:
                    type: array
                    description: Specifies the amount that the API caller will contribute to the refund being processed. The amount needs to be lower than platform_fees amount originally captured or the amount that is remaining if multiple refunds have been processed. This field is only applicable to merchants that have been enabled for PayPal Commerce Platform for Marketplaces and Platforms capability. Please speak to your account manager if you want to use this capability.
                    maxItems: 1
                    items:
                        $ref: '#/components/schemas/platform_fee'
        captures.refund-400:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: MISSING_REQUIRED_PARAMETER
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MISSING_REQUIRED_PARAMETER
                                description:
                                    type: string
                            - title: INVALID_PARAMETER_SYNTAX
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_PARAMETER_SYNTAX
                                description:
                                    type: string
                            - title: INVALID_STRING_LENGTH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_STRING_LENGTH
                                description:
                                    type: string
        captures.refund-422:
            properties:
                details:
                    type: array
                    items:
                        anyOf:
                            - title: CANNOT_BE_ZERO_OR_NEGATIVE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_BE_ZERO_OR_NEGATIVE
                                description:
                                    type: string
                            - title: DECIMAL_PRECISION
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DECIMAL_PRECISION
                                description:
                                    type: string
                            - title: DECIMALS_NOT_SUPPORTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DECIMALS_NOT_SUPPORTED
                                description:
                                    type: string
                            - title: INVALID_CURRENCY_CODE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - INVALID_CURRENCY_CODE
                                description:
                                    type: string
                            - title: CURRENCY_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CURRENCY_MISMATCH
                                description:
                                    type: string
                            - title: CANNOT_BE_NEGATIVE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CANNOT_BE_NEGATIVE
                                description:
                                    type: string
                            - title: CAPTURE_FULLY_REFUNDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - CAPTURE_FULLY_REFUNDED
                                description:
                                    type: string
                                    enum:
                                        - The capture has already been fully refunded
                            - title: REFUND_CAPTURE_CURRENCY_MISMATCH
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REFUND_CAPTURE_CURRENCY_MISMATCH
                                description:
                                    type: string
                                    enum:
                                        - Refund must be in the same currency as the capture
                            - title: REFUND_NOT_ALLOWED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REFUND_NOT_ALLOWED
                                description:
                                    type: string
                                    enum:
                                        - Capture cannot be refunded.
                            - title: REFUND_TIME_LIMIT_EXCEEDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REFUND_TIME_LIMIT_EXCEEDED
                                description:
                                    type: string
                                    enum:
                                        - You are over the time limit to perform a refund on this capture
                            - title: REFUND_AMOUNT_EXCEEDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REFUND_AMOUNT_EXCEEDED
                                description:
                                    type: string
                                    enum:
                                        - The refund amount must be less than or equal to the capture amount that has not yet been refunded.
                            - title: REFUND_AMOUNT_TOO_LOW
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REFUND_AMOUNT_TOO_LOW
                                description:
                                    type: string
                                    enum:
                                        - The amount after applying currency conversion is zero and hence the capture cannot be refunded. The currency conversion is required because the currency of the capture is different than the currency in which the amount was settled into the payee account.
                            - title: REFUND_FAILED_INSUFFICIENT_FUNDS
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REFUND_FAILED_INSUFFICIENT_FUNDS
                                description:
                                    type: string
                                    enum:
                                        - Capture could not be refunded due to insufficient funds. Please check to see if you have sufficient funds in your PayPal account or if the bank account linked to your PayPal account is verified and has sufficient funds.
                            - title: PARTIAL_REFUND_NOT_ALLOWED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PARTIAL_REFUND_NOT_ALLOWED
                                description:
                                    type: string
                                    enum:
                                        - You cannot do a refund less than the original capture amount.
                            - title: MAX_NUMBER_OF_REFUNDS_EXCEEDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - MAX_NUMBER_OF_REFUNDS_EXCEEDED
                                description:
                                    type: string
                                    enum:
                                        - You have exceeded the maximum number of refund attempts for this capture.
                            - title: PENDING_CAPTURE
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PENDING_CAPTURE
                                description:
                                    type: string
                                    enum:
                                        - Cannot initiate a refund as the capture is pending. Capture is typically pending when the payer has funded the transaction using e-check/bank funded.
                            - title: DUPLICATE_INVOICE_ID
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - DUPLICATE_INVOICE_ID
                                description:
                                    type: string
                                    enum:
                                        - Invoice ID was previously used to refund a capture.
                            - title: PAYEE_ACCOUNT_LOCKED_OR_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYEE_ACCOUNT_LOCKED_OR_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - Transaction could not complete because payee account is locked or closed.
                            - title: PAYER_ACCOUNT_LOCKED_OR_CLOSED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYER_ACCOUNT_LOCKED_OR_CLOSED
                                description:
                                    type: string
                                    enum:
                                        - The payer account cannot be used for this transaction.
                            - title: PAYEE_ACCOUNT_RESTRICTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PAYEE_ACCOUNT_RESTRICTED
                                description:
                                    type: string
                                    enum:
                                        - Payee account is restricted.
                            - title: REFUND_NOT_PERMITTED_DUE_TO_CHARGEBACK
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REFUND_NOT_PERMITTED_DUE_TO_CHARGEBACK
                                description:
                                    type: string
                                    enum:
                                        - Refunds are not allowed on this capture due to a chargeback on the card or bank. Please contact the payee to resolve the chargeback.
                            - title: TRANSACTION_DISPUTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - TRANSACTION_DISPUTED
                                description:
                                    type: string
                                    enum:
                                        - Partial refunds cannot be offered at this time because there is an open case on this transaction. Visit the PayPal Resolution Center to review this case.
                            - title: PLATFORM_FEE_EXCEEDED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PLATFORM_FEE_EXCEEDED
                                description:
                                    type: string
                                    enum:
                                        - Platform fee amount specified exceeds the amount that is available for refund. You can only refund up to the available platform fee amount. This error is also returned when no platform_fee was specified or was zero when the payment was captured.
                            - title: REFUND_IS_RESTRICTED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - REFUND_IS_RESTRICTED
                                description:
                                    type: string
                                    enum:
                                        - This refund can only be processed by the API caller that had 'captured' the transaction. If you facilitate your transactions via a platform/partner, please initiate a refund through them.
                            - title: PLATFORM_FEE_NOT_ENABLED
                              properties:
                                issue:
                                    type: string
                                    enum:
                                        - PLATFORM_FEE_NOT_ENABLED
                                description:
                                    type: string
                                    enum:
                                        - The API Caller account is not setup to be able to process refunds with 'platform_fees'. Please contact your Account Manager. This feature is useful when you want to contribute a portion of the 'platform_fees' you had capture as part of the refund being processed.
        sender_batch_header:
            type: object
            title: Sender Batch Header
            description: The sender-provided payout header for a payout request.
            properties:
                sender_batch_id:
                    type: string
                    description: A sender-specified ID number. Tracks the payout in an accounting system.<blockquote><strong>Note:</strong> <p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>. The API completes a payment only once for a <code>sender_batch_id</code> that is used within 30 days.</p></blockquote>
                    maxLength: 256
                    pattern: ^.*$
                recipient_type:
                    type: string
                    description: The ID type that identifies the recipient of the payment. For example, <code>EMAIL</code>.
                    maxLength: 13
                    pattern: ^.*$
                email_subject:
                    type: string
                    description: The subject line for the email that PayPal sends when payment for a payout item completes. The subject line is the same for all recipients. Value is an alphanumeric string of up to 255 single-byte characters.
                    maxLength: 255
                    pattern: ^.*$
                email_message:
                    type: string
                    description: The email message that PayPal sends when the payout item completes. The message is the same for all recipients.
                    maxLength: 1000
                    pattern: ^.*$
                note:
                    type: string
                    description: The payouts and item-level notes are concatenated in the email. The maximum combined length of the notes is 1000 characters.
                    maxLength: 1000
                    pattern: ^.*$
        alternate_notification_method:
            type: object
            title: Alternate Notification Method
            description: Captures additional notification modes to reach out to the receiver regarding this payment.
            properties:
                phone:
                    description: The mobile phone number of the receiver.
                    $ref: '#/components/schemas/phone'
        purpose_enum:
            type: string
            title: Purpose
            description: The purpose of the transaction.
            minLength: 1
            maxLength: 40
            pattern: ^[A-Z0-9_]+$
            enum:
                - AWARDS
                - PRIZES
                - DONATIONS
                - GOODS
                - SERVICES
                - REBATES
                - CASHBACK
                - DISCOUNTS
                - NON_GOODS_OR_SERVICES
        payout_item:
            type: object
            title: Payout Item
            description: The sender-created payout to a recipient.
            properties:
                recipient_type:
                    type: string
                    description: The recipient type. Value is:<ul><li><p><code>EMAIL</code>. The unencrypted email. Value is a string of up to 127 single-byte characters.</p></li><li><p><code>PHONE</code>. The unencrypted phone number.</p><blockquote><strong>Note:</strong> The PayPal sandbox does not support the <code>PHONE</code> recipient type.</blockquote></li><li><p><code>PAYPAL_ID</code>. The encrypted PayPal account number.</p></li><li><p><code>USER_HANDLE</code>. User handle (or) Username associated with Venmo account.</p></li></ul><br/>If the <code>sender_batch_header</code> includes the <code>recipient_type</code> attribute, payout items use the <code>recipient_type</code> of the <code>sender_batch_header</code>, unless a payout item has its own <code>recipient_type</code> attribute. If the <code>sender_batch_header</code> omits the <code>recipient_type</code> attribute, each payout item must include its own <code>recipient_type</code> value.
                    maxLength: 13
                    pattern: ^.*$
                amount:
                    description: The currency and amount to pay the receiver.
                    $ref: '#/components/schemas/currency'
                note:
                    type: string
                    description: The sender-specified note for notifications. Supports up to 4000 ASCII characters and 1000 non-ASCII characters.
                    maxLength: 4000
                    pattern: ^.*$
                receiver:
                    type: string
                    description: The receiver of the payment. Corresponds to the `recipient_type` value in the request. Max value of up to 127 single-byte characters.
                    maxLength: 127
                    pattern: ^.*$
                sender_item_id:
                    type: string
                    description: The sender-specified ID number. Tracks the payout in an accounting system.
                    maxLength: 63
                    pattern: ^.*$
                recipient_wallet:
                    type: string
                    description: The recipient wallet.
                    default: PAYPAL
                    maxLength: 36
                    pattern: ^.*$
                alternate_notification_method:
                    description: Captures additional notification modes to reach out to the receiver regarding this payment.
                    $ref: '#/components/schemas/alternate_notification_method'
                notification_language:
                    $ref: '#/components/schemas/language'
                    description: The language in which to show the payout recipient's email message. Used only when the recipient does not have a PayPal account. If you omit the language or provide invalid language and the recipient does not have a PayPal account, the email message is sent in the language of the merchant's PayPal account.
                application_context:
                    description: Metadata for accepting additional information from merchants to Venmo.
                    $ref: '#/components/schemas/application_context'
                purpose:
                    description: The purpose of the transaction.
                    $ref: '#/components/schemas/purpose_enum'
            required:
                - amount
                - receiver
        create_payout_request:
            type: object
            title: Create Payout Request
            description: The create payout request.
            properties:
                sender_batch_header:
                    description: The sender-provided payout header for a payout request.
                    $ref: '#/components/schemas/sender_batch_header'
                items:
                    type: array
                    description: An array of individual payout items.
                    maxItems: 15000
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/payout_item'
            required:
                - sender_batch_header
                - items
        batch_enum:
            title: Batch status
            description: The payouts status.
            type: string
            minLength: 1
            maxLength: 36
            pattern: ^[0-9A-Z_]+$
            enum:
                - DENIED
                - PENDING
                - PROCESSING
                - SUCCESS
                - CANCELED
        recipient_enum:
            title: Recipient type
            description: The ID type that identifies the payment receiver.
            type: string
            minLength: 1
            maxLength: 36
            pattern: ^[0-9A-Z_]+$
            enum:
                - EMAIL
                - PHONE
                - PAYPAL_ID
        payout_sender_batch_header:
            type: object
            title: Payout Sender Batch Header
            description: The sender-provided header for a payout request.
            properties:
                sender_batch_id:
                    type: string
                    description: The sender-specified ID number. Tracks the payout in an accounting system.<blockquote><strong>Note:</strong> <p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>. The API completes a payment only once for a <code>sender_batch_id</code> that is used within 30 days.</p></blockquote>
                    maxLength: 256
                    pattern: ^.*$
                recipient_type:
                    $ref: '#/components/schemas/recipient_enum'
                email_subject:
                    type: string
                    description: The subject line for the email that PayPal sends when payment for a payout item completes. The subject line is the same for all recipients. Value is an alphanumeric string with a maximum length of 255 single-byte characters.
                    maxLength: 255
                    pattern: ^.*$
                email_message:
                    type: string
                    description: The email message that PayPal sends when the payout item completes. The message is the same for all recipients.
                    maxLength: 1000
                    pattern: ^.*$
        payout_header:
            type: object
            title: Payout Header
            description: The payout header that is returned in response to a payout header request. Shows details for an entire payout request.
            properties:
                payout_batch_id:
                    type: string
                    description: The PayPal-generated ID for a payout.
                    maxLength: 30
                    pattern: ^.*$
                batch_status:
                    description: The PayPal-generated payout status. If the payout passes preliminary checks, the status is `PENDING`.
                    $ref: '#/components/schemas/batch_enum'
                time_created:
                    type: string
                    format: date-time
                    maxLength: 100
                    description: The date and time when processing for the payout began, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                sender_batch_header:
                    description: The original payout header, as provided by the payment sender.
                    $ref: '#/components/schemas/payout_sender_batch_header'
            required:
                - batch_status
                - payout_batch_id
                - sender_batch_header
        payout:
            type: object
            title: Create Payout Response
            description: The create payout response.
            properties:
                batch_header:
                    description: The payout header.
                    $ref: '#/components/schemas/payout_header'
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                    minItems: 1
                    maxItems: 15000
        funding_source:
            title: Funding source
            description: Identifies a funding source type.
            type: string
            minLength: 1
            maxLength: 36
            pattern: ^[0-9A-Z_]+$
            enum:
                - BALANCE
        payout_batch_header:
            type: object
            title: Payout Batch Header
            description: The payout header that is returned in response to a payout header request. Shows details for an entire payout request.
            properties:
                payout_batch_id:
                    type: string
                    description: The PayPal-generated ID for a payout.
                    maxLength: 30
                    pattern: ^.*$
                batch_status:
                    description: The PayPal-generated payout status. If the payout passes preliminary checks, the status is `PENDING`.
                    $ref: '#/components/schemas/batch_enum'
                time_created:
                    type: string
                    format: date-time
                    maxLength: 100
                    description: The date and time when processing for the payout began, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                time_completed:
                    type: string
                    format: date-time
                    description: The date and time when processing for the payout was completed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    maxLength: 100
                time_closed:
                    type: string
                    format: date-time
                    description: The date and time when the payout was closed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). A payout is considered closed when all items in a batch are processed and the available balance from the temporary hold is released.
                    maxLength: 100
                sender_batch_header:
                    description: The original payout header, as provided by the payment sender.
                    $ref: '#/components/schemas/payout_sender_batch_header'
                funding_source:
                    description: The ID to differentiate a PayPal balance-funded transaction from a PayPal treasury-funded transaction.
                    $ref: '#/components/schemas/funding_source'
                amount:
                    description: The currency and total amount requested for the payouts.
                    $ref: '#/components/schemas/currency'
                fees:
                    description: The currency and amount of the total estimate for the applicable payouts fees. Initially, the fee is `0`. The fee is populated after the payout moves to the `PROCESSING` state.
                    $ref: '#/components/schemas/currency'
            required:
                - payout_batch_id
                - batch_status
                - sender_batch_header
        transaction_enum:
            title: Transaction status
            description: The item transaction status.<blockquote><strong>Note:</strong> For <code>POST/v1/payments/payouts-item/{payout_item_id}/cancel</code>, the only possible <code>transaction_status</code> value is <code>RETURNED</code>.</blockquote>
            type: string
            minLength: 1
            maxLength: 36
            pattern: ^[0-9A-Z_]+$
            enum:
                - SUCCESS
                - FAILED
                - PENDING
                - UNCLAIMED
                - RETURNED
                - ONHOLD
                - BLOCKED
                - REFUNDED
                - REVERSED
        recipient_wallet_enum:
            title: Recipient wallet
            description: The wallet where the recipient receives the payout. Payouts to Venmo recipients require a 'note' string and a US mobile phone number.
            type: string
            default: PAYPAL
            minLength: 1
            maxLength: 36
            pattern: ^[0-9A-Z_]+$
            enum:
                - PAYPAL
                - VENMO
                - RECIPIENT_SELECTED
        payout_item_detail:
            type: object
            title: Payout Item Detail
            description: The details for a sender-created payout to a single recipient.
            properties:
                recipient_type:
                    $ref: '#/components/schemas/recipient_enum'
                amount:
                    description: The currency and amount of payout item. Might be an integer for currencies like `JPY` that are not typically fractional or a decimal fraction for currencies like `TND` that are subdivided into thousandths. For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html).
                    $ref: '#/components/schemas/currency'
                note:
                    type: string
                    description: The sender-specified note for notifications. Supports up to 4000 ASCII characters and 1000 non-ASCII characters.
                    maxLength: 4000
                    pattern: ^.*$
                receiver:
                    type: string
                    description: The receiver of the payment. Corresponds to the `recipient_type` value in the request.
                    maxLength: 127
                    pattern: ^.*$
                sender_item_id:
                    type: string
                    description: A sender-specified ID number. Tracks the payout in an accounting system.
                    maxLength: 63
                    pattern: ^.*$
                recipient_name:
                    description: The name of the recipient where money is credited. For `UNCLAIMED` payments, the recipient name is populated after the payment is claimed.
                    $ref: '#/components/schemas/name'
                recipient_wallet:
                    description: The recipient wallet.
                    $ref: '#/components/schemas/recipient_wallet_enum'
                purpose:
                    description: The purpose of the transaction.
                    $ref: '#/components/schemas/purpose_enum'
            required:
                - amount
                - receiver
        payout_currency_conversion:
            type: object
            title: Currency conversion resource
            description: The currency conversion resource.
            properties:
                from_amount:
                    $ref: '#/components/schemas/currency'
                    description: The amount that is converted from.
                to_amount:
                    $ref: '#/components/schemas/currency'
                    description: The amount that is converted to.
                exchange_rate:
                    type: string
                    description: The exchange rate that is applied for this payout.
                    pattern: ^.*$
                    maxLength: 30
        payout_batch_items:
            type: object
            title: Payout Item
            description: The payout item status and other details.
            properties:
                payout_item_id:
                    type: string
                    description: The ID for the payout item. Viewable when you show details for a payout.
                    maxLength: 30
                    pattern: ^.*$
                transaction_id:
                    type: string
                    description: The PayPal-generated ID for the transaction.
                    maxLength: 30
                    pattern: ^.*$
                activity_id:
                    type: string
                    description: The unique PayPal-generated common ID created to link sender side and receiver side transaction. Used for tracking.
                    maxLength: 30
                    pattern: ^.*$
                transaction_status:
                    $ref: '#/components/schemas/transaction_enum'
                payout_item_fee:
                    description: The fee, in U.S. dollars.
                    $ref: '#/components/schemas/currency'
                payout_batch_id:
                    type: string
                    description: The PayPal-generated ID for the payout.
                    maxLength: 30
                    pattern: ^.*$
                payout_item:
                    description: The sender-provided information for the payout item.
                    $ref: '#/components/schemas/payout_item_detail'
                currency_conversion:
                    description: The currency conversion applicable for this payout item.
                    $ref: '#/components/schemas/payout_currency_conversion'
                time_processed:
                    type: string
                    format: date-time
                    maxLength: 100
                    description: The date and time when this item was last processed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                errors:
                    $ref: '#/components/schemas/error'
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                    maxItems: 15000
            required:
                - payout_item_id
                - payout_batch_id
                - payout_item
        payout_batch:
            type: object
            title: Payout Batch
            description: The PayPal-generated batch status.
            properties:
                total_items:
                    description: The total number of items in the full result list.
                    type: integer
                    minimum: 0
                    maximum: 15000
                total_pages:
                    description: The total number of pages.
                    type: integer
                    minimum: 0
                    maximum: 1000
                batch_header:
                    description: A payout header. Includes the generated payout status.
                    $ref: '#/components/schemas/payout_batch_header'
                items:
                    type: array
                    description: An array of individual items.
                    items:
                        $ref: '#/components/schemas/payout_batch_items'
                    maxItems: 15000
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                    maxItems: 15000
        payout_item-2:
            type: object
            title: Payout Item
            description: The payout item status and other details. A <code>payout_item_id</code> helps you identify denied payments. If a payment is denied, you can use the <code>payout_item_id</code> to identify the payment even if it lacks a <code>transaction_id</code>.
            properties:
                payout_item_id:
                    type: string
                    description: The ID for the payout item. Visible when you show details for a payout.
                    maxLength: 30
                    pattern: ^.*$
                transaction_id:
                    type: string
                    description: The PayPal-generated ID for the transaction.
                    maxLength: 30
                    pattern: ^.*$
                activity_id:
                    type: string
                    description: The unique PayPal-generated common ID that links the sender- and receiver-side transactions. Used for tracking.
                    maxLength: 30
                    pattern: ^.*$
                transaction_status:
                    $ref: '#/components/schemas/transaction_enum'
                payout_item_fee:
                    description: The estimate for the payout fee. Initially, the fee is `0`. The fee is populated after the item moves to the `PENDING` state
                    $ref: '#/components/schemas/currency'
                payout_batch_id:
                    type: string
                    description: The PayPal-generated ID for the payout batch.
                    maxLength: 30
                    pattern: ^.*$
                sender_batch_id:
                    type: string
                    description: A sender-specified ID. Tracks the payout in an accounting system. Should be unique within 30 days.
                    maxLength: 256
                    pattern: ^.*$
                payout_item:
                    description: The sender-provided information for the payout item.
                    $ref: '#/components/schemas/payout_item_detail'
                currency_conversion:
                    description: The currency conversion applicable for this payout item.
                    $ref: '#/components/schemas/payout_currency_conversion'
                time_processed:
                    type: string
                    format: date-time
                    description: The date and time when this item was last processed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    minLength: 1
                    maxLength: 100
                errors:
                    $ref: '#/components/schemas/error'
                    description: The error details.
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                    maxItems: 15000
            required:
                - payout_item_id
                - payout_batch_id
                - payout_item
        shipping_info:
            type: object
            title: Shipping Information
            description: The shipping information.
            properties:
                name:
                    type: string
                    description: The recipient's name.
                    minLength: 1
                    maxLength: 500
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                method:
                    type: string
                    description: The shipping method that is associated with this order.
                    minLength: 1
                    maxLength: 500
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                address:
                    $ref: '#/components/schemas/address'
                    description: The shipping address that is associated with this order.
                secondary_shipping_address:
                    $ref: '#/components/schemas/address'
                    description: The secondary shipping address that is associated with this order.
        item_detail_tax_amount:
            type: object
            title: Tax Amount
            description: The tax levied by a government on the purchase of goods or services.
            properties:
                tax_amount:
                    $ref: '#/components/schemas/money'
                    description: The tax levied by a government on the purchase of goods or services.
        checkout_option:
            type: object
            title: Checkout Option
            description: A checkout option as a name-and-value pair.
            properties:
                checkout_option_name:
                    type: string
                    description: The checkout option name, such as `color` or `texture`.
                    minLength: 1
                    maxLength: 200
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                checkout_option_value:
                    type: string
                    description: The checkout option value. For example, the checkout option `color` might be `blue` or `red` while the checkout option `texture` might be `smooth` or `rippled`.
                    minLength: 1
                    maxLength: 200
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
        item_detail:
            type: object
            title: Item Details
            description: The item details.
            properties:
                item_code:
                    type: string
                    description: An item code that identifies a merchant's goods or service.
                    minLength: 1
                    maxLength: 1000
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                item_name:
                    type: string
                    description: The item name.
                    minLength: 1
                    maxLength: 200
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                item_description:
                    type: string
                    description: The item description.
                    minLength: 1
                    maxLength: 2000
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                item_options:
                    type: string
                    description: The item options. Describes option choices on the purchase of the item in some detail.
                    minLength: 1
                    maxLength: 4000
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                item_quantity:
                    type: string
                    description: The number of purchased units of goods or a service.
                    minLength: 1
                    maxLength: 4000
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                item_unit_price:
                    $ref: '#/components/schemas/money'
                    description: The cost for each instance of goods or a service.
                item_amount:
                    $ref: '#/components/schemas/money'
                    description: The amount of the payment for the item.
                discount_amount:
                    $ref: '#/components/schemas/money'
                    description: The reduction in price associated with goods or a service.
                adjustment_amount:
                    $ref: '#/components/schemas/money'
                    description: An increment or decrement to a purchase amount.
                gift_wrap_amount:
                    $ref: '#/components/schemas/money'
                    description: The amount of money charged for gift wrapping an item.
                tax_percentage:
                    $ref: '#/components/schemas/percentage'
                    description: A rate, expressed in hundreds, that is used to calculate a levy for the purchase of goods or services.
                    maxLength: 10
                    pattern: ^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$
                tax_amounts:
                    type: array
                    description: An array of tax amounts levied by a government on the purchase of goods or services.
                    maxItems: 32767
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/item_detail_tax_amount'
                        description: A tax levied by a government on the purchase of goods or services.
                basic_shipping_amount:
                    $ref: '#/components/schemas/money'
                    description: The delivery cost.
                extra_shipping_amount:
                    $ref: '#/components/schemas/money'
                    description: The cost for expedited delivery of the goods.
                handling_amount:
                    $ref: '#/components/schemas/money'
                    description: A charge for processing the purchase of goods or services.
                insurance_amount:
                    $ref: '#/components/schemas/money'
                    description: A charge for guaranteeing the quality of a product or delivery of a product.
                total_item_amount:
                    $ref: '#/components/schemas/money'
                    description: The sum of all factors, item cost, discounts, tax, shipping, and so on, that goes into the cost of an item.
                invoice_number:
                    type: string
                    description: The invoice number. An alphanumeric string that identifies a billing for a merchant.
                    minLength: 1
                    maxLength: 200
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                checkout_options:
                    type: array
                    description: An array of checkout options. Each option has a name and value.
                    items:
                        $ref: '#/components/schemas/checkout_option'
                        description: A checkout option as a name-and-value pair.
                    minItems: 1
                    maxItems: 32767
        cart_info:
            type: object
            title: Cart Information
            description: The cart information.
            properties:
                item_details:
                    type: array
                    description: An array of item details.
                    maxItems: 32767
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/item_detail'
                tax_inclusive:
                    type: boolean
                    description: Indicates whether the item amount or the shipping amount already includes tax.
                    default: false
                paypal_invoice_id:
                    type: string
                    description: The ID of the invoice. Appears for only PayPal-generated invoices.
                    minLength: 1
                    maxLength: 127
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
        store_info:
            type: object
            title: Store Information
            description: The store information.
            properties:
                store_id:
                    type: string
                    description: The ID of a store for a merchant in the system of record.
                    minLength: 1
                    maxLength: 100
                    pattern: ^[a-zA-Z0-9]*$
                terminal_id:
                    type: string
                    description: The terminal ID for the checkout stand in a merchant store.
                    minLength: 1
                    maxLength: 60
                    pattern: ^[a-zA-Z0-9]*$
        auction_info:
            type: object
            title: Auction Information
            description: The auction information.
            properties:
                auction_site:
                    type: string
                    description: The name of the auction site.
                    minLength: 1
                    maxLength: 200
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                auction_item_site:
                    type: string
                    description: The auction site URL.
                    minLength: 1
                    maxLength: 4000
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                auction_buyer_id:
                    type: string
                    description: The ID of the buyer who makes the purchase in the auction. This ID might be different from the payer ID provided for the payment.
                    minLength: 1
                    maxLength: 500
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                auction_closing_date:
                    description: The date and time when the auction closes, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_time'
        incentive_detail:
            type: object
            title: Incentive Details
            description: The incentive details.
            properties:
                incentive_type:
                    type: string
                    description: The type of incentive, such as a special offer or coupon.
                    minLength: 1
                    maxLength: 500
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                incentive_code:
                    type: string
                    description: The code that identifies an incentive, such as a coupon.
                    minLength: 1
                    maxLength: 200
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
                incentive_amount:
                    $ref: '#/components/schemas/money'
                    description: The incentive amount.
                incentive_program_code:
                    type: string
                    description: The incentive program code that identifies a merchant loyalty or incentive program.
                    minLength: 1
                    maxLength: 100
                    pattern: ^[a-zA-Z0-9_'\-., ":;\!?]*$
        incentive_info:
            type: object
            title: Incentive Information
            description: The incentive details.
            properties:
                incentive_details:
                    type: array
                    description: An array of incentive details.
                    items:
                        $ref: '#/components/schemas/incentive_detail'
                    maxItems: 32767
                    minItems: 1
        transaction_detail:
            type: object
            title: Transaction Details
            description: The transaction details.
            properties:
                transaction_info:
                    $ref: '#/components/schemas/transaction_info'
                    description: The transaction information.
                payer_info:
                    $ref: '#/components/schemas/payer_info'
                    description: The payer information.
                shipping_info:
                    $ref: '#/components/schemas/shipping_info'
                    description: The shipping information.
                cart_info:
                    $ref: '#/components/schemas/cart_info'
                    description: The cart information.
                store_info:
                    $ref: '#/components/schemas/store_info'
                    description: The store information.
                auction_info:
                    $ref: '#/components/schemas/auction_info'
                    description: The auction information.
                incentive_info:
                    $ref: '#/components/schemas/incentive_info'
                    description: The incentive information.
        search_response:
            type: object
            title: Search Response
            description: The search response information.
            properties:
                transaction_details:
                    type: array
                    maxItems: 2147483647
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/transaction_detail'
                    description: An array of transaction detail objects.
                account_number:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[a-zA-Z0-9]*$
                    description: The merchant account number.
                start_date:
                    description: The start date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_time'
                end_date:
                    description: The end date and time or the last date when the data can be served, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_time'
                last_refreshed_datetime:
                    description: The date and time when the data was last refreshed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_time'
                page:
                    type: integer
                    description: A zero-relative index of transactions.
                    maximum: 2147483647
                    minimum: 0
                total_items:
                    type: integer
                    description: The total number of transactions as an integer beginning with the specified `page` in the full result and not just in this response.
                    maximum: 2147483647
                    minimum: 0
                total_pages:
                    type: integer
                    description: The total number of pages, as an `integer`, when the `total_items` is divided into pages of the specified `page_size`.
                    maximum: 2147483647
                    minimum: 0
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
                    maxItems: 32767
                    minItems: 1
        balance_detail:
            type: object
            title: Balance Information
            description: The Balance information.
            properties:
                currency:
                    description: Currency Code of the balances listed.
                    $ref: '#/components/schemas/currency_code'
                primary:
                    type: boolean
                    description: Optional field representing if the currency is primary currency or not.
                total_balance:
                    description: The total amount in PayPal account. It is the sum of all the other balances.
                    $ref: '#/components/schemas/money'
                available_balance:
                    description: The amount of cash in an Account which is at the customer's disposal. This amount is captured at settlement cutoff time in the user's time zone as defined for the user.
                    $ref: '#/components/schemas/money'
                withheld_balance:
                    description: Balance withheld in the account. The portion of funds that PayPal holds for the customer that is not currently at the customer's disposal.
                    $ref: '#/components/schemas/money'
            required:
                - currency
                - total_balance
        balances_response:
            type: object
            title: Balances Response
            description: The balances response information.
            properties:
                balances:
                    type: array
                    description: An array of balance detail objects.
                    maxItems: 200
                    items:
                        $ref: '#/components/schemas/balance_detail'
                account_id:
                    $ref: '#/components/schemas/account_id'
                as_of_time:
                    description: The requested date and time or the last date and time when the balances can be served, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_time'
                last_refresh_time:
                    description: The date and time when the balances was last refreshed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
                    $ref: '#/components/schemas/date_time'
        tracking_number_type:
            type: string
            title: Tracking Number Type
            description: The tracking number type.
            minLength: 1
            maxLength: 64
            enum:
                - CARRIER_PROVIDED
                - E2E_PARTNER_PROVIDED
        tracking_status:
            type: string
            title: Tracking Status
            description: The status of the item shipment. For allowed values, see <a href="/docs/tracking/reference/shipping-status/">Shipping Statuses</a>.
            minLength: 1
            maxLength: 64
            enum:
                - CANCELLED
                - DELIVERED
                - LOCAL_PICKUP
                - ON_HOLD
                - SHIPPED
                - SHIPMENT_CREATED
                - DROPPED_OFF
                - IN_TRANSIT
                - RETURNED
                - LABEL_PRINTED
                - ERROR
                - UNCONFIRMED
                - PICKUP_FAILED
                - DELIVERY_DELAYED
                - DELIVERY_SCHEDULED
                - DELIVERY_FAILED
                - INRETURN
                - IN_PROCESS
                - NEW
                - VOID
                - PROCESSED
                - NOT_SHIPPED
                - COMPLETED
        carrier:
            type: string
            title: Carrier
            description: The carrier for the shipment. Some carriers have a global version as well as local subsidiaries. The subsidiaries are repeated over many countries and might also have an entry in the global list. Choose the carrier for your country. If the carrier is not available for your country, choose the global version of the carrier. If your carrier name is not in the list, set `carrier` to `OTHER` and set carrier name in `carrier_name_other`. For allowed values, see <a href="/docs/tracking/reference/carriers/">Carriers</a>.
            minLength: 1
            maxLength: 64
            enum:
                - 2EBOX
                - 360LION
                - 3JMSLOGISTICS
                - "4_72"
                - 6LS
                - A1POST
                - AAA_COOPER
                - ABCUSTOM
                - ABXEXPRESS_MY
                - ACOMMMERCE
                - ACSWORLDWIDE
                - ACS_GR
                - ADERONLINE
                - ADICIONAL
                - ADSONE
                - ADUIEPYLE
                - AERONET
                - AEX
                - AFLLOG_FTP
                - AGILITY
                - AIRMEE_WEBHOOK
                - AIR_CANADA_GLOBAL
                - ALFATREX
                - ALLIEDEXPRESS
                - ALLJOY
                - ALPHAFAST
                - ALWAYS_EXPRESS
                - AMAZON
                - AMAZON_FBA_SWISHIP
                - AMAZON_SHIP_MCF
                - AMSTAN
                - AMS_GRP
                - ANDREANI
                - ANICAM_BOX
                - ANJUN
                - ANSERX
                - AN_POST
                - AO_COURIER
                - AO_DEUTSCHLAND
                - APC_OVERNIGHT
                - APC_OVERNIGHT_CONNUM
                - APG
                - APRISAEXPRESS
                - AQUILINE
                - ARAMEX
                - ARAMEX_AU
                - ARCO_SPEDIZIONI
                - ARE_EMIRATES_POST
                - ARG_OCA
                - ARK_LOGISTICS
                - ASE
                - ASENDIA_HK
                - ASENDIA_UK
                - ASENDIA_USA
                - ASIGNA
                - AUPOST_CN
                - AUSTRIAN_POST_EXPRESS
                - AUS_STARTRACK
                - AUS_TOLL
                - AU_AUSTRIAN_POST
                - AU_AU_POST
                - AU_TNT
                - AVERITT
                - BEL_DHL
                - BEL_RS
                - BESTWAYPARCEL
                - BE_BPOST
                - BE_KIALA
                - BG_BULGARIAN_POST
                - BH_POSTA
                - BH_WORLDWIDE
                - BIRDSYSTEM
                - BJSHOMEDELIVERY
                - BLINKLASTMILE
                - BLR_BELPOST
                - BLUECARE
                - BLUESTAR
                - BLUEX
                - BNEED
                - BOMBINOEXP
                - BOND
                - BONDSCOURIERS
                - BORDEREXPRESS
                - BOX_BERRY
                - BPOST_INT
                - BRA_CORREIOS
                - BRING
                - BROUWER_TRANSPORT
                - BRT_IT
                - BRT_IT_PARCELID
                - BRT_IT_SENDER_REF
                - BUDBEE_WEBHOOK
                - BUYLOGIC
                - B_TWO_C_EUROPE
                - CAE_DELIVERS
                - CAINIAO
                - CARIBOU
                - CARRIERS
                - CARRY_FLAP
                - CA_CANADA_POST
                - CA_CANPAR
                - CA_GREYHOUND
                - CA_PUROLATOR
                - CBL_LOGISTICA
                - CDEK
                - CDEK_TR
                - CELERITAS
                - CELLO_SQUARE
                - CESKA_CZ
                - CEVA
                - CFL_LOGISTICS
                - CGS_EXPRESS
                - CHAMPION_LOGISTICS
                - CHITCHATS
                - CHOIR_EXP
                - CHROBINSON
                - CHRONOPOST_FR
                - CHUKOU1
                - CH_SWISS_POST_PRIORITY
                - CITYLINK_MY
                - CJPACKET
                - CJ_CENTURY
                - CJ_GLS
                - CJ_HK_INTERNATIONAL
                - CJ_INT_MY
                - CJ_KR
                - CJ_LOGISTICS
                - CJ_TH
                - CLEVY_LINKS
                - CLE_LOGISTICS
                - CLOUDWISH_ASIA
                - CNDEXPRESS
                - CNEXPS
                - CNWANGTONG
                - CN_17POST
                - CN_BESTEXPRESS
                - CN_BOXC
                - CN_CHINA_POST_EMS
                - CN_DPEX
                - CN_EMS
                - CN_EQUICK
                - CN_GOFLY
                - CN_JCEX
                - CN_PAYPAL_PACKAGE
                - CN_POST56
                - CN_SF_EXPRESS
                - CN_STO
                - CN_WEDO
                - CN_WISHPOST
                - CN_YUNDA
                - COLIS_PRIVE
                - COLLECTCO
                - COLLIVERY
                - COMET_TECH
                - CONTINENTAL
                - CON_WAY
                - COORDINADORA
                - COPA_COURIER
                - COPE
                - CORPORATECOURIERS_WEBHOOK
                - CORREOS_DE_MEXICO
                - CORREOS_ES
                - CORREOS_EXPRESS
                - CORREO_UY
                - COSTMETICSNOW
                - COURANT_PLUS
                - COUREX
                - COURIERS_PLEASE
                - CPACKET
                - CPEX
                - CROSHOT
                - CSE
                - CTC_EXPRESS
                - CUBYN
                - CUCKOOEXPRESS
                - CYPRUS_POST_CYP
                - DAIGLOBALTRACK
                - DAJIN
                - DANSKE_FRAGT
                - DAWN_WING
                - DAYTON_FREIGHT
                - DBSCHENKER_B2B
                - DBSCHENKER_SE
                - DBSCHENKER_SV
                - DDEXPRESS
                - DEALERSEND
                - DELIVERYONTIME
                - DELNEXT
                - DELTEC_UK
                - DEMANDSHIP
                - DESCARTES
                - DESIGNERTRANSPORT_WEBHOOK
                - DESTINY
                - DEX_I
                - DE_ASENDIA
                - DE_DEUTSCHE
                - DE_DEUTSCHE_POST_DHL_WITHIN_EUROPE_TRACKNET
                - DE_DHL_EXPRESS
                - DE_DPD_DELISTRACK
                - DE_GLS
                - DHL
                - DHL_ACTIVE_TRACING
                - DHL_AU
                - DHL_BENELUX
                - DHL_ECOMERCE_ASA
                - DHL_ES
                - DHL_FR
                - DHL_FREIGHT
                - DHL_GLOBAL_MAIL_ASIA
                - DHL_HK
                - DHL_JP
                - DHL_PARCEL_ES
                - DHL_PARCEL_NL
                - DHL_PARCEL_RU
                - DHL_PL
                - DHL_REFR
                - DHL_SG
                - DHL_SUPPLY_CHAIN
                - DHL_UK
                - DIAMOND_EUROGISTICS
                - DICOM
                - DIDADI
                - DIMERCO
                - DIRECTCOURIERS
                - DIRECTLOG
                - DIRECTPARCELS
                - DMM_NETWORK
                - DMS_MATRIX
                - DOBROPOST
                - DOORA
                - DOORDASH_WEBHOOK
                - DPD
                - DPD_DELISTRACK
                - DPD_FR
                - DPD_HGRY
                - DPD_HK
                - DPD_IR
                - DPD_LOCAL
                - DPD_LOCAL_REF
                - DPD_POLAND
                - DPD_RO
                - DPD_RU
                - DPEX
                - DPE_EXPRESS
                - DPE_SOUTH_AFRC
                - DSV
                - DTDC_AU
                - DTDC_EXPRESS
                - DTDC_IN
                - DTD_EXPR
                - DX_SFTP
                - DYLT
                - DYNALOGIC
                - EASY_MAIL
                - ECEXPRESS
                - ECHO
                - ECMS
                - ECOSCOOTING
                - EFEX
                - EFS
                - EKART
                - ELIAN_POST
                - EMPS_CN
                - ENDEAVOUR_DELIVERY
                - ENVIALIA_REFERENCE
                - EPARCEL_KR
                - EPST_GLBL
                - EP_BOX
                - ESHIPPING
                - ESP_ASM
                - ESP_ENVIALIA
                - ESP_MRW
                - ESP_NACEX
                - ESP_PACKLINK
                - ESP_REDUR
                - ETOMARS
                - ETOTAL
                - ETS_EXPRESS
                - EU_FLEET_SOLUTIONS
                - EU_IMX
                - EXPRESSSALE
                - EZSHIP
                - FARGOOD
                - FAR_INTERNATIONAL
                - FASTRACK
                - FASTRK_SERV
                - FASTWAY_IR
                - FASTWAY_NZ
                - FDSEXPRESS
                - FEDEX
                - FEDEX_CROSSBORDER
                - FEDEX_FR
                - FEDEX_INTL_MLSERV
                - FEDEX_POLAND
                - FEDEX_UK
                - FETCHR_WEBHOOK
                - FIEGE
                - FIEGE_NL
                - FIRSTMILE
                - FLASHEXPRESS
                - FMX
                - FONSEN
                - FORRUN
                - FREIGHTQUOTE
                - FRETERAPIDO
                - FR_BERT
                - FR_COLIS
                - FR_EXAPAQ
                - FR_GEODIS
                - FR_GLS
                - FULFILLA
                - FULFILLME
                - FURDECO
                - GAC
                - GANGBAO
                - GBA
                - GBS_BROKER
                - GB_APC
                - GB_ARROW
                - GB_NORSK
                - GB_PANTHER
                - GB_TUFFNELLS
                - GEIS
                - GEL_EXPRESS
                - GEMWORLDWIDE
                - GENERAL_OVERNIGHT
                - GENIKI_GR
                - GEODIS_ESPACE
                - GESWL
                - GIAO_HANG
                - GIO_EXPRESS
                - GLOBALTRANZ
                - GLOBAL_ABF
                - GLOBAL_ESTES
                - GLOBAL_EXPRESS
                - GLOBAL_IPARCEL
                - GLOBAL_TNT
                - GLOBAVEND
                - GLS_CROTIA
                - GLS_CZ
                - GLS_IT
                - GLS_ITALY
                - GLS_SLOV
                - GLS_SLOVEN
                - GOGLOBALPOST
                - GOJEK
                - GRAB_WEBHOOK
                - GRUPO
                - GR_ELTA
                - GSI_EXPRESS
                - GSO
                - HAPPY2POINT
                - HCT_LOGISTICS
                - HDB
                - HDB_BOX
                - HELLMANN
                - HELTHJEM
                - HEPPNER
                - HEPPNER_FR
                - HERMES
                - HERMES_2MANN_HANDLING
                - HERMES_DE
                - HH_EXP
                - HIPSHIPPER
                - HKD
                - HK_FLYT_EXPRESS
                - HK_FOUR_PX_EXPRESS
                - HK_POST
                - HK_TGX
                - HOLISOL
                - HOME_DELIVERY_SOLUTIONS
                - HOUNDEXPRESS
                - HRPARCEL
                - HRV_HRVATSKA
                - HUAHAN_EXPRESS
                - HUNTER_EXPRESS
                - HUODULL
                - HX_EXPRESS
                - IBEONE
                - ICUMULUS
                - IDEXPRESS
                - IDN_JNE
                - IDN_LION_PARCEL
                - IDN_PANDU
                - IML
                - INDOPAKET
                - IND_BLUEDART
                - IND_DELHIVERY
                - IND_DELIVREE
                - IND_DOTZOT
                - IND_ECOM
                - IND_FIRSTFLIGHT
                - IND_GATI
                - IND_GOJAVAS
                - IND_JAYONEXPRESS
                - IND_PROFESSIONAL_COURIERS
                - IND_SAFEEXPRESS
                - IND_XPRESSBEES
                - INPOST_PACZKOMATY
                - INTEGRA2_FTP
                - INTELIPOST
                - INTEL_VALLEY
                - INTERPARCEL_AU
                - INTERPARCEL_NZ
                - INTERPARCEL_UK
                - INTEXPRESS
                - ISRAEL_POST
                - ISR_POST_DOMESTIC
                - IT_DHL_ECOMMERCE
                - IT_FERCAM
                - IT_NEXIVE
                - IT_POSTE_ITALIA
                - IT_TNT
                - IVOY_WEBHOOK
                - I_DIKA
                - JANCO
                - JANIO
                - JERSEY_POST
                - JET_SHIP
                - JINDOUYUN
                - JINSUNG
                - JOCOM
                - JOOM_LOGIS
                - JOYING_BOX
                - JPN_JAPAN_POST
                - JPN_SAGAWA
                - JP_KURO_NEKO_YAMATO_UNYUU
                - JS_EXPRESS
                - JTEXPRESS
                - JTEXPRESS_VN
                - JX
                - J_NET
                - K1_EXPRESS
                - KANGAROO_MY
                - KEC
                - KERRYTJ
                - KERRYTTC_VN
                - KERRY_ECOMMERCE
                - KGMHUB
                - KHM_CAMBODIA_POST
                - KOR_ECARGO
                - KPOST
                - KR_KOREA_POST
                - KUEHNE
                - KURASI
                - KWE_GLOBAL
                - KWT
                - KYUNGDONG_PARCEL
                - KY_EXPRESS
                - LALAMOVE
                - LANDMARK_GLOBAL
                - LANDMARK_GLOBAL_REFERENCE
                - LAO_POST
                - LATVIJAS_PASTS
                - LA_POSTE_SUIVI
                - LBCEXPRESS_FTP
                - LEADER
                - LEGION_EXPRESS
                - LEXSHIP
                - LHT_EXPRESS
                - LICCARDI_EXPRESS
                - LIEFERY
                - LINE
                - LINKBRIDGE
                - LOCUS_WEBHOOK
                - LOGISTERS
                - LOGISTICSWORLDWIDE_HK
                - LOGISTIKA
                - LOGISTYX_TRANSGROUP
                - LONESTAR
                - LOOMIS_EXPRESS
                - LOTTE
                - LTIANEXP
                - LTL
                - LTU_LIETUVOS
                - MAGYAR_HU
                - MAILAMERICAS
                - MAILPLUS_JPN
                - MAIL_PLUS
                - MAINFREIGHT
                - MAINWAY
                - MARA_XPRESS
                - MATDESPATCH
                - MATKAHUOLTO
                - MBW
                - MEX_AEROFLASH
                - MEX_ESTAFETA
                - MEX_REDPACK
                - MEX_SENDA
                - MGLOBAL
                - MIKROPAKKET
                - MIKROPAKKET_BE
                - MILKMAN
                - MORE_LINK
                - MORNING_EXPRESS
                - MRW_FTP
                - MXE
                - MX_CARGO
                - MYHERMES
                - MYS_AIRPAK
                - MYS_EMS
                - MYS_GDEX
                - MYS_MYPOST_ONLINE
                - MYS_MYS_POST
                - MYS_SKYNET
                - M_XPRESS
                - NACEX
                - NACEX_ES
                - NANJINGWOYUAN
                - NATIONAL_SAMEDAY
                - NATIONEX
                - NATIONWIDE_MY
                - NEWAY
                - NEWEGGEXPRESS
                - NEWGISTICS
                - NEWZEALAND_COURIERS
                - NG_COURIERPLUS
                - NHANS_SOLUTIONS
                - NIM_EXPRESS
                - NINJAVAN_ID
                - NINJAVAN_MY
                - NINJAVAN_SG
                - NINJAVAN_THAI
                - NINJAVAN_WB
                - NIPOST_NG
                - NLD_DHL
                - NLD_GLS
                - NLD_POSTNL
                - NLD_TRANSMISSION
                - NOVA_POSHTA
                - NOVA_POSHTA_INT
                - NOX_NACHTEXPRESS
                - NOX_NIGHT_TIME_EXPRESS
                - NTLOGISTICS_VN
                - NZ_COURIER_POST
                - NZ_NZ_POST
                - OCS
                - OCS_WORLDWIDE
                - OKAYPARCEL
                - OMNIPARCEL
                - OMNIVA
                - ONECLICK
                - ONEWORLDEXPRESS
                - ORANGE_DS
                - OSM_WORLDWIDE
                - OVERSE_EXP
                - P2P_TRC
                - PAACK_WEBHOOK
                - PADTF
                - PAGO
                - PALEXPRESS
                - PALLETWAYS
                - PALLET_NETWORK
                - PANTHER_REFERENCE
                - PAN_ASIA
                - PAPERFLY
                - PAPER_EXPRESS
                - PAQUETEXPRESS
                - PARCEL2GO
                - PARCELINKLOGISTICS
                - PARCELLED_IN
                - PARCELONE
                - PARCELPAL_WEBHOOK
                - PARCELPOINT
                - PARCELPOST_SG
                - PARCEL_2_POST
                - PARKNPARCEL
                - PCFCORP
                - PFCEXPRESS
                - PFLOGISTICS
                - PHL_AIR21
                - PHL_AIRSPEED
                - PHL_JAMEXPRESS
                - PICKRR
                - PICKUP
                - PICKUPP_MYS
                - PICKUPP_SGP
                - PILOT_FREIGHT
                - PIL_LOGISTICS
                - PITNEY_BOWES
                - PITTOHIO
                - PIXSELL
                - PLANZER
                - PLUS_LOG_UK
                - PL_POCZTA_POLSKA
                - POL_SIODEMKA
                - PONY_EXPRESS
                - POSTA_PLUS
                - POSTA_RO
                - POSTA_UKR
                - POSTEN_NORGE
                - POSTI
                - POSTNL_INTL_3S
                - POSTNL_INT_3_S
                - POSTNORD_LOGISTICS
                - POSTNORD_LOGISTICS_DK
                - POSTUR_IS
                - POST_SERBIA
                - POST_SLOVENIA
                - PRESIDENT_TRANS
                - PRESSIODE
                - PRIMAMULTICIPTA
                - PROMEDDELIVERY
                - PRT_CHRONOPOST
                - PRT_CTT
                - PRT_INT_SEUR
                - PRT_SEUR
                - PTS
                - PTT_POST
                - QUANTIUM
                - QWINTRY
                - RABEN_GROUP
                - RAF_PH
                - RAIDEREX
                - RAM
                - RCL
                - RINCOS
                - RL_US
                - ROADBULL
                - ROADRUNNER_FREIGHT
                - ROCKET_PARCEL
                - ROUTIFIC_WEBHOOK
                - ROYAL_MAIL
                - RPD2MAN
                - RPX
                - RPXLOGISTICS
                - RPX_ID
                - RUSSIAN_POST
                - RUSTON
                - RZYEXPRESS
                - SAIA_FREIGHT
                - SAILPOST
                - SAP_EXPRESS
                - SAU_SAUDI_POST
                - SCUDEX_EXPRESS
                - SDA_IT
                - SDH_SCM
                - SEFL
                - SEINO
                - SEKOLOGISTICS
                - SEKO_SFTP
                - SENDING
                - SENDIT
                - SENDLE
                - SEUR_ES
                - SEUR_SP_API
                - SFB2C
                - SFCSERVICE
                - SFC_LOGISTICS
                - SFPLUS_WEBHOOK
                - SF_EX
                - SG_DETRACK
                - SG_QXPRESS
                - SG_SG_POST
                - SG_SPEEDPOST
                - SG_TAQBIN
                - SHENZHEN
                - SHIPENTEGRA
                - SHIPPIT
                - SHIPTER
                - SHIPTOR
                - SHIP_GATE
                - SHIP_IT_ASIA
                - SHOPFANS
                - SHREENANDANCOURIER
                - SHREETIRUPATI
                - SHREE_ANJANI_COURIER
                - SHREE_MARUTI
                - SIMPLYPOST
                - SINOTRANS
                - SIN_GLBL
                - SKYBOX
                - SKYNET_UAE
                - SKYNET_UK
                - SKYNET_WORLDWIDE
                - SKYNET_ZA
                - SKY_POSTAL
                - SK_POSTA
                - SMG_EXPRESS
                - SMOOTH
                - SMSA_EXPRESS
                - SONICTL
                - SOUTH_AFRICAN_POST_OFFICE
                - SPEEDCOURIERS_GR
                - SPEEDEE
                - SPEEDEXCOURIER
                - SPOTON
                - SPRING_GDS
                - SRE_KOREA
                - STALLIONEXPRESS
                - STARKEN
                - STAR_TRACK_EXPRESS
                - STAR_TRACK_NEXT_FLIGHT
                - STEPFORWARDFS
                - STONE3PL
                - STRECK_TRANSPORT
                - SUTTON
                - SWE_POSTNORD
                - SWISHIP_DE
                - SWISS_POST_FTP
                - SYPOST
                - SZENDEX
                - TAQBIN_HK
                - TAQBIN_MY
                - TARRIVE
                - TAZMANIAN_FREIGHT
                - TCK_EXPRESS
                - TCS
                - TFM
                - TFORCE_FINALMILE
                - THABIT_LOGISTICS
                - THA_DYNAMIC_LOGISTICS
                - THA_KERRY
                - THA_THAILAND_POST
                - THECOURIERGUY
                - THEDELIVERYGROUP
                - THENILE_WEBHOOK
                - TIGFREIGHT
                - TIKI_ID
                - TIPSA
                - TNT
                - TNT_CLICK_IT
                - TNT_FR
                - TNT_NL
                - TNT_REFR
                - TNT_UK
                - TNT_UK_REFR
                - TOLL
                - TOLL_NZ
                - TOLOS
                - TOPHATTEREXPRESS
                - TOPYOU
                - TOTAL_EXPRESS
                - TOURLINE
                - TRACKON
                - TRANS_KARGO
                - TRUMPCARD
                - TRUNKRS_WEBHOOK
                - TUFFNELLS_REFERENCE
                - TWO_GO
                - TW_TAIWAN_POST
                - UBI_LOGISTICS
                - UC_EXPRE
                - UDS
                - UK_COLLECTPLUS
                - UK_DPD
                - UK_NIGHTLINE
                - UK_PARCELFORCE
                - UK_UK_MAIL
                - UK_XDP
                - UK_YODEL
                - UPS
                - UPS_FREIGHT
                - UPS_MAIL_INNOVATIONS
                - UPS_REFERENCE
                - USF_REDDAWAY
                - USHIP
                - USPS
                - US_ENSENDA
                - US_GLOBEGISTICS
                - US_LASERSHIP
                - US_OLD_DOMINION
                - US_ONTRAC
                - US_YRC
                - VAMOX
                - VENIPAK
                - VIAEUROPE
                - VIA_EXPRESS
                - VIRTRANSPORT
                - VIWO
                - VNM_VIETNAM_POST
                - VNM_VIETTELPOST
                - WAHANA_ID
                - WANBEXPRESS
                - WEASHIP
                - WEPOST
                - WESTBANK_COURIER
                - WESTGATE_GL
                - WHISTL
                - WINIT
                - WISELOADS
                - WISE_EXPRESS
                - WIZMO
                - WMG
                - WNDIRECT
                - WYNGS
                - XDE_WEBHOOK
                - XDP_UK_REFERENCE
                - XL_EXPRESS
                - XPERT_DELIVERY
                - XPOST
                - XPO_LOGISTICS
                - XPRESSEN_DK
                - XQ_EXPRESS
                - YAKIT
                - YANWEN
                - YDH_EXPRESS
                - YINGNUO_LOGISTICS
                - YODEL_DIR
                - YODEL_INTNL
                - YTO
                - YUNEXPRESS
                - YURTICI_KARGO
                - YUSEN
                - ZAJIL_EXPRESS
                - ZA_COURIERIT
                - ZA_FASTWAY
                - ZA_SPECIALISED_FREIGHT
                - ZEEK_2_DOOR
                - ZELERIS
                - ZEPTO_EXPRESS
                - ZES_EXPRESS
                - ZIINGFINALMILE
                - ZINC
                - ZJS_EXPRESS
                - ZTO_EXPRESS
                - ZYLLEM
        tracker_collection:
            type: object
            title: Tracker Collection
            description: The add tracking information for one or more transactions response details.
            properties:
                trackers:
                    type: array
                    description: An array of tracking information for shipments.
                    items:
                        $ref: '#/components/schemas/tracker'
                    minItems: 1
                    maxItems: 20
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
        link_description-2:
            type: object
            title: Link Description
            description: The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.
            required:
                - href
                - rel
            properties:
                href:
                    type: string
                    description: The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call.
                rel:
                    type: string
                    description: The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml).
                method:
                    type: string
                    description: The HTTP method required to make the related call.
                    enum:
                        - GET
                        - POST
                        - PUT
                        - DELETE
                        - HEAD
                        - CONNECT
                        - OPTIONS
                        - PATCH
        tracker_identifier:
            type: object
            title: Tracking Identifier
            description: The tracking identifiers for a shipment.
            properties:
                transaction_id:
                    type: string
                    description: The PayPal transaction ID.
                    minLength: 1
                    maxLength: 50
                    pattern: ^[a-zA-Z0-9]*$
                tracking_number:
                    type: string
                    description: The tracking number for the shipment.
                    minLength: 1
                    maxLength: 64
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
            required:
                - transaction_id
        batch_tracker_collection:
            type: object
            title: Batch Tracker Collection
            description: The add tracking information for multiple PayPal transactions response details.
            properties:
                tracker_identifiers:
                    type: array
                    description: The batch header.
                    items:
                        $ref: '#/components/schemas/tracker_identifier'
                    minItems: 1
                    maxItems: 100
                errors:
                    type: array
                    description: An array of error responses.
                    items:
                        $ref: '#/components/schemas/error'
                    minItems: 1
                    maxItems: 100
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
        tracker_identifier_collection:
            type: object
            title: Tracker Identifier Collection
            description: The add tracking information for a PayPal transaction response details.
            properties:
                tracker_identifiers:
                    type: array
                    description: An array of tracking IDs.
                    items:
                        $ref: '#/components/schemas/tracker_identifier'
                    minItems: 1
                    maxItems: 100
                links:
                    type: array
                    description: An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/link_description'
                        readOnly: true
        address_entity: {}
        card_verification_status:
            title: Card Verification Status
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            description: Verification status of Card.
        3ds_result: {}
        card_verification_details:
            title: Card Verification Details
            type: object
            description: Card Verification details including the authorization details and 3D SECURE details.
            properties:
                network_transaction_id:
                    description: Transaction Identifier as given by the network to indicate a previously executed CIT authorization. Only present when authorization is successful for a verification.
                    type: string
                    minLength: 1
                    maxLength: 1024
                    pattern: ^[a-zA-Z0-9-_@.:&+=*^'~#!$%()]+$
                time:
                    description: The date and time when the instrument was verified.
                    readOnly: true
                    $ref: '#/components/schemas/date_time'
                amount:
                    description: The amount used for card verification.
                    $ref: '#/components/schemas/money'
                processor_response:
                    description: The processor information.
                    $ref: '#/components/schemas/processor_response'
                three_d_secure:
                    $ref: '#/components/schemas/3ds_result'
        wallet_base:
            type: object
            title: Vaulted Digital Wallet Common Attributes
            description: Resource consolidating common request and response attributes for vaulting a Digital Wallet.
            properties:
                description:
                    type: string
                    description: 'The description displayed to the consumer on the approval flow for a digital wallet, as well as on the merchant view of the payment token management experience. exp: PayPal.com.'
                    minLength: 1
                    maxLength: 128
                    pattern: ^[a-zA-Z0-9_'\-., :;\!?"]*$
                shipping:
                    description: The shipping address for the Payer.
                    $ref: '#/components/schemas/shipping_detail'
                permit_multiple_payment_tokens:
                    type: boolean
                    description: Create multiple payment tokens for the same payer, merchant/platform combination. Use this when the customer has not logged in at merchant/platform. The payment token thus generated, can then also be used to create the customer account at merchant/platform. Use this also when multiple payment tokens are required for the same payer, different customer at merchant/platform. This helps to identify customers distinctly even though they may share the same PayPal account. This only applies to PayPal payment source.
                    default: false
                usage_type:
                    type: string
                    description: The usage type associated with a digital wallet payment token.
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                customer_type:
                    type: string
                    description: The customer type associated with a digital wallet payment token. This is to indicate whether the customer acting on the merchant / platform is either a business or a consumer.
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
        venmo_response:
            title: Venmo Response
            description: Full representation of a Venmo Payment Token.
            type: object
            allOf:
                - $ref: '#/components/schemas/wallet_base'
                - readOnly: true
                  $ref: '#/components/schemas/payer'
                - properties:
                    user_name:
                        description: The Venmo username, as chosen by the user.
                        type: string
                        pattern: ^[-a-zA-Z0-9_]*$
                        minLength: 1
                        maxLength: 50
        apple_pay_card:
            type: object
            title: Apple Pay Card
            description: The payment card to be used to fund a payment. Can be a credit or debit card.
            allOf:
                - $ref: '#/components/schemas/card'
        apple_pay_payment_token_response:
            type: object
            title: Apple Pay Response
            description: A resource representing a response for Apple Pay.
            properties:
                card:
                    description: Card data for the card linked to the apple pay token.
                    $ref: '#/components/schemas/apple_pay_card'
        ach_debit_response: {}
        ach_debit_verification_status:
            description: The ach debit verification status.
            type: string
            default: NOT_VERIFIED
            minLength: 1
            maxLength: 255
        ach_debit_response-2:
            title: ACH Debit Response
            description: A Resource representing a response of vaulted a ACH Debit Account.
            allOf:
                - $ref: '#/components/schemas/ach_debit_response'
                - properties:
                    verification_status:
                        description: ACH Debit Verification Status
                        $ref: '#/components/schemas/ach_debit_verification_status'
        bank_response:
            title: Bank Response
            description: Full representation of a Bank Payment Token.
            type: object
            properties:
                ach_debit:
                    description: ACH Debit Response.
                    $ref: '#/components/schemas/ach_debit_response-2'
        payment_token_response:
            title: Payment Token Response
            description: Full representation of a saved payment token.
            type: object
            properties:
                id:
                    description: The PayPal-generated ID for the vault token.
                    $ref: '#/components/schemas/vault_id'
                customer:
                    description: Customer in merchant's or partner's system of records.
                    $ref: '#/components/schemas/customer'
                payment_source:
                    description: The vaulted payment method details.
                    type: object
                    properties:
                        card:
                            $ref: '#/components/schemas/card_response'
                        paypal:
                            $ref: '#/components/schemas/paypal_wallet_response'
                        venmo:
                            $ref: '#/components/schemas/venmo_response'
                        apple_pay:
                            $ref: '#/components/schemas/apple_pay_payment_token_response'
                        bank:
                            $ref: '#/components/schemas/bank_response'
                links:
                    description: An array of related [HATEOAS links](/api/rest/responses/#hateoas).
                    readOnly: true
                    type: array
                    minItems: 1
                    maxItems: 32
                    items:
                        $ref: '#/components/schemas/link_description'
        customer_vault_payment_tokens_response:
            title: Vault of a customer
            description: Collection of payment tokens saved for a given customer.
            properties:
                total_items:
                    type: integer
                    description: Total number of items.
                    minimum: 1
                    maximum: 50
                total_pages:
                    type: integer
                    description: Total number of pages.
                    minimum: 1
                    maximum: 10
                customer:
                    $ref: '#/components/schemas/customer'
                payment_tokens:
                    type: array
                    maxItems: 64
                    items:
                        description: Each token in this collection represents a payment token.
                        $ref: '#/components/schemas/payment_token_response'
                links:
                    description: An array of related [HATEOAS links](/api/rest/responses/#hateoas).
                    readOnly: true
                    type: array
                    minItems: 1
                    maxItems: 32
                    items:
                        $ref: '#/components/schemas/link_description'
        card_verification_method:
            title: Card Verification Method
            type: string
            description: The verification method of the card.
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
        vault_instruction:
            title: Vault Instruction
            type: string
            description: Vault Instruction on action to be performed after a successful payer approval.
            minLength: 1
            maxLength: 255
            pattern: ^[A-Z_]+$
            default: ON_CREATE_PAYMENT_TOKENS
        experience_context:
            type: object
            title: Experience Context
            description: Customizes the Vault creation flow experience for your customers.
            properties:
                brand_name:
                    type: string
                    description: The label that overrides the business name in the PayPal account on the PayPal site. The pattern is defined by an external party and supports Unicode.
                    minLength: 1
                    maxLength: 300
                    pattern: ^.*$
                locale:
                    description: The BCP 47-formatted locale of pages that the PayPal vaulting experience shows. PayPal supports a five-character code. For example, `DA-DK`, `HE-IL`, `ID-ID`, `JA-JP`, `NO-NO`, `PT-BR`, `RU-RU`, `SV-SE`, `TH-TH`, `ZH-CN`, `ZH-HK`, or `ZH-TW`.
                    $ref: '#/components/schemas/language'
                return_url:
                    type: string
                    format: uri
                    minLength: 1
                    maxLength: 4000
                    description: The URL where the customer is redirected after customer approves leaves the flow. It is a required field for contingency flows like PayPal wallet, 3DS.
                cancel_url:
                    type: string
                    format: uri
                    minLength: 1
                    maxLength: 4000
                    description: The URL where the customer is redirected after customer cancels or leaves the flow. It is a required field for contingency flows like PayPal wallet, 3DS.
                shipping_preference:
                    type: string
                    description: The shipping preference. This only applies to PayPal payment source.
                    default: GET_FROM_FILE
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_]+$
                vault_instruction:
                    description: Vault Instruction on action to be performed after a successful payer approval.
                    $ref: '#/components/schemas/vault_instruction'
        token_attributes: {}
        token_id_request:
            type: object
            title: Token Request
            description: The Tokenized Payment Source representing a Request to Vault a Token.
            properties:
                id:
                    type: string
                    description: The PayPal-generated ID for the token.
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_-]+$
                type:
                    type: string
                    description: The tokenization method that generated the ID.
                    minLength: 1
                    maxLength: 255
                    pattern: ^[0-9A-Z_-]+$
                    enum:
                        - BILLING_AGREEMENT
                attributes:
                    description: The auxiliary details of the token.
                    $ref: '#/components/schemas/token_attributes'
            required:
                - id
                - type
        payment_token_request:
            title: Payment Token Request
            description: Payment Token Request where the `source` defines the type of instrument to be stored.
            type: object
            properties:
                customer:
                    description: Customer in merchant's or partner's system of records.
                    $ref: '#/components/schemas/customer'
                payment_source:
                    title: Payment source request
                    description: The payment method to vault with the instrument details.
                    type: object
                    properties:
                        card:
                            $ref: '#/components/schemas/card_request'
                        token:
                            $ref: '#/components/schemas/token_id_request'
                metadata:
                    $ref: '#/components/schemas/metadata'
            required:
                - payment_source
        paypal_wallet_request:
            type: object
            title: PayPal Wallet Request
            description: A resource representing a request to vault PayPal Wallet.
            allOf:
                - $ref: '#/components/schemas/wallet_base'
                - properties:
                    experience_context:
                        $ref: '#/components/schemas/experience_context'
        venmo_request:
            type: object
            title: Venmo Request
            description: A resource representing a request to vault Venmo.
            allOf:
                - $ref: '#/components/schemas/wallet_base'
                - properties:
                    experience_context:
                        $ref: '#/components/schemas/experience_context'
        setup_token_request:
            title: Setup Token
            description: Setup Token Request where the `source` defines the type of instrument to be stored.
            type: object
            properties:
                customer:
                    description: Customer in merchant's or partner's system of records.
                    $ref: '#/components/schemas/customer'
                payment_source:
                    description: The payment method to vault with the instrument details.
                    properties:
                        card:
                            $ref: '#/components/schemas/card_request'
                        paypal:
                            $ref: '#/components/schemas/paypal_wallet_request'
                        venmo:
                            $ref: '#/components/schemas/venmo_request'
                        token:
                            $ref: '#/components/schemas/token_id_request'
                metadata:
                    $ref: '#/components/schemas/metadata'
            required:
                - payment_source
        ordinal:
            type: integer
            description: Ordinal number for sorting.
            minimum: 1
            maximum: 99
        payment_token_status:
            title: Payment Token Status
            type: string
            description: The status of the payment token.
            minLength: 1
            maxLength: 255
            pattern: ^[0-9A-Z_]+$
            default: CREATED
        setup_token_response:
            title: Minimal Setup Token
            description: Minimal representation of a cached setup token.
            type: object
            properties:
                id:
                    description: The PayPal-generated ID for the vault token.
                    $ref: '#/components/schemas/vault_id'
                ordinal:
                    description: The ordinal number of customers' payment source for sorting.
                    $ref: '#/components/schemas/ordinal'
                customer:
                    description: Customer in merchant's or partner's system of records.
                    $ref: '#/components/schemas/customer'
                status:
                    description: The status of the payment token.
                    $ref: '#/components/schemas/payment_token_status'
                payment_source:
                    description: The setup payment method details.
                    properties:
                        card:
                            $ref: '#/components/schemas/card_response'
                        paypal:
                            $ref: '#/components/schemas/paypal_wallet_response'
                        venmo:
                            $ref: '#/components/schemas/venmo_response'
                links:
                    description: An array of related [HATEOAS links](/api/rest/responses/#hateoas).
                    readOnly: true
                    type: array
                    minItems: 1
                    maxItems: 32
                    items:
                        $ref: '#/components/schemas/link_description'
    parameters:
        prefer:
            name: Prefer
            in: header
            description: The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>
            required: false
            schema:
                type: string
                default: return=minimal
        paypal_request_id:
            name: PayPal-Request-Id
            description: The server stores keys for 3 hours.
            in: header
            required: true
            schema:
                type: string
        product_id:
            name: product_id
            in: path
            required: true
            description: The product ID.
            schema:
                type: string
        plan_ids:
            name: plan_ids
            in: query
            description: Filters the response by list of plan IDs. Filter supports upto 10 plan IDs.
            required: false
            schema:
                type: string
                minimum: 3
                maximum: 270
        page_size:
            name: page_size
            description: A non-negative, non-zero integer indicating the maximum number of results to return at one time.
            in: query
            required: false
            schema:
                type: integer
                minimum: 1
                default: 5
        page:
            name: page
            description: A non-negative, non-zero integer representing the page of the results.
            in: query
            required: false
            schema:
                type: integer
                minimum: 1
                default: 1
        total_required:
            name: total_required
            description: A boolean indicating total number of items (total_items) and pages (total_pages) are expected to be returned in the response.
            in: query
            required: false
            schema:
                type: boolean
                default: false
        id:
            name: id
            description: ID of the setup token.
            in: path
            required: true
            schema:
                type: string
                minLength: 7
                maxLength: 36
                pattern: ^[0-9a-zA-Z_-]+$
        fields:
            name: fields
            in: query
            description: Indicates which fields appear in the response. Value is a single field or a comma-separated list of fields. The <code>transaction_info</code> value returns only the transaction details in the response. To include all fields in the response, specify <code>fields=all</code>. Valid fields are:<ul><li><a href="/docs/api/transaction-search/v1/#definition-transaction_info"><code>transaction_info</code></a>. The transaction information. Includes the ID of the PayPal account of the payee, the PayPal-generated transaction ID, the PayPal-generated base ID, the PayPal reference ID type, the transaction event code, the date and time when the transaction was initiated and was last updated, the transaction amounts including the PayPal fee, any discounts, insurance, the transaction status, and other information about the transaction.</li><li><a href="/docs/api/transaction-search/v1/#definition-payer_info"><code>payer_info</code></a>. The payer information. Includes the PayPal customer account ID and the payer's email address, primary phone number, name, country code, address, and whether the payer is verified or unverified.</li><li><a href="/docs/api/transaction-search/v1/#definition-shipping_info"><code>shipping_info</code></a>. The shipping information. Includes the recipient's name, the shipping method for this order, the shipping address for this order, and the secondary address associated with this order.</li><li><a href="/docs/api/transaction-search/v1/#definition-auction_info"><code>auction_info</code></a>. The auction information. Includes the name of the auction site, the auction site URL, the ID of the customer who makes the purchase in the auction, and the date and time when the auction closes.</li><li><a href="/docs/api/transaction-search/v1/#definition-cart_info"><code>cart_info</code></a>. The cart information. Includes an array of item details, whether the item amount or the shipping amount already includes tax, and the ID of the invoice for PayPal-generated invoices.</li><li><a href="/docs/api/transaction-search/v1/#definition-incentive_info"><code>incentive_info</code></a>. An array of incentive detail objects. Each object includes the incentive, such as a special offer or coupon, the incentive amount, and the incentive program code that identifies a merchant loyalty or incentive program.</li><li><a href="/docs/api/transaction-search/v1/#definition-store_info"><code>store_info</code></a>. The store information. Includes the ID of the merchant store and the terminal ID for the checkout stand in the merchant store.</li></ul>
            schema:
                type: string
                default: transaction_info
        start_time:
            name: start_time
            in: query
            description: The start date and time for the range to show in the response, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, `start_time=2016-03-06T11:00:00Z`.
            required: false
            schema:
                type: string
        end_time:
            name: end_time
            in: query
            description: The end date and time for the range to show in the response, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, `end_time=2016-03-06T11:00:00Z`.
            required: false
            schema:
                type: string
        paypal_partner_attribution_id:
            name: PayPal-Partner-Attribution-Id
            in: header
            required: false
            schema:
                type: string
                maxLength: 32
        order_id:
            name: order_id
            in: path
            description: The ID of the order to authorize.
            required: true
            schema:
                type: string
        paypal_client_metadata_id:
            name: PayPal-Client-Metadata-Id
            in: header
            required: false
            schema:
                type: string
                minLength: 1
                maxLength: 36
        paypal_auth_assertion:
            name: PayPal-Auth-Assertion
            in: header
            description: An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For details, see [PayPal-Auth-Assertion](/docs/api/reference/api-requests/#paypal-auth-assertion).<blockquote><strong>Note:</strong>For three party transactions in which a partner is managing the API calls on behalf of a merchant, the partner must identify the merchant using either a PayPal-Auth-Assertion header or an access token with target_subject.</blockquote>
            required: false
            schema:
                type: string
        tracker_id:
            name: tracker_id
            in: path
            description: The order tracking ID.
            required: true
            schema:
                type: string
                minLength: 1
                maxLength: 36
                pattern: ^[A-Z0-9]+$
        disputed_transaction_id:
            name: disputed_transaction_id
            in: query
            description: Filters the disputes in the response by a transaction, by ID.<br/><br/>You can specify either but not both the `start_time` and `disputed_transaction_id` query parameter.
            schema:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^[0-9A-Z_]+$
        next_page_token:
            name: next_page_token
            in: query
            description: The token that describes the next page of results to fetch. The <a href="/docs/api/customer-disputes/v1/#disputes_list">list disputes</a> call returns this token in the HATEOAS links in the response.
            deprecated: true
            schema:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^[A-Za-z0-9+\/=]+$
                default: The first page of data
        dispute_state:
            name: dispute_state
            in: query
            description: Filters the disputes in the response by a state. Separate multiple values with a comma (`,`). When you specify more than one dispute_state, the response lists disputes that belong to any of the specified dispute_state.
            schema:
                type: string
                minLength: 1
                maxLength: 2000
                pattern: ^[0-9A-Z_]+$
        update_time_before:
            name: update_time_before
            in: query
            description: The date and time when the dispute was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`. update_time_before must be within the last 180 days and the default is the current time.
            schema:
                type: string
                format: ppaas_date_time_v3
                minLength: 20
                maxLength: 64
                pattern: ^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$
        update_time_after:
            name: update_time_after
            in: query
            description: The date and time when the dispute was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`. update_time_after must be within the last 180 days and the default is the maximum time (180 days) supported.
            schema:
                type: string
                format: ppaas_date_time_v3
                minLength: 20
                maxLength: 64
                pattern: ^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$
        partner_referral_id:
            name: partner_referral_id
            in: path
            description: The ID of the partner-referrals data for which to show details.
            required: true
            schema:
                type: string
        partner_id:
            name: partner_id
            in: path
            description: The ID of the partner for which to show onboarded seller's credentials, which is the partner's PayPal account number. To find this ID, log in to the partner's PayPal business account. Navigate to **Profile**, click **Profile and settings**, and click **My business info**. The account number appears in the **Merchant account ID** section.
            required: true
            schema:
                type: string
        tracking_id:
            name: tracking_id
            in: query
            description: Filters the sellers in the response by this partner-provided seller ID (`merchant_id`).
            required: true
            schema:
                type: string
        merchant_id:
            name: merchant_id
            in: path
            description: The ID of the seller for which to show status information.
            required: true
            schema:
                type: string
        country_code:
            name: country_code
            in: query
            description: The country code to load region preferences.
            schema:
                type: string
                minLength: 2
                maxLength: 2
                pattern: ^([a-zA-Z]{2})$
        product:
            name: product
            in: query
            description: The product to load region and integration preferences.
            schema:
                type: string
                minLength: 1
                maxLength: 20
                pattern: ^.*$
        content_type:
            name: Content-type
            in: header
            description: The Content-type header MUST be described in all externally-accessible APIs.
            schema:
                type: string
                minLength: 1
                maxLength: 4000
                pattern: ^.*$
        x_paypal_security_context:
            name: X-PAYPAL-SECURITY-CONTEXT
            in: header
            description: The X-PAYPAL-SECURITY-CONTEXT header MUST be described in all externally-accessible APIs.
            schema:
                type: string
                minLength: 1
                maxLength: 4000
                pattern: ^.*$
        total_count_required:
            name: total_count_required
            in: query
            description: Indicates whether to show the total count in the response.
            schema:
                type: boolean
                default: false
        invoice_id:
            name: invoice_id
            in: path
            required: true
            description: The ID of the draft invoice to delete.
            schema:
                type: string
        notify_merchant:
            name: notify_merchant
            in: query
            description: Indicates whether to send the invoice update notification to the merchant.
            schema:
                type: boolean
                default: true
        transaction_id:
            name: transaction_id
            in: query
            description: Filters the tracking information that appears in the response by a PayPal transaction ID.
            required: true
            schema:
                type: string
        width:
            name: width
            in: query
            description: The width, in pixels, of the QR code image. Value is from `150` to `500`.
            schema:
                type: integer
                default: 500
        height:
            name: height
            in: query
            description: The height, in pixels, of the QR code image. Value is from `150` to `500`.
            schema:
                type: integer
                default: 500
        template_id:
            name: template_id
            in: path
            required: true
            description: The ID of the template to delete.
            schema:
                type: string
        send_to_recipient:
            name: send_to_recipient
            in: query
            description: Indicates whether to send the invoice update notification to the recipient.
            schema:
                type: boolean
                default: true
        send_to_invoicer:
            name: send_to_invoicer
            in: query
            description: Indicates whether to send the invoice update notification to the merchant.
            schema:
                type: boolean
                default: true
        anchor_type:
            name: anchor_type
            in: query
            description: Filters the webhooks in the response by an `anchor_id` entity type.
            schema:
                type: string
                enum:
                    - APPLICATION
                    - ACCOUNT
                default: APPLICATION
        webhook_id:
            name: webhook_id
            in: path
            description: The ID of the webhook for which to list subscriptions.
            required: true
            schema:
                type: string
        webhook_lookup_id:
            name: webhook_lookup_id
            in: path
            description: The ID of the webhook lookup to delete.
            required: true
            schema:
                type: string
        event_type:
            name: event_type
            in: query
            description: Filters the response to a single event.
            schema:
                type: string
        event_id:
            name: event_id
            in: path
            description: The ID of the webhook event notification to resend.
            required: true
            schema:
                type: string
                maxLength: 50
                pattern: ^[a-zA-Z0-9]+$
        count:
            name: count
            in: query
            description: The number of items to list in the response.
            required: false
            schema:
                type: integer
                maximum: 20
                default: 10
        start_id:
            name: start_id
            in: query
            description: The ID of the starting resource in the response. When results are paged, you can use the `next_id` value as the `start_id` to continue with the next set of results.
            required: false
            schema:
                type: string
        start_index:
            name: start_index
            in: query
            description: The start index of the payments to list. Typically, you use the `start_index` to jump to a specific position in the resource history based on its cart. For example, to start at the second item in a list of results, specify `?start_index=2`.
            required: false
            schema:
                type: integer
        payee_id:
            name: payee_id
            in: query
            description: Filters the payments in the response by a PayPal-assigned merchant ID that identifies the payee.
            required: false
            schema:
                type: string
        sort_by:
            name: sort_by
            in: query
            description: Sorts the payments in the response by a create time.
            required: false
            schema:
                type: string
                enum:
                    - create_time
        sort_order:
            name: sort_order
            in: query
            description: Sorts the payments in the response in descending order.
            required: false
            schema:
                type: string
                enum:
                    - desc
        payment_id:
            name: payment_id
            in: path
            description: The ID of the payment to execute.
            required: true
            schema:
                type: string
        sale_id:
            name: sale_id
            in: path
            description: The ID of the sale transaction to refund.
            required: true
            schema:
                type: string
        authorization_id:
            name: authorization_id
            in: path
            description: The PayPal-generated ID for the authorized payment to void.
            required: true
            schema:
                type: string
        capture_id:
            name: capture_id
            in: path
            description: The PayPal-generated ID for the captured payment to refund.
            required: true
            schema:
                type: string
        refund_id:
            name: refund_id
            in: path
            description: The PayPal-generated ID for the refund for which to show details.
            required: true
            schema:
                type: string
        payout_item_id:
            name: payout_item_id
            in: path
            description: The ID of the payout item to cancel.
            required: true
            schema:
                type: string
                minLength: 1
                maxLength: 32
                pattern: ^.*$
        transaction_type:
            name: transaction_type
            in: query
            description: Filters the transactions in the response by a PayPal transaction event code. See [Transaction event codes](/docs/integration/direct/transaction-search/transaction-event-codes/).
            schema:
                type: string
        transaction_status:
            name: transaction_status
            in: query
            description: Filters the transactions in the response by a PayPal transaction status code. Value is:<table><thead><tr><th>Status&nbsp;code</th><th>Description</th></tr></thead><tbody><tr><td><code>D</code></td><td>PayPal or merchant rules denied the transaction.</td></tr><tr><td><code>P</code></td><td>The transaction is pending. The transaction was created but waits for another payment process to complete, such as an ACH transaction, before the status changes to <code>S</code>.</td></tr><tr><td><code>S</code></td><td>The transaction successfully completed without a denial and after any pending statuses.</td></tr><tr><td><code>V</code></td><td>A successful transaction was reversed and funds were refunded to the original sender.</td></tr></tbody></table>
            schema:
                type: string
        transaction_amount:
            name: transaction_amount
            in: query
            description: Filters the transactions in the response by a gross transaction amount range. Specify the range as `<start-range> TO <end-range>`, where `<start-range>` is the lower limit of the gross PayPal transaction amount and `<end-range>` is the upper limit of the gross transaction amount. Specify the amounts in lower denominations. For example, to search for transactions from $5.00 to $10.05, specify `[500 TO 1005]`.<blockquote><strong>Note:</strong>The values must be URL encoded.</blockquote>
            schema:
                type: string
        transaction_currency:
            name: transaction_currency
            in: query
            description: Filters the transactions in the response by a [three-character ISO-4217 currency code](/api/rest/reference/currency-codes/) for the PayPal transaction currency.
            schema:
                type: string
        start_date:
            name: start_date
            in: query
            description: Filters the transactions in the response by a start date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required. Fractional seconds are optional.
            required: true
            schema:
                type: string
                minLength: 20
                maxLength: 64
                pattern: ^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$
        end_date:
            name: end_date
            in: query
            description: Filters the transactions in the response by an end date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required. Fractional seconds are optional. The maximum supported range is 31 days.
            required: true
            schema:
                type: string
                minLength: 20
                maxLength: 64
                pattern: ^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$
        payment_instrument_type:
            name: payment_instrument_type
            in: query
            description: Filters the transactions in the response by a payment instrument type. Value is either:<ul><li><code>CREDITCARD</code>. Returns a direct credit card transaction with a corresponding value.</li><li><code>DEBITCARD</code>. Returns a debit card transaction with a corresponding value.</li></ul>If you omit this parameter, the API does not apply this filter.
            required: false
            schema:
                type: string
        store_id:
            name: store_id
            in: query
            description: Filters the transactions in the response by a store ID.
            schema:
                type: string
        terminal_id:
            name: terminal_id
            in: query
            description: Filters the transactions in the response by a terminal ID.
            schema:
                type: string
        balance_affecting_records_only:
            name: balance_affecting_records_only
            in: query
            description: Indicates whether the response includes only balance-impacting transactions or all transactions. Value is either:<ul><li><code>Y</code>. The default. The response includes only balance transactions.</li><li><code>N</code>. The response includes all transactions.</li></ul>
            schema:
                type: string
                default: Y
        as_of_time:
            name: as_of_time
            in: query
            description: List balances in the response at the date time provided, will return the last refreshed balance in the system when not provided.
            schema:
                type: string
                minLength: 20
                maxLength: 64
                pattern: ^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$
        currency_code:
            name: currency_code
            in: query
            description: Filters the transactions in the response by a [three-character ISO-4217 currency code](/api/rest/reference/currency-codes/) for the PayPal transaction currency.
            schema:
                type: string
                format: ppaas_common_currency_code_v2
                minLength: 3
                maxLength: 3
        tracking_number:
            name: tracking_number
            in: query
            description: Filters the tracking information that appears in the response by a tracking number.
            required: false
            schema:
                type: string
        account_id:
            name: account_id
            in: query
            description: Encrypted PayPal Account ID of the buyer or seller.
            required: false
            schema:
                type: string
                minLength: 13
                maxLength: 13
                pattern: ^[2-9A-HJ-NP-Z]{13}$
        customer_id:
            name: customer_id
            description: A unique identifier representing a specific customer in merchant's/partner's system or records.
            in: query
            required: true
            schema:
                type: string
                minLength: 7
                maxLength: 36
                pattern: ^[0-9a-zA-Z_-]+$
    examples:
        invoice:
            value:
                detail:
                    invoice_number: '#123'
                    reference: deal-ref
                    invoice_date: "2018-11-12"
                    currency_code: USD
                    note: Thank you for your business.
                    term: No refunds after 30 days.
                    memo: This is a long contract
                    payment_term:
                        term_type: NET_10
                        due_date: "2018-11-22"
                invoicer:
                    name:
                        given_name: David
                        surname: Larusso
                    address:
                        address_line_1: 1234 First Street
                        address_line_2: 337673 Hillside Court
                        admin_area_2: Anytown
                        admin_area_1: CA
                        postal_code: "98765"
                        country_code: US
                    email_address: merchant@example.com
                    phones:
                        - country_code: "001"
                          national_number: "4085551234"
                          phone_type: MOBILE
                    website: www.test.com
                    tax_id: ABcNkWSfb5ICTt73nD3QON1fnnpgNKBy- Jb5SeuGj185MNNw6g
                    logo_url: https://example.com/logo.PNG
                    additional_notes: 2-4
                primary_recipients:
                    - billing_info:
                        name:
                            given_name: Stephanie
                            surname: Meyers
                        address:
                            address_line_1: 1234 Main Street
                            admin_area_2: Anytown
                            admin_area_1: CA
                            postal_code: "98765"
                            country_code: US
                        email_address: bill-me@example.com
                        phones:
                            - country_code: "001"
                              national_number: "4884551234"
                              phone_type: HOME
                        additional_info_value: add-info
                      shipping_info:
                        name:
                            given_name: Stephanie
                            surname: Meyers
                        address:
                            address_line_1: 1234 Main Street
                            admin_area_2: Anytown
                            admin_area_1: CA
                            postal_code: "98765"
                            country_code: US
                items:
                    - name: Yoga Mat
                      description: Elastic mat to practice yoga.
                      quantity: "1"
                      unit_amount:
                        currency_code: USD
                        value: "50.00"
                      tax:
                        name: Sales Tax
                        percent: "7.25"
                      discount:
                        percent: "5"
                      unit_of_measure: QUANTITY
                    - name: Yoga t-shirt
                      quantity: "1"
                      unit_amount:
                        currency_code: USD
                        value: "10.00"
                      tax:
                        name: Sales Tax
                        percent: "7.25"
                      discount:
                        amount:
                            currency_code: USD
                            value: "5.00"
                      unit_of_measure: QUANTITY
                configuration:
                    partial_payment:
                        allow_partial_payment: true
                        minimum_amount_due:
                            currency_code: USD
                            value: "20.00"
                    allow_tip: true
                    tax_calculated_after_discount: true
                    tax_inclusive: false
                    template_id: TEMP-19V05281TU309413B
                amount:
                    breakdown:
                        custom:
                            label: Packing Charges
                            amount:
                                currency_code: USD
                                value: "10.00"
                        shipping:
                            amount:
                                currency_code: USD
                                value: "10.00"
                            tax:
                                name: Sales Tax
                                percent: "7.25"
                        discount:
                            invoice_discount:
                                percent: "5"
        invoice_draft:
            value:
                id: INV2-C82X-JNN9-Y6S5-CNXW
                status: DRAFT
                detail:
                    invoice_number: '#123'
                    reference: deal-refernce-update
                    invoice_date: "2018-11-12"
                    currency_code: USD
                    note: Thank you for your business.
                    term: No refunds after 30 days.
                    memo: This is a long contract
                    payment_term:
                        term_type: NET_10
                        due_date: "2018-11-22"
                invoicer:
                    name:
                        given_name: David
                        surname: Larusso
                    address:
                        address_line_1: 1234 First Street
                        address_line_2: 337673 Hillside Court
                        admin_area_2: Anytown
                        admin_area_1: CA
                        postal_code: "98765"
                        country_code: US
                    email_address: merchant@example.com
                    phones:
                        - country_code: "001"
                          national_number: "4085551234"
                          phone_type: MOBILE
                    website: www.test.com
                    tax_id: ABcNkWSfb5ICTt73nD3QON1fnnpgNKBy-Jb5SeuGj185MNNw6g
                    logo_url: https://example.com/logo.PNG
                    additional_notes: 2-4
                primary_recipients:
                    - billing_info:
                        name:
                            given_name: Stephanie
                            surname: Meyers
                        address:
                            address_line_1: 1234 Main Street
                            admin_area_2: Anytown
                            admin_area_1: CA
                            postal_code: "98765"
                            country_code: US
                        email_address: bill-me@example.com
                        phones:
                            - country_code: "001"
                              national_number: "4884551234"
                              phone_type: HOME
                        additional_info_value: add-info
                      shipping_info:
                        name:
                            given_name: Stephanie
                            surname: Meyers
                        address:
                            address_line_1: 1234 Main Street
                            admin_area_2: Anytown
                            admin_area_1: CA
                            postal_code: "98765"
                            country_code: US
                items:
                    - name: Yoga Mat
                      description: Elastic mat to practice yoga.
                      quantity: "1"
                      unit_amount:
                        currency_code: USD
                        value: "50.00"
                      tax:
                        name: Sales Tax
                        percent: "7.25"
                        amount:
                            currency_code: USD
                            value: "3.27"
                      discount:
                        percent: "5"
                        amount:
                            currency_code: USD
                            value: "2.5"
                      unit_of_measure: QUANTITY
                    - name: Yoga t-shirt
                      quantity: "1"
                      unit_amount:
                        currency_code: USD
                        value: "10.00"
                      tax:
                        name: Sales Tax
                        percent: "7.25"
                        amount:
                            currency_code: USD
                            value: "0.34"
                      discount:
                        amount:
                            currency_code: USD
                            value: "5.00"
                      unit_of_measure: QUANTITY
                configuration:
                    partial_payment:
                        allow_partial_payment: true
                        minimum_amount_due:
                            currency_code: USD
                            value: "20.00"
                    allow_tip: true
                    tax_calculated_after_discount: true
                    tax_inclusive: false
                    template_id: TEMP-19V05281TU309413B
                amount:
                    currency_code: USD
                    value: "74.21"
                    breakdown:
                        item_total:
                            currency_code: USD
                            value: "60.00"
                        custom:
                            label: Packing Charges
                            amount:
                                currency_code: USD
                                value: "10.00"
                        shipping:
                            amount:
                                currency_code: USD
                                value: "10.00"
                            tax:
                                name: Sales Tax
                                percent: "7.25"
                                amount:
                                    currency_code: USD
                                    value: "0.73"
                        discount:
                            item_discount:
                                currency_code: USD
                                value: "-7.50"
                            invoice_discount:
                                percent: "5"
                                amount:
                                    currency_code: USD
                                    value: "-2.63"
                        tax_total:
                            currency_code: USD
                            value: "4.34"
        payment_detail:
            value:
                method: BANK_TRANSFER
                payment_date: "2018-05-01"
                amount:
                    currency_code: USD
                    value: "10.00"
        refund_detail:
            value:
                method: BANK_TRANSFER
                refund_date: "2018-05-21"
                amount:
                    currency_code: USD
                    value: "5.00"
        qr_config:
            value:
                width: 400
                height: 400
        search_data:
            value:
                total_amount_range:
                    lower_amount:
                        currency_code: USD
                        value: "50.00"
                    upper_amount:
                        currency_code: USD
                        value: "50.00"
                invoice_date_range:
                    start: "2018-06-01"
                    end: "2018-06-21"
        template:
            value:
                default_template: true
                template_info:
                    configuration:
                        tax_calculated_after_discount: true
                        tax_inclusive: false
                        allow_tip: true
                        partial_payment:
                            allow_partial_payment: true
                            minimum_amount_due:
                                currency_code: USD
                                value: "20.00"
                    detail:
                        reference: deal-ref
                        note: Thank you for your business.
                        currency_code: USD
                        terms_and_conditions: No refunds after 30 days.
                        memo: This is a long contract
                        attachments:
                            - id: Screen Shot 2018-11-23 at 16.45.01.png
                              reference_url: https://api-m.paypal.com/invoice/payerView/attachments/RkG9ggQbd4Mwm1tYdcF6uuixfFTFq32bBdbE1VbtQLdKSoS2ZOYpfjw9gPp7eTrZmVaFaDWzixHXm-OXWHbmigHigHzURDxJs8IIKqcqP8jawnBEZcraEAPVMULxf5iTyOSpAUc2ugW0PWdwDbM6mg-guFAUyj3Z98H7htWNjQY95jb9heOlcSXUe.sbDUR9smAszzzJoA1NXT6rEEegwQ&version=1&sig=JNODB0xEayW8txMQm6ZsIwDnd4eh3hd6ijiRLi4ipHE
                        payment_term:
                            term_type: NET_10
                    invoicer:
                        name:
                            given_name: David
                            surname: Larusso
                        address:
                            address_line_1: 1234 First Street
                            address_line_2: 337673 Hillside Court
                            admin_area_2: Anytown
                            admin_area_1: CA
                            postal_code: "98765"
                            country_code: US
                        email_address: merchant@example.com
                        phones:
                            - country_code: "001"
                              national_number: "4085551234"
                              phone_type: MOBILE
                        website: www.test.com
                        tax_id: ABcNkWSfb5ICTt73nD3QON1fnnpgNKBy-Jb5SeuGj185MNNw6g
                        logo_url: https://example.com/logo.PNG
                        additional_notes: 2-4
                    primary_recipients:
                        - billing_info:
                            name:
                                given_name: Stephanie
                                surname: Meyers
                            address:
                                address_line_1: 1234 Main Street
                                admin_area_2: Anytown
                                admin_area_1: CA
                                postal_code: "98765"
                                country_code: US
                            email_address: bill-me@example.com
                            phones:
                                - country_code: "001"
                                  national_number: "4884551234"
                                  phone_type: MOBILE
                            additional_info: add-info
                          shipping_info:
                            name:
                                given_name: Stephanie
                                surname: Meyers
                            address:
                                address_line_1: 1234 Main Street
                                admin_area_2: Anytown
                                admin_area_1: CA
                                postal_code: "98765"
                                country_code: US
                    additional_recipients:
                        - inform-me@example.com
                    items:
                        - name: Yoga Mat
                          description: new watch
                          quantity: "1"
                          unit_amount:
                            currency_code: USD
                            value: "50.00"
                          tax:
                            name: Sales Tax
                            percent: "7.25"
                          discount:
                            percent: "5"
                          unit_of_measure: QUANTITY
                        - name: Yoga T Shirt
                          quantity: "1"
                          unit_amount:
                            currency_code: USD
                            value: "10.00"
                          tax:
                            name: Sales Tax
                            percent: "7.25"
                          discount:
                            amount:
                                currency_code: USD
                                value: "5.00"
                          unit_of_measure: QUANTITY
                    amount:
                        currency_code: USD
                        value: "74.21"
                        breakdown:
                            custom:
                                label: Packing Charges
                                amount:
                                    currency_code: USD
                                    value: "10.00"
                            shipping:
                                amount:
                                    currency_code: USD
                                    value: "10.00"
                                tax:
                                    name: Sales Tax
                                    percent: "7.25"
                            discount:
                                invoice_discount:
                                    percent: "5"
                settings:
                    template_item_settings:
                        - field_name: ITEMS_DATE
                          display_preference:
                            hidden: true
                        - field_name: ITEMS_DISCOUNT
                          display_preference:
                            hidden: false
                        - field_name: ITEMS_TAX
                          display_preference:
                            hidden: false
                        - field_name: ITEMS_DESCRIPTION
                          display_preference:
                            hidden: false
                        - field_name: ITEMS_QUANTITY
                          display_preference:
                            hidden: true
                    template_subtotal_settings:
                        - field_name: CUSTOM
                          display_preference:
                            hidden: false
                        - field_name: DISCOUNT
                          display_preference:
                            hidden: false
                        - field_name: SHIPPING
                          display_preference:
                            hidden: false
                unit_of_measure: QUANTITY
                standard_template: false
        template_1:
            value:
                default_template: true
                template_info:
                    configuration:
                        tax_calculated_after_discount: true
                        tax_inclusive: false
                        allow_tip: true
                        partial_payment:
                            allow_partial_payment: true
                            minimum_amount_due:
                                currency_code: USD
                                value: "20.00"
                    detail:
                        reference: deal-ref
                        note: Thank you for your business.
                        currency_code: USD
                        terms_and_conditions: No refunds after 30 days.
                        memo: This is a long contract
                        attachments:
                            - id: Screen Shot 2018-11-23 at 16.45.01.png
                              reference_url: https://api-m.paypal.com/invoice/payerView/attachments/RkG9ggQbd4Mwm1tYdcF6uuixfFTFq32bBdbE1VbtQLdKSoS2ZOYpfjw9gPp7eTrZmVaFaDWzixHXm-OXWHbmigHigHzURDxJs8IIKqcqP8jawnBEZcraEAPVMULxf5iTyOSpAUc2ugW0PWdwDbM6mg-guFAUyj3Z98H7htWNjQY95jb9heOlcSXUe.sbDUR9smAszzzJoA1NXT6rEEegwQ&version=1&sig=JNODB0xEayW8txMQm6ZsIwDnd4eh3hd6ijiRLi4ipHE
                        payment_term:
                            term_type: NET_10
                    invoicer:
                        name:
                            given_name: David
                            surname: Larusso
                        address:
                            address_line_1: 1234 First Street
                            address_line_2: 337673 Hillside Court
                            admin_area_2: Anytown
                            admin_area_1: CA
                            postal_code: "98765"
                            country_code: US
                        email_address: merchant@example.com
                        phones:
                            - country_code: "001"
                              national_number: "4085551234"
                              phone_type: MOBILE
                        website: www.test.com
                        tax_id: ABcNkWSfb5ICTt73nD3QON1fnnpgNKBy-Jb5SeuGj185MNNw6g
                        logo_url: https://example.com/logo.PNG
                        additional_notes: 2-4
                    primary_recipients:
                        - billing_info:
                            name:
                                given_name: Stephanie
                                surname: Meyers
                            address:
                                address_line_1: 1234 Main Street
                                admin_area_2: Anytown
                                admin_area_1: CA
                                postal_code: "98765"
                                country_code: US
                            email_address: bill-me@example.com
                            phones:
                                - country_code: "001"
                                  national_number: "4884551234"
                                  phone_type: MOBILE
                            additional_info: add-info
                          shipping_info:
                            name:
                                given_name: Stephanie
                                surname: Meyers
                            address:
                                address_line_1: 1234 Main Street
                                admin_area_2: Anytown
                                admin_area_1: CA
                                postal_code: "98765"
                                country_code: US
                    additional_recipients:
                        - inform-me@example.com
                    items:
                        - name: Yoga Mat
                          description: new watch
                          quantity: "1"
                          unit_amount:
                            currency_code: USD
                            value: "50.00"
                          tax:
                            name: Sales Tax
                            percent: "7.25"
                          discount:
                            percent: "5"
                          unit_of_measure: QUANTITY
                        - name: Yoga T Shirt
                          quantity: "1"
                          unit_amount:
                            currency_code: USD
                            value: "10.00"
                          tax:
                            name: Sales Tax
                            percent: "7.25"
                          discount:
                            amount:
                                currency_code: USD
                                value: "5.00"
                          unit_of_measure: QUANTITY
                    amount:
                        currency_code: USD
                        value: "74.21"
                        breakdown:
                            custom:
                                label: Packing Charges
                                amount:
                                    currency_code: USD
                                    value: "10.00"
                            shipping:
                                amount:
                                    currency_code: USD
                                    value: "10.00"
                                tax:
                                    name: Sales Tax
                                    percent: "7.25"
                            discount:
                                invoice_discount:
                                    percent: "5"
                settings:
                    template_item_settings:
                        - field_name: ITEMS_DATE
                          display_preference:
                            hidden: true
                        - field_name: ITEMS_DISCOUNT
                          display_preference:
                            hidden: false
                        - field_name: ITEMS_TAX
                          display_preference:
                            hidden: false
                        - field_name: ITEMS_DESCRIPTION
                          display_preference:
                            hidden: false
                        - field_name: ITEMS_QUANTITY
                          display_preference:
                            hidden: true
                    template_subtotal_settings:
                        - field_name: CUSTOM
                          display_preference:
                            hidden: false
                        - field_name: DISCOUNT
                          display_preference:
                            hidden: false
                        - field_name: SHIPPING
                          display_preference:
                            hidden: false
                unit_of_measure: QUANTITY
                standard_template: false
        notification_invoice:
            value:
                send_to_invoicer: true
        notification_invoice_cancel:
            value:
                subject: Invoice Cancelled
                note: Cancelling the invoice
                send_to_invoicer: true
                send_to_recipient: true
                additional_recipients:
                    - user@example.com
        notification_reminder:
            value:
                subject: 'Reminder: Payment due for the invoice #ABC-123'
                note: Please pay before the due date to avoid incurring late payment charges which will be adjusted in the next bill generated.
                send_to_invoicer: true
                additional_recipients:
                    - customer-a@example.com
                    - customer@example.com
